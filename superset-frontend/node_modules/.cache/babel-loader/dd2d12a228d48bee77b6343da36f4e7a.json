{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _isNil from \"lodash/isNil\";import _isEmpty from \"lodash/isEmpty\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { styled, SupersetClient, t } from '@superset-ui/core';\n\nimport Icon from 'src/components/Icon';\nimport Modal from 'src/common/components/Modal';\nimport TableSelector from 'src/components/TableSelector';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport { createErrorHandler } from 'src/views/CRUD/utils';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst StyledIcon = styled(Icon)`\n  margin: auto ${({ theme }) => theme.gridUnit * 2}px auto 0;\n`;\nconst TableSelectorContainer = styled.div`\n  padding-bottom: 340px;\n  width: 65%;\n`;\nconst DatasetModal = ({ addDangerToast, addSuccessToast, onDatasetAdd, onHide, show }) => {\n  const [currentSchema, setSchema] = useState('');\n  const [currentTableName, setTableName] = useState('');\n  const [datasourceId, setDatasourceId] = useState(0);\n  const [disableSave, setDisableSave] = useState(true);\n  const onChange = ({ dbId, schema, tableName }) => {\n    setDatasourceId(dbId);\n    setDisableSave(_isNil(dbId) || _isEmpty(tableName));\n    setSchema(schema);\n    setTableName(tableName);\n  };\n  const onSave = () => {\n    SupersetClient.post({\n      endpoint: '/api/v1/dataset/',\n      body: _JSON$stringify({\n        database: datasourceId,\n        ...(currentSchema ? { schema: currentSchema } : {}),\n        table_name: currentTableName }),\n\n      headers: { 'Content-Type': 'application/json' } }).\n\n    then(({ json = {} }) => {\n      if (onDatasetAdd) {\n        onDatasetAdd({ id: json.id, ...json.result });\n      }\n      addSuccessToast(t('The dataset has been saved'));\n      onHide();\n    }).\n    catch(createErrorHandler(errMsg => addDangerToast(t('Error while saving dataset: %s', errMsg.table_name))));\n  };\n  return ___EmotionJSX(Modal, { disablePrimaryButton: disableSave, onHandledPrimaryAction: onSave, onHide: onHide, primaryButtonName: t('Add'), show: show, title: ___EmotionJSX(React.Fragment, null,\n    ___EmotionJSX(StyledIcon, { name: \"warning-solid\" }),\n    t('Add Dataset')) },\n\n  ___EmotionJSX(TableSelectorContainer, null,\n  ___EmotionJSX(TableSelector, { clearable: false, dbId: datasourceId, formMode: true, handleError: addDangerToast, onChange: onChange, schema: currentSchema, tableName: currentTableName })));\n\n\n};__signature__(DatasetModal, \"useState{[currentSchema, setSchema]('')}\\nuseState{[currentTableName, setTableName]('')}\\nuseState{[datasourceId, setDatasourceId](0)}\\nuseState{[disableSave, setDisableSave](true)}\");const _default =\nwithToasts(DatasetModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledIcon, \"StyledIcon\", \"/app/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx\");reactHotLoader.register(TableSelectorContainer, \"TableSelectorContainer\", \"/app/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx\");reactHotLoader.register(DatasetModal, \"DatasetModal\", \"/app/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/views/CRUD/data/dataset/AddDatasetModal.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { FunctionComponent, useState } from 'react';\nimport { styled, SupersetClient, t } from '@superset-ui/core';\nimport { isEmpty, isNil } from 'lodash';\nimport Icon from 'src/components/Icon';\nimport Modal from 'src/common/components/Modal';\nimport TableSelector from 'src/components/TableSelector';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport { createErrorHandler } from 'src/views/CRUD/utils';\n\ntype DatasetAddObject = {\n  id: number;\n  database: number;\n  schema: string;\n  table_name: string;\n};\ninterface DatasetModalProps {\n  addDangerToast: (msg: string) => void;\n  addSuccessToast: (msg: string) => void;\n  onDatasetAdd?: (dataset: DatasetAddObject) => void;\n  onHide: () => void;\n  show: boolean;\n}\n\nconst StyledIcon = styled(Icon)`\n  margin: auto ${({ theme }) => theme.gridUnit * 2}px auto 0;\n`;\n\nconst TableSelectorContainer = styled.div`\n  padding-bottom: 340px;\n  width: 65%;\n`;\n\nconst DatasetModal: FunctionComponent<DatasetModalProps> = ({\n  addDangerToast,\n  addSuccessToast,\n  onDatasetAdd,\n  onHide,\n  show,\n}) => {\n  const [currentSchema, setSchema] = useState('');\n  const [currentTableName, setTableName] = useState('');\n  const [datasourceId, setDatasourceId] = useState<number>(0);\n  const [disableSave, setDisableSave] = useState(true);\n\n  const onChange = ({\n    dbId,\n    schema,\n    tableName,\n  }: {\n    dbId: number;\n    schema: string;\n    tableName: string;\n  }) => {\n    setDatasourceId(dbId);\n    setDisableSave(isNil(dbId) || isEmpty(tableName));\n    setSchema(schema);\n    setTableName(tableName);\n  };\n\n  const onSave = () => {\n    SupersetClient.post({\n      endpoint: '/api/v1/dataset/',\n      body: JSON.stringify({\n        database: datasourceId,\n        ...(currentSchema ? { schema: currentSchema } : {}),\n        table_name: currentTableName,\n      }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then(({ json = {} }) => {\n        if (onDatasetAdd) {\n          onDatasetAdd({ id: json.id, ...json.result });\n        }\n        addSuccessToast(t('The dataset has been saved'));\n        onHide();\n      })\n      .catch(\n        createErrorHandler((errMsg: unknown) =>\n          addDangerToast(\n            t(\n              'Error while saving dataset: %s',\n              (errMsg as { table_name?: string }).table_name,\n            ),\n          ),\n        ),\n      );\n  };\n\n  return (\n    <Modal\n      disablePrimaryButton={disableSave}\n      onHandledPrimaryAction={onSave}\n      onHide={onHide}\n      primaryButtonName={t('Add')}\n      show={show}\n      title={\n        <>\n          <StyledIcon name=\"warning-solid\" />\n          {t('Add Dataset')}\n        </>\n      }\n    >\n      <TableSelectorContainer>\n        <TableSelector\n          clearable={false}\n          dbId={datasourceId}\n          formMode\n          handleError={addDangerToast}\n          onChange={onChange}\n          schema={currentSchema}\n          tableName={currentTableName}\n        />\n      </TableSelectorContainer>\n    </Modal>\n  );\n};\n\nexport default withToasts(DatasetModal);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}