{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DragDropManager } from 'dnd-core';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nlet defaultManager;\n\n// we use this method to ensure that there is a singleton of the DragDropManager\n// within the app this seems to work fine, but in tests multiple are initialized\n// see this issue for more details https://github.com/react-dnd/react-dnd/issues/186\n// @TODO re-evaluate whether this is required when we move to jest\n// the alternative is simply using an HOC like:\n//  DragDropContext(HTML5Backend)(DashboardBuilder);\nexport default function getDragDropManager() {\n  if (!defaultManager) {\n    defaultManager = new DragDropManager(HTML5Backend);\n  }\n  return defaultManager;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(defaultManager, \"defaultManager\", \"/app/superset-frontend/src/dashboard/util/getDragDropManager.js\");reactHotLoader.register(getDragDropManager, \"getDragDropManager\", \"/app/superset-frontend/src/dashboard/util/getDragDropManager.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/util/getDragDropManager.js"],"names":["DragDropManager","HTML5Backend","defaultManager","getDragDropManager"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAT,QAAgC,UAAhC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,IAAIC,cAAJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,kBAAT,GAA8B;AAC3C,MAAI,CAACD,cAAL,EAAqB;AACnBA,IAAAA,cAAc,GAAG,IAAIF,eAAJ,CAAoBC,YAApB,CAAjB;AACD;AACD,SAAOC,cAAP;AACD,C,iLAbGA,c,+GAQoBC,kB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { DragDropManager } from 'dnd-core';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nlet defaultManager;\n\n// we use this method to ensure that there is a singleton of the DragDropManager\n// within the app this seems to work fine, but in tests multiple are initialized\n// see this issue for more details https://github.com/react-dnd/react-dnd/issues/186\n// @TODO re-evaluate whether this is required when we move to jest\n// the alternative is simply using an HOC like:\n//  DragDropContext(HTML5Backend)(DashboardBuilder);\nexport default function getDragDropManager() {\n  if (!defaultManager) {\n    defaultManager = new DragDropManager(HTML5Backend);\n  }\n  return defaultManager;\n}\n"]},"metadata":{},"sourceType":"module"}