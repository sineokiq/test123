{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { t } from '@superset-ui/core';\n\nimport ModalTrigger from '../../components/ModalTrigger';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nSyntaxHighlighter.registerLanguage('sql', sql);\n\nconst defaultProps = {\n  maxWidth: 50,\n  maxLines: 5,\n  shrink: false };\n\n\nconst propTypes = {\n  sql: PropTypes.string.isRequired,\n  rawSql: PropTypes.string,\n  maxWidth: PropTypes.number,\n  maxLines: PropTypes.number,\n  shrink: PropTypes.bool };\n\n\nclass HighlightedSql extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalBody: null };\n\n  }\n\n  shrinkSql() {\n    const ssql = this.props.sql || '';\n    let lines = ssql.split('\\n');\n    if (lines.length >= this.props.maxLines) {\n      lines = _sliceInstanceProperty(lines).call(lines, 0, this.props.maxLines);\n      lines.push('{...}');\n    }\n    return _mapInstanceProperty(lines).call(lines,\n    line => {\n      if (line.length > this.props.maxWidth) {\n        return `${_sliceInstanceProperty(line).call(line, 0, this.props.maxWidth)}{...}`;\n      }\n      return line;\n    }).\n    join('\\n');\n  }\n\n  triggerNode() {\n    const shownSql = this.props.shrink ?\n    this.shrinkSql(this.props.sql) :\n    this.props.sql;\n    return (\n      ___EmotionJSX(SyntaxHighlighter, { language: \"sql\", style: github },\n      shownSql));\n\n\n  }\n\n  generateModal() {\n    let rawSql;\n    if (this.props.rawSql && this.props.rawSql !== this.props.sql) {\n      rawSql =\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(\"h4\", null, t('Raw SQL')),\n      ___EmotionJSX(SyntaxHighlighter, { language: \"sql\", style: github },\n      this.props.rawSql));\n\n\n\n    }\n    this.setState({\n      modalBody:\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(\"h4\", null, t('Source SQL')),\n      ___EmotionJSX(SyntaxHighlighter, { language: \"sql\", style: github },\n      this.props.sql),\n\n      rawSql) });\n\n\n\n  }\n\n  render() {var _context;\n    return (\n      ___EmotionJSX(ModalTrigger, {\n        modalTitle: t('SQL'),\n        triggerNode: this.triggerNode(),\n        modalBody: this.state.modalBody,\n        beforeOpen: _bindInstanceProperty(_context = this.generateModal).call(_context, this) }));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}HighlightedSql.propTypes = propTypes;\nHighlightedSql.defaultProps = defaultProps;const _default =\n\nHighlightedSql;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/SqlLab/components/HighlightedSql.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/SqlLab/components/HighlightedSql.jsx\");reactHotLoader.register(HighlightedSql, \"HighlightedSql\", \"/app/superset-frontend/src/SqlLab/components/HighlightedSql.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/HighlightedSql.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/HighlightedSql.jsx"],"names":["React","PropTypes","SyntaxHighlighter","sql","github","t","ModalTrigger","registerLanguage","defaultProps","maxWidth","maxLines","shrink","propTypes","string","isRequired","rawSql","number","bool","HighlightedSql","Component","constructor","props","state","modalBody","shrinkSql","ssql","lines","split","length","push","line","join","triggerNode","shownSql","generateModal","setState","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport sql from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { t } from '@superset-ui/core';\n\nimport ModalTrigger from '../../components/ModalTrigger';\n\nSyntaxHighlighter.registerLanguage('sql', sql);\n\nconst defaultProps = {\n  maxWidth: 50,\n  maxLines: 5,\n  shrink: false,\n};\n\nconst propTypes = {\n  sql: PropTypes.string.isRequired,\n  rawSql: PropTypes.string,\n  maxWidth: PropTypes.number,\n  maxLines: PropTypes.number,\n  shrink: PropTypes.bool,\n};\n\nclass HighlightedSql extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalBody: null,\n    };\n  }\n\n  shrinkSql() {\n    const ssql = this.props.sql || '';\n    let lines = ssql.split('\\n');\n    if (lines.length >= this.props.maxLines) {\n      lines = lines.slice(0, this.props.maxLines);\n      lines.push('{...}');\n    }\n    return lines\n      .map(line => {\n        if (line.length > this.props.maxWidth) {\n          return `${line.slice(0, this.props.maxWidth)}{...}`;\n        }\n        return line;\n      })\n      .join('\\n');\n  }\n\n  triggerNode() {\n    const shownSql = this.props.shrink\n      ? this.shrinkSql(this.props.sql)\n      : this.props.sql;\n    return (\n      <SyntaxHighlighter language=\"sql\" style={github}>\n        {shownSql}\n      </SyntaxHighlighter>\n    );\n  }\n\n  generateModal() {\n    let rawSql;\n    if (this.props.rawSql && this.props.rawSql !== this.props.sql) {\n      rawSql = (\n        <div>\n          <h4>{t('Raw SQL')}</h4>\n          <SyntaxHighlighter language=\"sql\" style={github}>\n            {this.props.rawSql}\n          </SyntaxHighlighter>\n        </div>\n      );\n    }\n    this.setState({\n      modalBody: (\n        <div>\n          <h4>{t('Source SQL')}</h4>\n          <SyntaxHighlighter language=\"sql\" style={github}>\n            {this.props.sql}\n          </SyntaxHighlighter>\n          {rawSql}\n        </div>\n      ),\n    });\n  }\n\n  render() {\n    return (\n      <ModalTrigger\n        modalTitle={t('SQL')}\n        triggerNode={this.triggerNode()}\n        modalBody={this.state.modalBody}\n        beforeOpen={this.generateModal.bind(this)}\n      />\n    );\n  }\n}\nHighlightedSql.propTypes = propTypes;\nHighlightedSql.defaultProps = defaultProps;\n\nexport default HighlightedSql;\n"]},"metadata":{},"sourceType":"module"}