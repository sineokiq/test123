{"ast":null,"code":"import _extends from \"@babel/runtime-corejs3/helpers/extends\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\n// Current version of react-dnd (2.5.4) doesn't work well with typescript\n// TODO: remove ts-ignore after we upgrade react-dnd\n// @ts-ignore\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { styled, useTheme } from '@superset-ui/core';\nimport { ColumnOption } from '@superset-ui/chart-controls';\nimport Icon from 'src/components/Icon';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst TYPE = 'label-dnd';\nconst DragContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\nconst OptionControlContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  height: ${({ theme }) => theme.gridUnit * 6}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light3};\n  border-radius: 3px;\n  cursor: ${({ isAdhoc }) => isAdhoc ? 'pointer' : 'default'};\n`;\nconst Label = styled.div`\n  display: inline-block;\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  align-items: center;\n  white-space: nowrap;\n  padding-left: ${({ theme }) => theme.gridUnit}px;\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n  .option-label {\n    display: inline;\n  }\n`;\nconst CaretContainer = styled.div`\n  height: 100%;\n  border-left: solid 1px ${({ theme }) => theme.colors.grayscale.dark2}0C;\n  margin-left: auto;\n`;\nconst CloseContainer = styled.div`\n  height: 100%;\n  width: ${({ theme }) => theme.gridUnit * 6}px;\n  border-right: solid 1px ${({ theme }) => theme.colors.grayscale.dark2}0C;\n  cursor: pointer;\n`;\nexport const HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const LabelsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit}px;\n  border: solid 1px ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n`;\nexport const AddControlLabel = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: ${({ theme }) => theme.gridUnit * 6}px;\n  padding-left: ${({ theme }) => theme.gridUnit}px;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n  border: dashed 1px ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n  cursor: pointer;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.grayscale.light4};\n  }\n\n  :active {\n    background-color: ${({ theme }) => theme.colors.grayscale.light3};\n  }\n`;\nexport const AddIconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${({ theme }) => theme.gridUnit * 4}px;\n  width: ${({ theme }) => theme.gridUnit * 4}px;\n  padding: 0;\n  background-color: ${({ theme }) => theme.colors.primary.dark1};\n  border: none;\n  border-radius: 2px;\n\n  :disabled {\n    cursor: not-allowed;\n    background-color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\nconst labelSource = {\n  beginDrag({ index, type }) {\n    return {\n      index,\n      type };\n\n  } };\n\nconst labelTarget = {\n  hover(props, monitor, component) {var _findDOMNode;\n    const { index: dragIndex, type: dragType } = monitor.getItem();\n    const { index: hoverIndex, type: hoverType } = props;\n    // Don't replace items with themselves\n    // Don't allow to drag items between filters and metrics boxes\n    if (dragIndex === hoverIndex || dragType !== hoverType) {\n      return;\n    }\n    // Determine rectangle on screen\n    // TODO: refactor with references when we upgrade react-dnd\n    // For now we disable warnings about findDOMNode, but we should refactor after we upgrade react-dnd\n    // Current version (2.5.4) doesn't work well with refs\n    // @ts-ignore\n    // eslint-disable-next-line react/no-find-dom-node\n    const hoverBoundingRect = (_findDOMNode = findDOMNode(component)) == null ? void 0 : _findDOMNode.getBoundingClientRect();\n    // Get vertical middle\n    const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n    // Determine mouse position\n    const clientOffset = monitor.getClientOffset();\n    // Get pixels to the top\n    const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n    // Only perform the move when the mouse has crossed half of the items height\n    // When dragging downwards, only move when the cursor is below 50%\n    // When dragging upwards, only move when the cursor is above 50%\n    // Dragging downwards\n    if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n      return;\n    }\n    // Dragging upwards\n    if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n      return;\n    }\n    // Time to actually perform the action\n    props.onMoveLabel == null ? void 0 : props.onMoveLabel(dragIndex, hoverIndex);\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    // eslint-disable-next-line no-param-reassign\n    monitor.getItem().index = hoverIndex;\n  },\n  drop(props) {\n    return props.onDropLabel == null ? void 0 : props.onDropLabel();\n  } };\n\nexport const OptionControlLabel = ({ label, savedMetric, onRemove, isAdhoc, isFunction, isDraggable, connectDragSource, connectDropTarget, ...props }) => {\n  const theme = useTheme();\n  const getLabelContent = () => {\n    if (savedMetric != null && savedMetric.metric_name) {\n      // add column_name to fix typescript error\n      const column = { ...savedMetric, column_name: '' };\n      if (!column.verbose_name) {\n        column.verbose_name = column.metric_name;\n      }\n      return ___EmotionJSX(ColumnOption, { column: column });\n    }\n    return label;\n  };\n  const getOptionControlContent = () => ___EmotionJSX(OptionControlContainer, _extends({ isAdhoc: isAdhoc, \"data-test\": \"option-label\" }, props),\n  ___EmotionJSX(CloseContainer, { role: \"button\", \"data-test\": \"remove-control-button\", onClick: onRemove },\n  ___EmotionJSX(Icon, { name: \"x-small\", color: theme.colors.grayscale.light1 })),\n\n  ___EmotionJSX(Label, { \"data-test\": \"control-label\" },\n  isFunction && ___EmotionJSX(Icon, { name: \"function\", viewBox: \"0 0 16 11\" }),\n  getLabelContent()),\n\n  isAdhoc && ___EmotionJSX(CaretContainer, null,\n  ___EmotionJSX(Icon, { name: \"caret-right\", color: theme.colors.grayscale.light1 })));\n\n\n  return ___EmotionJSX(DragContainer, null,\n  isDraggable ?\n  connectDragSource(connectDropTarget(___EmotionJSX(\"div\", null, getOptionControlContent()))) :\n  getOptionControlContent());\n\n};__signature__(OptionControlLabel, \"useTheme{theme}\", () => [useTheme]);\nexport const DraggableOptionControlLabel = DropTarget(TYPE, labelTarget, connect => ({\n  connectDropTarget: connect.dropTarget() }))(\nDragSource(TYPE, labelSource, connect => ({\n  connectDragSource: connect.dragSource(),\n  isDraggable: true }))(\nOptionControlLabel));\nDraggableOptionControlLabel.displayName = 'DraggableOptionControlLabel';;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TYPE, \"TYPE\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(DragContainer, \"DragContainer\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(OptionControlContainer, \"OptionControlContainer\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(Label, \"Label\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(CaretContainer, \"CaretContainer\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(CloseContainer, \"CloseContainer\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(HeaderContainer, \"HeaderContainer\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(LabelsContainer, \"LabelsContainer\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(AddControlLabel, \"AddControlLabel\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(AddIconButton, \"AddIconButton\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(labelSource, \"labelSource\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(labelTarget, \"labelTarget\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(OptionControlLabel, \"OptionControlLabel\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");reactHotLoader.register(DraggableOptionControlLabel, \"DraggableOptionControlLabel\", \"/app/superset-frontend/src/explore/components/OptionControls.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/OptionControls.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\n// Current version of react-dnd (2.5.4) doesn't work well with typescript\n// TODO: remove ts-ignore after we upgrade react-dnd\n// @ts-ignore\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { styled, useTheme } from '@superset-ui/core';\nimport { ColumnOption } from '@superset-ui/chart-controls';\nimport Icon from 'src/components/Icon';\nimport { savedMetricType } from 'src/explore/components/controls/MetricControl/types';\n\nconst TYPE = 'label-dnd';\n\nconst DragContainer = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit}px;\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst OptionControlContainer = styled.div<{\n  isAdhoc?: boolean;\n}>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  height: ${({ theme }) => theme.gridUnit * 6}px;\n  background-color: ${({ theme }) => theme.colors.grayscale.light3};\n  border-radius: 3px;\n  cursor: ${({ isAdhoc }) => (isAdhoc ? 'pointer' : 'default')};\n`;\n\nconst Label = styled.div`\n  display: inline-block;\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  align-items: center;\n  white-space: nowrap;\n  padding-left: ${({ theme }) => theme.gridUnit}px;\n  svg {\n    margin-right: ${({ theme }) => theme.gridUnit}px;\n  }\n  .option-label {\n    display: inline;\n  }\n`;\n\nconst CaretContainer = styled.div`\n  height: 100%;\n  border-left: solid 1px ${({ theme }) => theme.colors.grayscale.dark2}0C;\n  margin-left: auto;\n`;\n\nconst CloseContainer = styled.div`\n  height: 100%;\n  width: ${({ theme }) => theme.gridUnit * 6}px;\n  border-right: solid 1px ${({ theme }) => theme.colors.grayscale.dark2}0C;\n  cursor: pointer;\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const LabelsContainer = styled.div`\n  padding: ${({ theme }) => theme.gridUnit}px;\n  border: solid 1px ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n`;\n\nexport const AddControlLabel = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: ${({ theme }) => theme.gridUnit * 6}px;\n  padding-left: ${({ theme }) => theme.gridUnit}px;\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  color: ${({ theme }) => theme.colors.grayscale.light1};\n  border: dashed 1px ${({ theme }) => theme.colors.grayscale.light2};\n  border-radius: ${({ theme }) => theme.gridUnit}px;\n  cursor: pointer;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.grayscale.light4};\n  }\n\n  :active {\n    background-color: ${({ theme }) => theme.colors.grayscale.light3};\n  }\n`;\n\nexport const AddIconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: ${({ theme }) => theme.gridUnit * 4}px;\n  width: ${({ theme }) => theme.gridUnit * 4}px;\n  padding: 0;\n  background-color: ${({ theme }) => theme.colors.primary.dark1};\n  border: none;\n  border-radius: 2px;\n\n  :disabled {\n    cursor: not-allowed;\n    background-color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n`;\n\nconst labelSource = {\n  beginDrag({ index, type }: { index: number; type: string }) {\n    return {\n      index,\n      type,\n    };\n  },\n};\n\nconst labelTarget = {\n  hover(props: Record<string, any>, monitor: any, component: any) {\n    const { index: dragIndex, type: dragType } = monitor.getItem();\n    const { index: hoverIndex, type: hoverType } = props;\n\n    // Don't replace items with themselves\n    // Don't allow to drag items between filters and metrics boxes\n    if (dragIndex === hoverIndex || dragType !== hoverType) {\n      return;\n    }\n\n    // Determine rectangle on screen\n    // TODO: refactor with references when we upgrade react-dnd\n    // For now we disable warnings about findDOMNode, but we should refactor after we upgrade react-dnd\n    // Current version (2.5.4) doesn't work well with refs\n    // @ts-ignore\n    // eslint-disable-next-line react/no-find-dom-node\n    const hoverBoundingRect = findDOMNode(component)?.getBoundingClientRect();\n\n    // Get vertical middle\n    const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n    // Determine mouse position\n    const clientOffset = monitor.getClientOffset();\n\n    // Get pixels to the top\n    const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n    // Only perform the move when the mouse has crossed half of the items height\n    // When dragging downwards, only move when the cursor is below 50%\n    // When dragging upwards, only move when the cursor is above 50%\n\n    // Dragging downwards\n    if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n      return;\n    }\n\n    // Dragging upwards\n    if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.onMoveLabel?.(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    // eslint-disable-next-line no-param-reassign\n    monitor.getItem().index = hoverIndex;\n  },\n  drop(props: Record<string, any>) {\n    return props.onDropLabel?.();\n  },\n};\n\nexport const OptionControlLabel = ({\n  label,\n  savedMetric,\n  onRemove,\n  isAdhoc,\n  isFunction,\n  isDraggable,\n  connectDragSource,\n  connectDropTarget,\n  ...props\n}: {\n  label: string | React.ReactNode;\n  savedMetric?: savedMetricType;\n  onRemove: () => void;\n  isAdhoc?: boolean;\n  isFunction?: boolean;\n  isDraggable?: boolean;\n  connectDragSource?: any;\n  connectDropTarget?: any;\n}) => {\n  const theme = useTheme();\n  const getLabelContent = () => {\n    if (savedMetric?.metric_name) {\n      // add column_name to fix typescript error\n      const column = { ...savedMetric, column_name: '' };\n      if (!column.verbose_name) {\n        column.verbose_name = column.metric_name;\n      }\n      return <ColumnOption column={column} />;\n    }\n    return label;\n  };\n\n  const getOptionControlContent = () => (\n    <OptionControlContainer\n      isAdhoc={isAdhoc}\n      data-test=\"option-label\"\n      {...props}\n    >\n      <CloseContainer\n        role=\"button\"\n        data-test=\"remove-control-button\"\n        onClick={onRemove}\n      >\n        <Icon name=\"x-small\" color={theme.colors.grayscale.light1} />\n      </CloseContainer>\n      <Label data-test=\"control-label\">\n        {isFunction && <Icon name=\"function\" viewBox=\"0 0 16 11\" />}\n        {getLabelContent()}\n      </Label>\n      {isAdhoc && (\n        <CaretContainer>\n          <Icon name=\"caret-right\" color={theme.colors.grayscale.light1} />\n        </CaretContainer>\n      )}\n    </OptionControlContainer>\n  );\n\n  return (\n    <DragContainer>\n      {isDraggable\n        ? connectDragSource(\n            connectDropTarget(<div>{getOptionControlContent()}</div>),\n          )\n        : getOptionControlContent()}\n    </DragContainer>\n  );\n};\n\nexport const DraggableOptionControlLabel = DropTarget(\n  TYPE,\n  labelTarget,\n  (connect: any) => ({\n    connectDropTarget: connect.dropTarget(),\n  }),\n)(\n  DragSource(TYPE, labelSource, (connect: any) => ({\n    connectDragSource: connect.dragSource(),\n    isDraggable: true,\n  }))(OptionControlLabel),\n);\n\nDraggableOptionControlLabel.displayName = 'DraggableOptionControlLabel';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}