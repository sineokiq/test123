{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport columnType from 'src/explore/propTypes/columnType';\nimport { DraggableOptionControlLabel } from 'src/explore/components/OptionControls';\nimport { OPTION_TYPES } from 'src/explore/components/optionTypes';\nimport AdhocMetric from './AdhocMetric';\nimport savedMetricType from './savedMetricType';\nimport AdhocMetricPopoverTrigger from './AdhocMetricPopoverTrigger';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  adhocMetric: PropTypes.instanceOf(AdhocMetric),\n  onMetricEdit: PropTypes.func.isRequired,\n  onRemoveMetric: PropTypes.func,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  savedMetric: savedMetricType,\n  datasourceType: PropTypes.string,\n  onMoveLabel: PropTypes.func,\n  onDropLabel: PropTypes.func,\n  index: PropTypes.number };\n\n\nclass AdhocMetricOption extends React.PureComponent {\n  constructor(props) {var _context;\n    super(props);\n    this.onRemoveMetric = _bindInstanceProperty(_context = this.onRemoveMetric).call(_context, this);\n  }\n\n  onRemoveMetric(e) {\n    e.stopPropagation();\n    this.props.onRemoveMetric();\n  }\n\n  render() {\n    const {\n      adhocMetric,\n      onMetricEdit,\n      columns,\n      savedMetricsOptions,\n      savedMetric,\n      datasourceType,\n      onMoveLabel,\n      onDropLabel,\n      index } =\n    this.props;\n    return (\n      ___EmotionJSX(AdhocMetricPopoverTrigger, {\n        adhocMetric: adhocMetric,\n        onMetricEdit: onMetricEdit,\n        columns: columns,\n        savedMetricsOptions: savedMetricsOptions,\n        savedMetric: savedMetric,\n        datasourceType: datasourceType },\n\n      ___EmotionJSX(Tooltip, {\n        placement: \"top\",\n        title: savedMetric.expression || adhocMetric.label },\n\n      ___EmotionJSX(DraggableOptionControlLabel, {\n        savedMetric: savedMetric,\n        label: adhocMetric.label,\n        onRemove: this.onRemoveMetric,\n        onMoveLabel: onMoveLabel,\n        onDropLabel: onDropLabel,\n        index: index,\n        type: OPTION_TYPES.metric,\n        isAdhoc: true,\n        isFunction: true }))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const _default =\nAdhocMetricOption;export default _default;\n\nAdhocMetricOption.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricOption.jsx\");reactHotLoader.register(AdhocMetricOption, \"AdhocMetricOption\", \"/app/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricOption.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricOption.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/controls/MetricControl/AdhocMetricOption.jsx"],"names":["React","PropTypes","Tooltip","columnType","DraggableOptionControlLabel","OPTION_TYPES","AdhocMetric","savedMetricType","AdhocMetricPopoverTrigger","propTypes","adhocMetric","instanceOf","onMetricEdit","func","isRequired","onRemoveMetric","columns","arrayOf","savedMetricsOptions","savedMetric","datasourceType","string","onMoveLabel","onDropLabel","index","number","AdhocMetricOption","PureComponent","constructor","props","e","stopPropagation","render","expression","label","metric"],"mappings":"gYAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,2BAAT,QAA4C,uCAA5C;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,yBAAP,MAAsC,6BAAtC,C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,WAAW,EAAET,SAAS,CAACU,UAAV,CAAqBL,WAArB,CADG;AAEhBM,EAAAA,YAAY,EAAEX,SAAS,CAACY,IAAV,CAAeC,UAFb;AAGhBC,EAAAA,cAAc,EAAEd,SAAS,CAACY,IAHV;AAIhBG,EAAAA,OAAO,EAAEf,SAAS,CAACgB,OAAV,CAAkBd,UAAlB,CAJO;AAKhBe,EAAAA,mBAAmB,EAAEjB,SAAS,CAACgB,OAAV,CAAkBV,eAAlB,CALL;AAMhBY,EAAAA,WAAW,EAAEZ,eANG;AAOhBa,EAAAA,cAAc,EAAEnB,SAAS,CAACoB,MAPV;AAQhBC,EAAAA,WAAW,EAAErB,SAAS,CAACY,IARP;AAShBU,EAAAA,WAAW,EAAEtB,SAAS,CAACY,IATP;AAUhBW,EAAAA,KAAK,EAAEvB,SAAS,CAACwB,MAVD,EAAlB;;;AAaA,MAAMC,iBAAN,SAAgC1B,KAAK,CAAC2B,aAAtC,CAAoD;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKd,cAAL,GAAsB,sCAAKA,cAAL,iBAAyB,IAAzB,CAAtB;AACD;;AAEDA,EAAAA,cAAc,CAACe,CAAD,EAAI;AAChBA,IAAAA,CAAC,CAACC,eAAF;AACA,SAAKF,KAAL,CAAWd,cAAX;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJtB,MAAAA,WADI;AAEJE,MAAAA,YAFI;AAGJI,MAAAA,OAHI;AAIJE,MAAAA,mBAJI;AAKJC,MAAAA,WALI;AAMJC,MAAAA,cANI;AAOJE,MAAAA,WAPI;AAQJC,MAAAA,WARI;AASJC,MAAAA,KATI;AAUF,SAAKK,KAVT;AAWA;AACE,oBAAC,yBAAD;AACE,QAAA,WAAW,EAAEnB,WADf;AAEE,QAAA,YAAY,EAAEE,YAFhB;AAGE,QAAA,OAAO,EAAEI,OAHX;AAIE,QAAA,mBAAmB,EAAEE,mBAJvB;AAKE,QAAA,WAAW,EAAEC,WALf;AAME,QAAA,cAAc,EAAEC,cANlB;;AAQE,oBAAC,OAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,KAAK,EAAED,WAAW,CAACc,UAAZ,IAA0BvB,WAAW,CAACwB,KAF/C;;AAIE,oBAAC,2BAAD;AACE,QAAA,WAAW,EAAEf,WADf;AAEE,QAAA,KAAK,EAAET,WAAW,CAACwB,KAFrB;AAGE,QAAA,QAAQ,EAAE,KAAKnB,cAHjB;AAIE,QAAA,WAAW,EAAEO,WAJf;AAKE,QAAA,WAAW,EAAEC,WALf;AAME,QAAA,KAAK,EAAEC,KANT;AAOE,QAAA,IAAI,EAAEnB,YAAY,CAAC8B,MAPrB;AAQE,QAAA,OAAO,MART;AASE,QAAA,UAAU,MATZ,GAJF,CARF,CADF;;;;;AA2BD,GAlDiD;AAAA;AAAA,6B;AAqDrCT,iB,CAAf;;AAEAA,iBAAiB,CAACjB,SAAlB,GAA8BA,SAA9B,C,iLApEMA,S,qIAaAiB,iB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport columnType from 'src/explore/propTypes/columnType';\nimport { DraggableOptionControlLabel } from 'src/explore/components/OptionControls';\nimport { OPTION_TYPES } from 'src/explore/components/optionTypes';\nimport AdhocMetric from './AdhocMetric';\nimport savedMetricType from './savedMetricType';\nimport AdhocMetricPopoverTrigger from './AdhocMetricPopoverTrigger';\n\nconst propTypes = {\n  adhocMetric: PropTypes.instanceOf(AdhocMetric),\n  onMetricEdit: PropTypes.func.isRequired,\n  onRemoveMetric: PropTypes.func,\n  columns: PropTypes.arrayOf(columnType),\n  savedMetricsOptions: PropTypes.arrayOf(savedMetricType),\n  savedMetric: savedMetricType,\n  datasourceType: PropTypes.string,\n  onMoveLabel: PropTypes.func,\n  onDropLabel: PropTypes.func,\n  index: PropTypes.number,\n};\n\nclass AdhocMetricOption extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.onRemoveMetric = this.onRemoveMetric.bind(this);\n  }\n\n  onRemoveMetric(e) {\n    e.stopPropagation();\n    this.props.onRemoveMetric();\n  }\n\n  render() {\n    const {\n      adhocMetric,\n      onMetricEdit,\n      columns,\n      savedMetricsOptions,\n      savedMetric,\n      datasourceType,\n      onMoveLabel,\n      onDropLabel,\n      index,\n    } = this.props;\n    return (\n      <AdhocMetricPopoverTrigger\n        adhocMetric={adhocMetric}\n        onMetricEdit={onMetricEdit}\n        columns={columns}\n        savedMetricsOptions={savedMetricsOptions}\n        savedMetric={savedMetric}\n        datasourceType={datasourceType}\n      >\n        <Tooltip\n          placement=\"top\"\n          title={savedMetric.expression || adhocMetric.label}\n        >\n          <DraggableOptionControlLabel\n            savedMetric={savedMetric}\n            label={adhocMetric.label}\n            onRemove={this.onRemoveMetric}\n            onMoveLabel={onMoveLabel}\n            onDropLabel={onDropLabel}\n            index={index}\n            type={OPTION_TYPES.metric}\n            isAdhoc\n            isFunction\n          />\n        </Tooltip>\n      </AdhocMetricPopoverTrigger>\n    );\n  }\n}\n\nexport default AdhocMetricOption;\n\nAdhocMetricOption.propTypes = propTypes;\n"]},"metadata":{},"sourceType":"module"}