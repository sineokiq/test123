{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { logEvent } from 'src/logger/actions';\nimport { addDangerToast } from 'src/messageToasts/actions';\nimport { componentLookup } from '../components/gridComponents';\nimport getDetailedComponentWidth from '../util/getDetailedComponentWidth';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { componentShape } from '../util/propShapes';\nimport { COLUMN_TYPE, ROW_TYPE } from '../util/componentTypes';\n\nimport {\ncreateComponent,\ndeleteComponent,\nupdateComponents,\nhandleComponentDrop } from\n'../actions/dashboardLayout';\nimport { setDirectPathToChild } from '../actions/dashboardState';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  createComponent: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n  dashboardId: PropTypes.number.isRequired,\n  isComponentVisible: PropTypes.bool };\n\n\nconst defaultProps = {\n  directPathToChild: [],\n  directPathLastUpdated: 0,\n  isComponentVisible: true };\n\n\n/**\n * Selects the chart scope of the filter input that has focus.\n *\n * @returns {{chartId: number, scope: { scope: string[], immune: string[] }} | null }\n * the scope of the currently focused filter, if any\n */\nfunction selectFocusedFilterScope(dashboardState, dashboardFilters) {\n  if (!dashboardState.focusedFilterField) return null;\n  const { chartId, column } = dashboardState.focusedFilterField;\n  return {\n    chartId,\n    scope: dashboardFilters[chartId].scopes[column] };\n\n}\n\nfunction mapStateToProps(\n{\n  dashboardLayout: undoableLayout,\n  dashboardState,\n  dashboardInfo,\n  dashboardFilters },\n\nownProps)\n{\n  const dashboardLayout = undoableLayout.present;\n  const { id, parentId } = ownProps;\n  const component = dashboardLayout[id];\n  const props = {\n    component,\n    parentComponent: dashboardLayout[parentId],\n    editMode: dashboardState.editMode,\n    undoLength: undoableLayout.past.length,\n    redoLength: undoableLayout.future.length,\n    filters: getActiveFilters(),\n    directPathToChild: dashboardState.directPathToChild,\n    directPathLastUpdated: dashboardState.directPathLastUpdated,\n    dashboardId: dashboardInfo.id,\n    focusedFilterScope: selectFocusedFilterScope(\n    dashboardState,\n    dashboardFilters) };\n\n\n\n  // rows and columns need more data about their child dimensions\n  // doing this allows us to not pass the entire component lookup to all Components\n  if (component) {\n    const componentType = component.type;\n    if (componentType === ROW_TYPE || componentType === COLUMN_TYPE) {\n      const { occupiedWidth, minimumWidth } = getDetailedComponentWidth({\n        id,\n        components: dashboardLayout });\n\n\n      if (componentType === ROW_TYPE) props.occupiedColumnCount = occupiedWidth;\n      if (componentType === COLUMN_TYPE) props.minColumnWidth = minimumWidth;\n    }\n  }\n\n  return props;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n  {\n    addDangerToast,\n    createComponent,\n    deleteComponent,\n    updateComponents,\n    handleComponentDrop,\n    setDirectPathToChild,\n    logEvent },\n\n  dispatch);\n\n}\n\nclass DashboardComponent extends React.PureComponent {\n  render() {\n    const { component } = this.props;\n    const Component = component ? componentLookup[component.type] : null;\n    return Component ? ___EmotionJSX(Component, this.props) : null;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDashboardComponent.propTypes = propTypes;\nDashboardComponent.defaultProps = defaultProps;const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(DashboardComponent);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(selectFocusedFilterScope, \"selectFocusedFilterScope\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(DashboardComponent, \"DashboardComponent\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/containers/DashboardComponent.jsx"],"names":["React","PropTypes","bindActionCreators","connect","logEvent","addDangerToast","componentLookup","getDetailedComponentWidth","getActiveFilters","componentShape","COLUMN_TYPE","ROW_TYPE","createComponent","deleteComponent","updateComponents","handleComponentDrop","setDirectPathToChild","propTypes","component","isRequired","parentComponent","func","directPathToChild","arrayOf","string","directPathLastUpdated","number","dashboardId","isComponentVisible","bool","defaultProps","selectFocusedFilterScope","dashboardState","dashboardFilters","focusedFilterField","chartId","column","scope","scopes","mapStateToProps","dashboardLayout","undoableLayout","dashboardInfo","ownProps","present","id","parentId","props","editMode","undoLength","past","length","redoLength","future","filters","focusedFilterScope","componentType","type","occupiedWidth","minimumWidth","components","occupiedColumnCount","minColumnWidth","mapDispatchToProps","dispatch","DashboardComponent","PureComponent","render","Component"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { logEvent } from 'src/logger/actions';\nimport { addDangerToast } from 'src/messageToasts/actions';\nimport { componentLookup } from '../components/gridComponents';\nimport getDetailedComponentWidth from '../util/getDetailedComponentWidth';\nimport { getActiveFilters } from '../util/activeDashboardFilters';\nimport { componentShape } from '../util/propShapes';\nimport { COLUMN_TYPE, ROW_TYPE } from '../util/componentTypes';\n\nimport {\n  createComponent,\n  deleteComponent,\n  updateComponents,\n  handleComponentDrop,\n} from '../actions/dashboardLayout';\nimport { setDirectPathToChild } from '../actions/dashboardState';\n\nconst propTypes = {\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  createComponent: PropTypes.func.isRequired,\n  deleteComponent: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  logEvent: PropTypes.func.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  directPathLastUpdated: PropTypes.number,\n  dashboardId: PropTypes.number.isRequired,\n  isComponentVisible: PropTypes.bool,\n};\n\nconst defaultProps = {\n  directPathToChild: [],\n  directPathLastUpdated: 0,\n  isComponentVisible: true,\n};\n\n/**\n * Selects the chart scope of the filter input that has focus.\n *\n * @returns {{chartId: number, scope: { scope: string[], immune: string[] }} | null }\n * the scope of the currently focused filter, if any\n */\nfunction selectFocusedFilterScope(dashboardState, dashboardFilters) {\n  if (!dashboardState.focusedFilterField) return null;\n  const { chartId, column } = dashboardState.focusedFilterField;\n  return {\n    chartId,\n    scope: dashboardFilters[chartId].scopes[column],\n  };\n}\n\nfunction mapStateToProps(\n  {\n    dashboardLayout: undoableLayout,\n    dashboardState,\n    dashboardInfo,\n    dashboardFilters,\n  },\n  ownProps,\n) {\n  const dashboardLayout = undoableLayout.present;\n  const { id, parentId } = ownProps;\n  const component = dashboardLayout[id];\n  const props = {\n    component,\n    parentComponent: dashboardLayout[parentId],\n    editMode: dashboardState.editMode,\n    undoLength: undoableLayout.past.length,\n    redoLength: undoableLayout.future.length,\n    filters: getActiveFilters(),\n    directPathToChild: dashboardState.directPathToChild,\n    directPathLastUpdated: dashboardState.directPathLastUpdated,\n    dashboardId: dashboardInfo.id,\n    focusedFilterScope: selectFocusedFilterScope(\n      dashboardState,\n      dashboardFilters,\n    ),\n  };\n\n  // rows and columns need more data about their child dimensions\n  // doing this allows us to not pass the entire component lookup to all Components\n  if (component) {\n    const componentType = component.type;\n    if (componentType === ROW_TYPE || componentType === COLUMN_TYPE) {\n      const { occupiedWidth, minimumWidth } = getDetailedComponentWidth({\n        id,\n        components: dashboardLayout,\n      });\n\n      if (componentType === ROW_TYPE) props.occupiedColumnCount = occupiedWidth;\n      if (componentType === COLUMN_TYPE) props.minColumnWidth = minimumWidth;\n    }\n  }\n\n  return props;\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      addDangerToast,\n      createComponent,\n      deleteComponent,\n      updateComponents,\n      handleComponentDrop,\n      setDirectPathToChild,\n      logEvent,\n    },\n    dispatch,\n  );\n}\n\nclass DashboardComponent extends React.PureComponent {\n  render() {\n    const { component } = this.props;\n    const Component = component ? componentLookup[component.type] : null;\n    return Component ? <Component {...this.props} /> : null;\n  }\n}\n\nDashboardComponent.propTypes = propTypes;\nDashboardComponent.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardComponent);\n"]},"metadata":{},"sourceType":"module"}