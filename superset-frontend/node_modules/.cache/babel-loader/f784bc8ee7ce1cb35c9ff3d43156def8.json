{"ast":null,"code":"import _Set from \"@babel/runtime-corejs3/core-js-stable/set\";import _Object$values from \"@babel/runtime-corejs3/core-js-stable/object/values\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const AGGREGATES = {\n  AVG: 'AVG',\n  COUNT: 'COUNT',\n  COUNT_DISTINCT: 'COUNT_DISTINCT',\n  MAX: 'MAX',\n  MIN: 'MIN',\n  SUM: 'SUM' };\n\nexport const AGGREGATES_OPTIONS = _Object$values(AGGREGATES);\n\nexport const OPERATORS = {\n  '==': '==',\n  '!=': '!=',\n  '>': '>',\n  '<': '<',\n  '>=': '>=',\n  '<=': '<=',\n  IN: 'IN',\n  'NOT IN': 'NOT IN',\n  LIKE: 'LIKE',\n  REGEX: 'REGEX',\n  'IS NOT NULL': 'IS NOT NULL',\n  'IS NULL': 'IS NULL',\n  'LATEST PARTITION': 'LATEST PARTITION' };\n\nexport const OPERATORS_OPTIONS = _Object$values(OPERATORS);\n\nexport const TABLE_ONLY_OPERATORS = [OPERATORS.LIKE];\nexport const DRUID_ONLY_OPERATORS = [OPERATORS.REGEX];\nexport const HAVING_OPERATORS = [\nOPERATORS['=='],\nOPERATORS['!='],\nOPERATORS['>'],\nOPERATORS['<'],\nOPERATORS['>='],\nOPERATORS['<=']];\n\nexport const MULTI_OPERATORS = new _Set([\nOPERATORS.in,\nOPERATORS['not in'],\nOPERATORS.IN,\nOPERATORS['NOT IN']]);\n\n// CUSTOM_OPERATORS will show operator in simple mode,\n// but will generate customized sqlExpression\nexport const CUSTOM_OPERATORS = new _Set([OPERATORS['LATEST PARTITION']]);\n// DISABLE_INPUT_OPERATORS will disable filter value input\n// in adhocFilter control\nexport const DISABLE_INPUT_OPERATORS = [\nOPERATORS['IS NOT NULL'],\nOPERATORS['IS NULL'],\nOPERATORS['LATEST PARTITION']];\n\n\nexport const sqlaAutoGeneratedMetricNameRegex = /^(sum|min|max|avg|count|count_distinct)__.*$/i;\nexport const sqlaAutoGeneratedMetricRegex = /^(LONG|DOUBLE|FLOAT)?(SUM|AVG|MAX|MIN|COUNT)\\([A-Z0-9_.\"]*\\)$/i;\nexport const druidAutoGeneratedMetricRegex = /^(LONG|DOUBLE|FLOAT)?(SUM|MAX|MIN|COUNT)\\([A-Z0-9_.\"]*\\)$/i;\n\nexport const TIME_FILTER_LABELS = {\n  time_range: t('Time range'),\n  granularity_sqla: t('Time column'),\n  time_grain_sqla: t('Time grain'),\n  druid_time_origin: t('Origin'),\n  granularity: t('Time granularity') };\n\n\nexport const FILTER_CONFIG_ATTRIBUTES = {\n  DEFAULT_VALUE: 'defaultValue',\n  MULTIPLE: 'multiple',\n  SEARCH_ALL_OPTIONS: 'searchAllOptions',\n  CLEARABLE: 'clearable' };\n\n\nexport const FILTER_OPTIONS_LIMIT = 1000;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AGGREGATES, \"AGGREGATES\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(AGGREGATES_OPTIONS, \"AGGREGATES_OPTIONS\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(OPERATORS, \"OPERATORS\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(OPERATORS_OPTIONS, \"OPERATORS_OPTIONS\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(TABLE_ONLY_OPERATORS, \"TABLE_ONLY_OPERATORS\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(DRUID_ONLY_OPERATORS, \"DRUID_ONLY_OPERATORS\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(HAVING_OPERATORS, \"HAVING_OPERATORS\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(MULTI_OPERATORS, \"MULTI_OPERATORS\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(CUSTOM_OPERATORS, \"CUSTOM_OPERATORS\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(DISABLE_INPUT_OPERATORS, \"DISABLE_INPUT_OPERATORS\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(sqlaAutoGeneratedMetricNameRegex, \"sqlaAutoGeneratedMetricNameRegex\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(sqlaAutoGeneratedMetricRegex, \"sqlaAutoGeneratedMetricRegex\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(druidAutoGeneratedMetricRegex, \"druidAutoGeneratedMetricRegex\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(TIME_FILTER_LABELS, \"TIME_FILTER_LABELS\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(FILTER_CONFIG_ATTRIBUTES, \"FILTER_CONFIG_ATTRIBUTES\", \"/app/superset-frontend/src/explore/constants.js\");reactHotLoader.register(FILTER_OPTIONS_LIMIT, \"FILTER_OPTIONS_LIMIT\", \"/app/superset-frontend/src/explore/constants.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/constants.js"],"names":["t","AGGREGATES","AVG","COUNT","COUNT_DISTINCT","MAX","MIN","SUM","AGGREGATES_OPTIONS","OPERATORS","IN","LIKE","REGEX","OPERATORS_OPTIONS","TABLE_ONLY_OPERATORS","DRUID_ONLY_OPERATORS","HAVING_OPERATORS","MULTI_OPERATORS","in","CUSTOM_OPERATORS","DISABLE_INPUT_OPERATORS","sqlaAutoGeneratedMetricNameRegex","sqlaAutoGeneratedMetricRegex","druidAutoGeneratedMetricRegex","TIME_FILTER_LABELS","time_range","granularity_sqla","time_grain_sqla","druid_time_origin","granularity","FILTER_CONFIG_ATTRIBUTES","DEFAULT_VALUE","MULTIPLE","SEARCH_ALL_OPTIONS","CLEARABLE","FILTER_OPTIONS_LIMIT"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n\nexport const AGGREGATES = {\n  AVG: 'AVG',\n  COUNT: 'COUNT',\n  COUNT_DISTINCT: 'COUNT_DISTINCT',\n  MAX: 'MAX',\n  MIN: 'MIN',\n  SUM: 'SUM',\n};\nexport const AGGREGATES_OPTIONS = Object.values(AGGREGATES);\n\nexport const OPERATORS = {\n  '==': '==',\n  '!=': '!=',\n  '>': '>',\n  '<': '<',\n  '>=': '>=',\n  '<=': '<=',\n  IN: 'IN',\n  'NOT IN': 'NOT IN',\n  LIKE: 'LIKE',\n  REGEX: 'REGEX',\n  'IS NOT NULL': 'IS NOT NULL',\n  'IS NULL': 'IS NULL',\n  'LATEST PARTITION': 'LATEST PARTITION',\n};\nexport const OPERATORS_OPTIONS = Object.values(OPERATORS);\n\nexport const TABLE_ONLY_OPERATORS = [OPERATORS.LIKE];\nexport const DRUID_ONLY_OPERATORS = [OPERATORS.REGEX];\nexport const HAVING_OPERATORS = [\n  OPERATORS['=='],\n  OPERATORS['!='],\n  OPERATORS['>'],\n  OPERATORS['<'],\n  OPERATORS['>='],\n  OPERATORS['<='],\n];\nexport const MULTI_OPERATORS = new Set([\n  OPERATORS.in,\n  OPERATORS['not in'],\n  OPERATORS.IN,\n  OPERATORS['NOT IN'],\n]);\n// CUSTOM_OPERATORS will show operator in simple mode,\n// but will generate customized sqlExpression\nexport const CUSTOM_OPERATORS = new Set([OPERATORS['LATEST PARTITION']]);\n// DISABLE_INPUT_OPERATORS will disable filter value input\n// in adhocFilter control\nexport const DISABLE_INPUT_OPERATORS = [\n  OPERATORS['IS NOT NULL'],\n  OPERATORS['IS NULL'],\n  OPERATORS['LATEST PARTITION'],\n];\n\nexport const sqlaAutoGeneratedMetricNameRegex = /^(sum|min|max|avg|count|count_distinct)__.*$/i;\nexport const sqlaAutoGeneratedMetricRegex = /^(LONG|DOUBLE|FLOAT)?(SUM|AVG|MAX|MIN|COUNT)\\([A-Z0-9_.\"]*\\)$/i;\nexport const druidAutoGeneratedMetricRegex = /^(LONG|DOUBLE|FLOAT)?(SUM|MAX|MIN|COUNT)\\([A-Z0-9_.\"]*\\)$/i;\n\nexport const TIME_FILTER_LABELS = {\n  time_range: t('Time range'),\n  granularity_sqla: t('Time column'),\n  time_grain_sqla: t('Time grain'),\n  druid_time_origin: t('Origin'),\n  granularity: t('Time granularity'),\n};\n\nexport const FILTER_CONFIG_ATTRIBUTES = {\n  DEFAULT_VALUE: 'defaultValue',\n  MULTIPLE: 'multiple',\n  SEARCH_ALL_OPTIONS: 'searchAllOptions',\n  CLEARABLE: 'clearable',\n};\n\nexport const FILTER_OPTIONS_LIMIT = 1000;\n"]},"metadata":{},"sourceType":"module"}