{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\nimport htmlParser from 'react-markdown/plugins/html-parser';\n\nimport cx from 'classnames';\nimport { t } from '@superset-ui/core';\nimport { Logger, LOG_ACTIONS_RENDER_CHART } from 'src/logger/LogUtils';\nimport { MarkdownEditor } from 'src/components/AsyncAceEditor';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport DragDroppable from 'src/dashboard/components/dnd/DragDroppable';\nimport ResizableContainer from 'src/dashboard/components/resizable/ResizableContainer';\nimport MarkdownModeDropdown from 'src/dashboard/components/menu/MarkdownModeDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport { ROW_TYPE, COLUMN_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\nGRID_MIN_COLUMN_COUNT,\nGRID_MIN_ROW_UNITS,\nGRID_BASE_UNIT } from\n'src/dashboard/util/constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // from redux\n  logEvent: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  undoLength: PropTypes.number.isRequired,\n  redoLength: PropTypes.number.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired };\n\n\nconst defaultProps = {};\n\nconst MARKDOWN_PLACE_HOLDER = `# ✨Markdown\n## ✨Markdown\n### ✨Markdown\n\n<br />\n\nClick here to edit [markdown](https://bit.ly/1dQOfRK)`;\n\nconst MARKDOWN_ERROR_MESSAGE = t('This markdown component has an error.');\n\nfunction isSafeMarkup(node) {\n  if (node.type === 'html') {\n    return /href=\"(javascript|vbscript|file):.*\"/gim.test(node.value) === false;\n  }\n\n  return true;\n}\n\nclass Markdown extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4, _context5, _context6;\n    super(props);\n    this.state = {\n      isFocused: false,\n      markdownSource: props.component.meta.code,\n      editor: null,\n      editorMode: 'preview',\n      undoLength: props.undoLength,\n      redoLength: props.redoLength };\n\n    this.renderStartTime = Logger.getTimestamp();\n\n    this.handleChangeFocus = _bindInstanceProperty(_context = this.handleChangeFocus).call(_context, this);\n    this.handleChangeEditorMode = _bindInstanceProperty(_context2 = this.handleChangeEditorMode).call(_context2, this);\n    this.handleMarkdownChange = _bindInstanceProperty(_context3 = this.handleMarkdownChange).call(_context3, this);\n    this.handleDeleteComponent = _bindInstanceProperty(_context4 = this.handleDeleteComponent).call(_context4, this);\n    this.handleResizeStart = _bindInstanceProperty(_context5 = this.handleResizeStart).call(_context5, this);\n    this.setEditor = _bindInstanceProperty(_context6 = this.setEditor).call(_context6, this);\n  }\n\n  componentDidMount() {\n    this.props.logEvent(LOG_ACTIONS_RENDER_CHART, {\n      viz_type: 'markdown',\n      start_offset: this.renderStartTime,\n      ts: new Date().getTime(),\n      duration: Logger.getTimestamp() - this.renderStartTime });\n\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    const {\n      hasError,\n      editorMode,\n      markdownSource,\n      undoLength,\n      redoLength } =\n    state;\n    const {\n      component: nextComponent,\n      undoLength: nextUndoLength,\n      redoLength: nextRedoLength } =\n    nextProps;\n    // user click undo or redo ?\n    if (nextUndoLength !== undoLength || nextRedoLength !== redoLength) {\n      return {\n        ...state,\n        undoLength: nextUndoLength,\n        redoLength: nextRedoLength,\n        markdownSource: nextComponent.meta.code,\n        hasError: false };\n\n    }\n    if (\n    !hasError &&\n    editorMode === 'preview' &&\n    nextComponent.meta.code !== markdownSource)\n    {\n      return {\n        ...state,\n        markdownSource: nextComponent.meta.code };\n\n    }\n\n    return state;\n  }\n\n  static getDerivedStateFromError() {\n    return {\n      hasError: true };\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n    this.state.editor && (\n    prevProps.component.meta.width !== this.props.component.meta.width ||\n    prevProps.columnWidth !== this.props.columnWidth))\n    {\n      this.state.editor.resize(true);\n    }\n    // pre-load AceEditor when entering edit mode\n    if (this.props.editMode) {\n      MarkdownEditor.preload();\n    }\n  }\n\n  componentDidCatch() {\n    if (this.state.editor && this.state.editorMode === 'preview') {\n      this.props.addDangerToast(\n      t(\n      'This markdown component has an error. Please revert your recent changes.'));\n\n\n    }\n  }\n\n  setEditor(editor) {\n    editor.getSession().setUseWrapMode(true);\n    this.setState({\n      editor });\n\n  }\n\n  handleChangeFocus(nextFocus) {\n    const nextFocused = !!nextFocus;\n    const nextEditMode = nextFocused ? 'edit' : 'preview';\n    this.setState(() => ({ isFocused: nextFocused }));\n    this.handleChangeEditorMode(nextEditMode);\n  }\n\n  handleChangeEditorMode(mode) {\n    const nextState = {\n      ...this.state,\n      editorMode: mode };\n\n    if (mode === 'preview') {\n      this.updateMarkdownContent();\n      nextState.hasError = false;\n    }\n\n    this.setState(nextState);\n  }\n\n  updateMarkdownContent() {\n    const { updateComponents, component } = this.props;\n    if (component.meta.code !== this.state.markdownSource) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            code: this.state.markdownSource } } });\n\n\n\n    }\n  }\n\n  handleMarkdownChange(nextValue) {\n    this.setState({\n      markdownSource: nextValue });\n\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleResizeStart(e) {\n    const { editorMode } = this.state;\n    const { editMode, onResizeStart } = this.props;\n    const isEditing = editorMode === 'edit';\n    onResizeStart(e);\n    if (editMode && isEditing) {\n      this.updateMarkdownContent();\n    }\n  }\n\n  renderEditMode() {\n    return (\n      ___EmotionJSX(MarkdownEditor, {\n        onChange: this.handleMarkdownChange,\n        width: \"100%\",\n        height: \"100%\",\n        showGutter: false,\n        editorProps: { $blockScrolling: true },\n        value:\n        // thisl allows \"select all => delete\" to give an empty editor\n        typeof this.state.markdownSource === 'string' ?\n        this.state.markdownSource :\n        MARKDOWN_PLACE_HOLDER,\n\n        readOnly: false,\n        onLoad: this.setEditor,\n        \"data-test\": \"editor\" }));\n\n\n  }\n\n  renderPreviewMode() {\n    const { hasError } = this.state;\n    return (\n      ___EmotionJSX(ReactMarkdown, {\n        source:\n        hasError ?\n        MARKDOWN_ERROR_MESSAGE :\n        this.state.markdownSource || MARKDOWN_PLACE_HOLDER,\n\n        escapeHtml: isFeatureEnabled(FeatureFlag.ESCAPE_MARKDOWN_HTML),\n        skipHtml: !isFeatureEnabled(FeatureFlag.DISPLAY_MARKDOWN_HTML),\n        allowNode: isSafeMarkup,\n        astPlugins: [\n        htmlParser({\n          isValidNode: node => node.type !== 'script' })] }));\n\n\n\n\n  }\n\n  render() {\n    const { isFocused, editorMode } = this.state;\n\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode } =\n    this.props;\n\n    // inherit the size of parent columns\n    const widthMultiple =\n    parentComponent.type === COLUMN_TYPE ?\n    parentComponent.meta.width || GRID_MIN_COLUMN_COUNT :\n    component.meta.width || GRID_MIN_COLUMN_COUNT;\n\n    const isEditing = editorMode === 'edit';\n\n    return (\n      ___EmotionJSX(DragDroppable, {\n        component: component,\n        parentComponent: parentComponent,\n        orientation: parentComponent.type === ROW_TYPE ? 'column' : 'row',\n        index: index,\n        depth: depth,\n        onDrop: handleComponentDrop,\n        disableDragDrop: isFocused,\n        editMode: editMode },\n\n      ({ dropIndicatorProps, dragSourceRef }) =>\n      ___EmotionJSX(WithPopoverMenu, {\n        onChangeFocus: this.handleChangeFocus,\n        menuItems: [\n        ___EmotionJSX(MarkdownModeDropdown, {\n          id: `${component.id}-mode`,\n          value: this.state.editorMode,\n          onChange: this.handleChangeEditorMode }),\n\n        ___EmotionJSX(DeleteComponentButton, { onDelete: this.handleDeleteComponent })],\n\n        editMode: editMode },\n\n      ___EmotionJSX(\"div\", {\n        \"data-test\": \"dashboard-markdown-editor\",\n        className: cx(\n        'dashboard-markdown',\n        isEditing && 'dashboard-markdown--editing') },\n\n\n      ___EmotionJSX(ResizableContainer, {\n        id: component.id,\n        adjustableWidth: parentComponent.type === ROW_TYPE,\n        adjustableHeight: true,\n        widthStep: columnWidth,\n        widthMultiple: widthMultiple,\n        heightStep: GRID_BASE_UNIT,\n        heightMultiple: component.meta.height,\n        minWidthMultiple: GRID_MIN_COLUMN_COUNT,\n        minHeightMultiple: GRID_MIN_ROW_UNITS,\n        maxWidthMultiple: availableColumnCount + widthMultiple,\n        onResizeStart: this.handleResizeStart,\n        onResize: onResize,\n        onResizeStop: onResizeStop,\n        editMode: isFocused ? false : editMode },\n\n      ___EmotionJSX(\"div\", {\n        ref: dragSourceRef,\n        className: \"dashboard-component dashboard-component-chart-holder\",\n        \"data-test\": \"dashboard-component-chart-holder\" },\n\n      editMode && isEditing ?\n      this.renderEditMode() :\n      this.renderPreviewMode()))),\n\n\n\n      dropIndicatorProps && ___EmotionJSX(\"div\", dropIndicatorProps))));\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nMarkdown.propTypes = propTypes;\nMarkdown.defaultProps = defaultProps;const _default =\n\nMarkdown;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Markdown.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Markdown.jsx\");reactHotLoader.register(MARKDOWN_PLACE_HOLDER, \"MARKDOWN_PLACE_HOLDER\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Markdown.jsx\");reactHotLoader.register(MARKDOWN_ERROR_MESSAGE, \"MARKDOWN_ERROR_MESSAGE\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Markdown.jsx\");reactHotLoader.register(isSafeMarkup, \"isSafeMarkup\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Markdown.jsx\");reactHotLoader.register(Markdown, \"Markdown\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Markdown.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/gridComponents/Markdown.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/gridComponents/Markdown.jsx"],"names":["React","PropTypes","ReactMarkdown","htmlParser","cx","t","Logger","LOG_ACTIONS_RENDER_CHART","MarkdownEditor","isFeatureEnabled","FeatureFlag","DeleteComponentButton","DragDroppable","ResizableContainer","MarkdownModeDropdown","WithPopoverMenu","componentShape","ROW_TYPE","COLUMN_TYPE","GRID_MIN_COLUMN_COUNT","GRID_MIN_ROW_UNITS","GRID_BASE_UNIT","propTypes","id","string","isRequired","parentId","component","parentComponent","index","number","depth","editMode","bool","logEvent","func","addDangerToast","undoLength","redoLength","availableColumnCount","columnWidth","onResizeStart","onResize","onResizeStop","deleteComponent","handleComponentDrop","updateComponents","defaultProps","MARKDOWN_PLACE_HOLDER","MARKDOWN_ERROR_MESSAGE","isSafeMarkup","node","type","test","value","Markdown","PureComponent","constructor","props","state","isFocused","markdownSource","meta","code","editor","editorMode","renderStartTime","getTimestamp","handleChangeFocus","handleChangeEditorMode","handleMarkdownChange","handleDeleteComponent","handleResizeStart","setEditor","componentDidMount","viz_type","start_offset","ts","Date","getTime","duration","getDerivedStateFromProps","nextProps","hasError","nextComponent","nextUndoLength","nextRedoLength","getDerivedStateFromError","componentDidUpdate","prevProps","width","resize","preload","componentDidCatch","getSession","setUseWrapMode","setState","nextFocus","nextFocused","nextEditMode","mode","nextState","updateMarkdownContent","nextValue","e","isEditing","renderEditMode","$blockScrolling","renderPreviewMode","ESCAPE_MARKDOWN_HTML","DISPLAY_MARKDOWN_HTML","isValidNode","render","widthMultiple","dropIndicatorProps","dragSourceRef","height"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactMarkdown from 'react-markdown';\nimport htmlParser from 'react-markdown/plugins/html-parser';\n\nimport cx from 'classnames';\nimport { t } from '@superset-ui/core';\nimport { Logger, LOG_ACTIONS_RENDER_CHART } from 'src/logger/LogUtils';\nimport { MarkdownEditor } from 'src/components/AsyncAceEditor';\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nimport DeleteComponentButton from 'src/dashboard/components/DeleteComponentButton';\nimport DragDroppable from 'src/dashboard/components/dnd/DragDroppable';\nimport ResizableContainer from 'src/dashboard/components/resizable/ResizableContainer';\nimport MarkdownModeDropdown from 'src/dashboard/components/menu/MarkdownModeDropdown';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\nimport { componentShape } from 'src/dashboard/util/propShapes';\nimport { ROW_TYPE, COLUMN_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\n  GRID_MIN_COLUMN_COUNT,\n  GRID_MIN_ROW_UNITS,\n  GRID_BASE_UNIT,\n} from 'src/dashboard/util/constants';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  parentId: PropTypes.string.isRequired,\n  component: componentShape.isRequired,\n  parentComponent: componentShape.isRequired,\n  index: PropTypes.number.isRequired,\n  depth: PropTypes.number.isRequired,\n  editMode: PropTypes.bool.isRequired,\n\n  // from redux\n  logEvent: PropTypes.func.isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n  undoLength: PropTypes.number.isRequired,\n  redoLength: PropTypes.number.isRequired,\n\n  // grid related\n  availableColumnCount: PropTypes.number.isRequired,\n  columnWidth: PropTypes.number.isRequired,\n  onResizeStart: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  onResizeStop: PropTypes.func.isRequired,\n\n  // dnd\n  deleteComponent: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  updateComponents: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {};\n\nconst MARKDOWN_PLACE_HOLDER = `# ✨Markdown\n## ✨Markdown\n### ✨Markdown\n\n<br />\n\nClick here to edit [markdown](https://bit.ly/1dQOfRK)`;\n\nconst MARKDOWN_ERROR_MESSAGE = t('This markdown component has an error.');\n\nfunction isSafeMarkup(node) {\n  if (node.type === 'html') {\n    return /href=\"(javascript|vbscript|file):.*\"/gim.test(node.value) === false;\n  }\n\n  return true;\n}\n\nclass Markdown extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false,\n      markdownSource: props.component.meta.code,\n      editor: null,\n      editorMode: 'preview',\n      undoLength: props.undoLength,\n      redoLength: props.redoLength,\n    };\n    this.renderStartTime = Logger.getTimestamp();\n\n    this.handleChangeFocus = this.handleChangeFocus.bind(this);\n    this.handleChangeEditorMode = this.handleChangeEditorMode.bind(this);\n    this.handleMarkdownChange = this.handleMarkdownChange.bind(this);\n    this.handleDeleteComponent = this.handleDeleteComponent.bind(this);\n    this.handleResizeStart = this.handleResizeStart.bind(this);\n    this.setEditor = this.setEditor.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.logEvent(LOG_ACTIONS_RENDER_CHART, {\n      viz_type: 'markdown',\n      start_offset: this.renderStartTime,\n      ts: new Date().getTime(),\n      duration: Logger.getTimestamp() - this.renderStartTime,\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    const {\n      hasError,\n      editorMode,\n      markdownSource,\n      undoLength,\n      redoLength,\n    } = state;\n    const {\n      component: nextComponent,\n      undoLength: nextUndoLength,\n      redoLength: nextRedoLength,\n    } = nextProps;\n    // user click undo or redo ?\n    if (nextUndoLength !== undoLength || nextRedoLength !== redoLength) {\n      return {\n        ...state,\n        undoLength: nextUndoLength,\n        redoLength: nextRedoLength,\n        markdownSource: nextComponent.meta.code,\n        hasError: false,\n      };\n    }\n    if (\n      !hasError &&\n      editorMode === 'preview' &&\n      nextComponent.meta.code !== markdownSource\n    ) {\n      return {\n        ...state,\n        markdownSource: nextComponent.meta.code,\n      };\n    }\n\n    return state;\n  }\n\n  static getDerivedStateFromError() {\n    return {\n      hasError: true,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.state.editor &&\n      (prevProps.component.meta.width !== this.props.component.meta.width ||\n        prevProps.columnWidth !== this.props.columnWidth)\n    ) {\n      this.state.editor.resize(true);\n    }\n    // pre-load AceEditor when entering edit mode\n    if (this.props.editMode) {\n      MarkdownEditor.preload();\n    }\n  }\n\n  componentDidCatch() {\n    if (this.state.editor && this.state.editorMode === 'preview') {\n      this.props.addDangerToast(\n        t(\n          'This markdown component has an error. Please revert your recent changes.',\n        ),\n      );\n    }\n  }\n\n  setEditor(editor) {\n    editor.getSession().setUseWrapMode(true);\n    this.setState({\n      editor,\n    });\n  }\n\n  handleChangeFocus(nextFocus) {\n    const nextFocused = !!nextFocus;\n    const nextEditMode = nextFocused ? 'edit' : 'preview';\n    this.setState(() => ({ isFocused: nextFocused }));\n    this.handleChangeEditorMode(nextEditMode);\n  }\n\n  handleChangeEditorMode(mode) {\n    const nextState = {\n      ...this.state,\n      editorMode: mode,\n    };\n    if (mode === 'preview') {\n      this.updateMarkdownContent();\n      nextState.hasError = false;\n    }\n\n    this.setState(nextState);\n  }\n\n  updateMarkdownContent() {\n    const { updateComponents, component } = this.props;\n    if (component.meta.code !== this.state.markdownSource) {\n      updateComponents({\n        [component.id]: {\n          ...component,\n          meta: {\n            ...component.meta,\n            code: this.state.markdownSource,\n          },\n        },\n      });\n    }\n  }\n\n  handleMarkdownChange(nextValue) {\n    this.setState({\n      markdownSource: nextValue,\n    });\n  }\n\n  handleDeleteComponent() {\n    const { deleteComponent, id, parentId } = this.props;\n    deleteComponent(id, parentId);\n  }\n\n  handleResizeStart(e) {\n    const { editorMode } = this.state;\n    const { editMode, onResizeStart } = this.props;\n    const isEditing = editorMode === 'edit';\n    onResizeStart(e);\n    if (editMode && isEditing) {\n      this.updateMarkdownContent();\n    }\n  }\n\n  renderEditMode() {\n    return (\n      <MarkdownEditor\n        onChange={this.handleMarkdownChange}\n        width=\"100%\"\n        height=\"100%\"\n        showGutter={false}\n        editorProps={{ $blockScrolling: true }}\n        value={\n          // thisl allows \"select all => delete\" to give an empty editor\n          typeof this.state.markdownSource === 'string'\n            ? this.state.markdownSource\n            : MARKDOWN_PLACE_HOLDER\n        }\n        readOnly={false}\n        onLoad={this.setEditor}\n        data-test=\"editor\"\n      />\n    );\n  }\n\n  renderPreviewMode() {\n    const { hasError } = this.state;\n    return (\n      <ReactMarkdown\n        source={\n          hasError\n            ? MARKDOWN_ERROR_MESSAGE\n            : this.state.markdownSource || MARKDOWN_PLACE_HOLDER\n        }\n        escapeHtml={isFeatureEnabled(FeatureFlag.ESCAPE_MARKDOWN_HTML)}\n        skipHtml={!isFeatureEnabled(FeatureFlag.DISPLAY_MARKDOWN_HTML)}\n        allowNode={isSafeMarkup}\n        astPlugins={[\n          htmlParser({\n            isValidNode: node => node.type !== 'script',\n          }),\n        ]}\n      />\n    );\n  }\n\n  render() {\n    const { isFocused, editorMode } = this.state;\n\n    const {\n      component,\n      parentComponent,\n      index,\n      depth,\n      availableColumnCount,\n      columnWidth,\n      onResize,\n      onResizeStop,\n      handleComponentDrop,\n      editMode,\n    } = this.props;\n\n    // inherit the size of parent columns\n    const widthMultiple =\n      parentComponent.type === COLUMN_TYPE\n        ? parentComponent.meta.width || GRID_MIN_COLUMN_COUNT\n        : component.meta.width || GRID_MIN_COLUMN_COUNT;\n\n    const isEditing = editorMode === 'edit';\n\n    return (\n      <DragDroppable\n        component={component}\n        parentComponent={parentComponent}\n        orientation={parentComponent.type === ROW_TYPE ? 'column' : 'row'}\n        index={index}\n        depth={depth}\n        onDrop={handleComponentDrop}\n        disableDragDrop={isFocused}\n        editMode={editMode}\n      >\n        {({ dropIndicatorProps, dragSourceRef }) => (\n          <WithPopoverMenu\n            onChangeFocus={this.handleChangeFocus}\n            menuItems={[\n              <MarkdownModeDropdown\n                id={`${component.id}-mode`}\n                value={this.state.editorMode}\n                onChange={this.handleChangeEditorMode}\n              />,\n              <DeleteComponentButton onDelete={this.handleDeleteComponent} />,\n            ]}\n            editMode={editMode}\n          >\n            <div\n              data-test=\"dashboard-markdown-editor\"\n              className={cx(\n                'dashboard-markdown',\n                isEditing && 'dashboard-markdown--editing',\n              )}\n            >\n              <ResizableContainer\n                id={component.id}\n                adjustableWidth={parentComponent.type === ROW_TYPE}\n                adjustableHeight\n                widthStep={columnWidth}\n                widthMultiple={widthMultiple}\n                heightStep={GRID_BASE_UNIT}\n                heightMultiple={component.meta.height}\n                minWidthMultiple={GRID_MIN_COLUMN_COUNT}\n                minHeightMultiple={GRID_MIN_ROW_UNITS}\n                maxWidthMultiple={availableColumnCount + widthMultiple}\n                onResizeStart={this.handleResizeStart}\n                onResize={onResize}\n                onResizeStop={onResizeStop}\n                editMode={isFocused ? false : editMode}\n              >\n                <div\n                  ref={dragSourceRef}\n                  className=\"dashboard-component dashboard-component-chart-holder\"\n                  data-test=\"dashboard-component-chart-holder\"\n                >\n                  {editMode && isEditing\n                    ? this.renderEditMode()\n                    : this.renderPreviewMode()}\n                </div>\n              </ResizableContainer>\n            </div>\n            {dropIndicatorProps && <div {...dropIndicatorProps} />}\n          </WithPopoverMenu>\n        )}\n      </DragDroppable>\n    );\n  }\n}\n\nMarkdown.propTypes = propTypes;\nMarkdown.defaultProps = defaultProps;\n\nexport default Markdown;\n"]},"metadata":{},"sourceType":"module"}