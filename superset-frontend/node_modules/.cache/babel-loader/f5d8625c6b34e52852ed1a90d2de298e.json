{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\n\nimport PopoverDropdown from './PopoverDropdown';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired };\n\n\nconst dropdownOptions = [\n{\n  value: 'edit',\n  label: t('Edit') },\n\n{\n  value: 'preview',\n  label: t('Preview') }];\n\n\n\nexport default class MarkdownModeDropdown extends React.PureComponent {\n  render() {\n    const { id, value, onChange } = this.props;\n\n    return (\n      ___EmotionJSX(PopoverDropdown, {\n        id: id,\n        options: dropdownOptions,\n        value: value,\n        onChange: onChange }));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nMarkdownModeDropdown.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/menu/MarkdownModeDropdown.jsx\");reactHotLoader.register(dropdownOptions, \"dropdownOptions\", \"/app/superset-frontend/src/dashboard/components/menu/MarkdownModeDropdown.jsx\");reactHotLoader.register(MarkdownModeDropdown, \"MarkdownModeDropdown\", \"/app/superset-frontend/src/dashboard/components/menu/MarkdownModeDropdown.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/menu/MarkdownModeDropdown.jsx"],"names":["React","PropTypes","t","PopoverDropdown","propTypes","id","string","isRequired","value","onChange","func","dropdownOptions","label","MarkdownModeDropdown","PureComponent","render","props"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,CAAT,QAAkB,mBAAlB;;AAEA,OAAOC,eAAP,MAA4B,mBAA5B,C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAEJ,SAAS,CAACK,MAAV,CAAiBC,UADL;AAEhBC,EAAAA,KAAK,EAAEP,SAAS,CAACK,MAAV,CAAiBC,UAFR;AAGhBE,EAAAA,QAAQ,EAAER,SAAS,CAACS,IAAV,CAAeH,UAHT,EAAlB;;;AAMA,MAAMI,eAAe,GAAG;AACtB;AACEH,EAAAA,KAAK,EAAE,MADT;AAEEI,EAAAA,KAAK,EAAEV,CAAC,CAAC,MAAD,CAFV,EADsB;;AAKtB;AACEM,EAAAA,KAAK,EAAE,SADT;AAEEI,EAAAA,KAAK,EAAEV,CAAC,CAAC,SAAD,CAFV,EALsB,CAAxB;;;;AAWA,eAAe,MAAMW,oBAAN,SAAmCb,KAAK,CAACc,aAAzC,CAAuD;AACpEC,EAAAA,MAAM,GAAG;AACP,UAAM,EAAEV,EAAF,EAAMG,KAAN,EAAaC,QAAb,KAA0B,KAAKO,KAArC;;AAEA;AACE,oBAAC,eAAD;AACE,QAAA,EAAE,EAAEX,EADN;AAEE,QAAA,OAAO,EAAEM,eAFX;AAGE,QAAA,KAAK,EAAEH,KAHT;AAIE,QAAA,QAAQ,EAAEC,QAJZ,GADF;;;AAQD,GAZmE;AAAA;AAAA;AAetEI,oBAAoB,CAACT,SAArB,GAAiCA,SAAjC,C,iLAhCMA,S,wHAMAO,e,8HAWeE,oB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { t } from '@superset-ui/core';\n\nimport PopoverDropdown from './PopoverDropdown';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst dropdownOptions = [\n  {\n    value: 'edit',\n    label: t('Edit'),\n  },\n  {\n    value: 'preview',\n    label: t('Preview'),\n  },\n];\n\nexport default class MarkdownModeDropdown extends React.PureComponent {\n  render() {\n    const { id, value, onChange } = this.props;\n\n    return (\n      <PopoverDropdown\n        id={id}\n        options={dropdownOptions}\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\nMarkdownModeDropdown.propTypes = propTypes;\n"]},"metadata":{},"sourceType":"module"}