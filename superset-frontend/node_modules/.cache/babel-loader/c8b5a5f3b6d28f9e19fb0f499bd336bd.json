{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport cx from 'classnames';\n// ParentSize uses resize observer so the dashboard will update size\n// when its container size changes, due to e.g., builder side panel opening\nimport { ParentSize } from '@vx/responsive';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Sticky, StickyContainer } from 'react-sticky';\nimport { TabContainer, TabContent, TabPane } from 'react-bootstrap';\nimport { styled } from '@superset-ui/core';\n\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport BuilderComponentPane from 'src/dashboard/components/BuilderComponentPane';\nimport DashboardHeader from 'src/dashboard/containers/DashboardHeader';\nimport DashboardGrid from 'src/dashboard/containers/DashboardGrid';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport DragDroppable from 'src/dashboard/components/dnd/DragDroppable';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport ToastPresenter from 'src/messageToasts/containers/ToastPresenter';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\n\nimport getDragDropManager from 'src/dashboard/util/getDragDropManager';\nimport findTabIndexByComponentId from 'src/dashboard/util/findTabIndexByComponentId';\n\nimport getDirectPathToTabIndex from 'src/dashboard/util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from 'src/dashboard/util/getLeafComponentIdFromPath';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport {\nDASHBOARD_GRID_ID,\nDASHBOARD_ROOT_ID,\nDASHBOARD_ROOT_DEPTH } from\n'../util/constants';\nimport FilterBar from './nativeFilters/FilterBar';\nimport { StickyVerticalBar } from './StickyVerticalBar';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst TABS_HEIGHT = 47;\nconst HEADER_HEIGHT = 67;\n\nconst propTypes = {\n  // redux\n  dashboardLayout: PropTypes.object.isRequired,\n  deleteTopLevelTabs: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  showBuilderPane: PropTypes.func,\n  colorScheme: PropTypes.string,\n  setColorSchemeAndUnsavedChanges: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  focusedFilterField: PropTypes.object,\n  setDirectPathToChild: PropTypes.func.isRequired,\n  setMountedTab: PropTypes.func.isRequired };\n\n\nconst defaultProps = {\n  showBuilderPane: false,\n  directPathToChild: [],\n  colorScheme: undefined };\n\n\nconst StyledDashboardContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  height: auto;\n  flex-grow: 1;\n\n  .grid-container .dashboard-component-tabs {\n    box-shadow: none;\n    padding-left: 0;\n  }\n\n  .grid-container {\n    /* without this, the grid will not get smaller upon toggling the builder panel on */\n    min-width: 0;\n    width: 100%;\n    flex-grow: 1;\n    position: relative;\n    margin: ${({ theme }) => theme.gridUnit * 6}px\n      ${({ theme }) => theme.gridUnit * 8}px\n      ${({ theme }) => theme.gridUnit * 6}px\n      ${({ theme, dashboardFiltersOpen }) => {\n  if (dashboardFiltersOpen) return theme.gridUnit * 8;\n  return 0;\n}}px;\n  }\n\n  .dashboard-component-chart-holder {\n    // transitionable traits to show filter relevance\n    transition: opacity ${({ theme }) => theme.transitionTiming}s,\n      border-color ${({ theme }) => theme.transitionTiming}s,\n      box-shadow ${({ theme }) => theme.transitionTiming}s;\n    border: 0px solid transparent;\n  }\n`;\n\nclass DashboardBuilder extends React.Component {\n  static shouldFocusTabs(event, container) {\n    // don't focus the tabs when we click on a tab\n    return (\n      event.target.className === 'ant-tabs-nav-wrap' ||\n      /icon-button/.test(event.target.className) &&\n      container.contains(event.target));\n\n  }\n\n  static getRootLevelTabIndex(dashboardLayout, directPathToChild) {\n    return Math.max(\n    0,\n    findTabIndexByComponentId({\n      currentComponent: DashboardBuilder.getRootLevelTabsComponent(\n      dashboardLayout),\n\n      directPathToChild }));\n\n\n  }\n\n  static getRootLevelTabsComponent(dashboardLayout) {\n    const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n    const rootChildId = dashboardRoot.children[0];\n    return rootChildId === DASHBOARD_GRID_ID ?\n    dashboardLayout[DASHBOARD_ROOT_ID] :\n    dashboardLayout[rootChildId];\n  }\n\n  constructor(props) {var _context, _context2, _context3;\n    super(props);\n\n    const { dashboardLayout, directPathToChild } = props;\n    const tabIndex = DashboardBuilder.getRootLevelTabIndex(\n    dashboardLayout,\n    directPathToChild);\n\n    this.state = {\n      tabIndex,\n      dashboardFiltersOpen: true };\n\n\n    this.handleChangeTab = _bindInstanceProperty(_context = this.handleChangeTab).call(_context, this);\n    this.handleDeleteTopLevelTabs = _bindInstanceProperty(_context2 = this.handleDeleteTopLevelTabs).call(_context2, this);\n    this.toggleDashboardFiltersOpen = _bindInstanceProperty(_context3 = this.toggleDashboardFiltersOpen).call(_context3,\n    this);\n\n  }\n\n  getChildContext() {\n    return {\n      dragDropManager: this.context.dragDropManager || getDragDropManager() };\n\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextFocusComponent = getLeafComponentIdFromPath(\n    nextProps.directPathToChild);\n\n    const currentFocusComponent = getLeafComponentIdFromPath(\n    this.props.directPathToChild);\n\n    if (nextFocusComponent !== currentFocusComponent) {\n      const { dashboardLayout, directPathToChild } = nextProps;\n      const nextTabIndex = DashboardBuilder.getRootLevelTabIndex(\n      dashboardLayout,\n      directPathToChild);\n\n\n      this.setState(() => ({ tabIndex: nextTabIndex }));\n    }\n  }\n\n  toggleDashboardFiltersOpen(visible) {\n    if (visible === undefined) {\n      this.setState(state => ({\n        ...state,\n        dashboardFiltersOpen: !state.dashboardFiltersOpen }));\n\n    } else {\n      this.setState(state => ({\n        ...state,\n        dashboardFiltersOpen: visible }));\n\n    }\n  }\n\n  handleChangeTab({ pathToTabIndex }) {\n    this.props.setDirectPathToChild(pathToTabIndex);\n  }\n\n  handleDeleteTopLevelTabs() {\n    this.props.deleteTopLevelTabs();\n\n    const { dashboardLayout } = this.props;\n    const firstTab = getDirectPathToTabIndex(\n    DashboardBuilder.getRootLevelTabsComponent(dashboardLayout),\n    0);\n\n    this.props.setDirectPathToChild(firstTab);\n  }\n\n  render() {\n    const {\n      handleComponentDrop,\n      dashboardLayout,\n      editMode,\n      showBuilderPane,\n      setColorSchemeAndUnsavedChanges,\n      colorScheme } =\n    this.props;\n    const { tabIndex } = this.state;\n    const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n    const rootChildId = dashboardRoot.children[0];\n    const topLevelTabs =\n    rootChildId !== DASHBOARD_GRID_ID && dashboardLayout[rootChildId];\n\n    const childIds = topLevelTabs ? topLevelTabs.children : [DASHBOARD_GRID_ID];\n\n    const barTopOffset = HEADER_HEIGHT + (topLevelTabs ? TABS_HEIGHT : 0);\n\n    return (\n      ___EmotionJSX(StickyContainer, {\n        className: cx('dashboard', editMode && 'dashboard--editing') },\n\n      ___EmotionJSX(Sticky, null,\n      ({ style }) =>\n      ___EmotionJSX(DragDroppable, {\n        component: dashboardRoot,\n        parentComponent: null,\n        depth: DASHBOARD_ROOT_DEPTH,\n        index: 0,\n        orientation: \"column\",\n        onDrop: handleComponentDrop,\n        editMode: editMode\n        // you cannot drop on/displace tabs if they already exist\n        , disableDragdrop: !!topLevelTabs,\n        style: { zIndex: 100, ...style } },\n\n      ({ dropIndicatorProps }) =>\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(DashboardHeader, null),\n      dropIndicatorProps && ___EmotionJSX(\"div\", dropIndicatorProps),\n      topLevelTabs &&\n      ___EmotionJSX(WithPopoverMenu, {\n        shouldFocus: DashboardBuilder.shouldFocusTabs,\n        menuItems: [\n        ___EmotionJSX(IconButton, {\n          className: \"fa fa-level-down\",\n          label: \"Collapse tab content\",\n          onClick: this.handleDeleteTopLevelTabs })],\n\n\n        editMode: editMode },\n\n      ___EmotionJSX(DashboardComponent, {\n        id: topLevelTabs.id,\n        parentId: DASHBOARD_ROOT_ID,\n        depth: DASHBOARD_ROOT_DEPTH + 1,\n        index: 0,\n        renderTabContent: false,\n        renderHoverMenu: false,\n        onChangeTab: this.handleChangeTab }))))),\n\n\n\n\n\n\n\n\n\n      ___EmotionJSX(StyledDashboardContent, {\n        className: \"dashboard-content\",\n        dashboardFiltersOpen: this.state.dashboardFiltersOpen },\n\n      isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) &&\n      ___EmotionJSX(StickyVerticalBar, {\n        filtersOpen: this.state.dashboardFiltersOpen,\n        topOffset: barTopOffset },\n\n      ___EmotionJSX(ErrorBoundary, null,\n      ___EmotionJSX(FilterBar, {\n        filtersOpen: this.state.dashboardFiltersOpen,\n        toggleFiltersBar: this.toggleDashboardFiltersOpen }))),\n\n\n\n\n      ___EmotionJSX(\"div\", { className: \"grid-container\", \"data-test\": \"grid-container\" },\n      ___EmotionJSX(ParentSize, null,\n      ({ width }) =>\n      /*\n        We use a TabContainer irrespective of whether top-level tabs exist to maintain\n        a consistent React component tree. This avoids expensive mounts/unmounts of\n        the entire dashboard upon adding/removing top-level tabs, which would otherwise\n        happen because of React's diffing algorithm\n      */\n      ___EmotionJSX(TabContainer, {\n        id: DASHBOARD_GRID_ID,\n        activeKey: Math.min(tabIndex, childIds.length - 1),\n        onSelect: this.handleChangeTab,\n        animation: true,\n        mountOnEnter: true,\n        unmountOnExit: false },\n\n      ___EmotionJSX(TabContent, null,\n      _mapInstanceProperty(childIds).call(childIds, (id, index) =>\n      // Matching the key of the first TabPane irrespective of topLevelTabs\n      // lets us keep the same React component tree when !!topLevelTabs changes.\n      // This avoids expensive mounts/unmounts of the entire dashboard.\n      ___EmotionJSX(TabPane, {\n        key: index === 0 ? DASHBOARD_GRID_ID : id,\n        eventKey: index },\n\n      ___EmotionJSX(DashboardGrid, {\n        gridComponent: dashboardLayout[id]\n        // see isValidChild for why tabs do not increment the depth of their children\n        , depth: DASHBOARD_ROOT_DEPTH + 1 // (topLevelTabs ? 0 : 1)}\n        , width: width,\n        isComponentVisible: index === tabIndex }))))))),\n\n\n\n\n\n\n\n\n      editMode &&\n      ___EmotionJSX(BuilderComponentPane, {\n        topOffset: barTopOffset,\n        showBuilderPane: showBuilderPane,\n        setColorSchemeAndUnsavedChanges: setColorSchemeAndUnsavedChanges,\n        colorScheme: colorScheme })),\n\n\n\n      ___EmotionJSX(ToastPresenter, null)));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nDashboardBuilder.propTypes = propTypes;\nDashboardBuilder.defaultProps = defaultProps;\nDashboardBuilder.childContextTypes = {\n  dragDropManager: PropTypes.object.isRequired };const _default =\n\n\nDashboardBuilder;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TABS_HEIGHT, \"TABS_HEIGHT\", \"/app/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(HEADER_HEIGHT, \"HEADER_HEIGHT\", \"/app/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(StyledDashboardContent, \"StyledDashboardContent\", \"/app/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(DashboardBuilder, \"DashboardBuilder\", \"/app/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/DashboardBuilder.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/DashboardBuilder.jsx"],"names":["cx","ParentSize","PropTypes","React","Sticky","StickyContainer","TabContainer","TabContent","TabPane","styled","ErrorBoundary","BuilderComponentPane","DashboardHeader","DashboardGrid","IconButton","DragDroppable","DashboardComponent","ToastPresenter","WithPopoverMenu","getDragDropManager","findTabIndexByComponentId","getDirectPathToTabIndex","getLeafComponentIdFromPath","FeatureFlag","isFeatureEnabled","DASHBOARD_GRID_ID","DASHBOARD_ROOT_ID","DASHBOARD_ROOT_DEPTH","FilterBar","StickyVerticalBar","TABS_HEIGHT","HEADER_HEIGHT","propTypes","dashboardLayout","object","isRequired","deleteTopLevelTabs","func","editMode","bool","showBuilderPane","colorScheme","string","setColorSchemeAndUnsavedChanges","handleComponentDrop","directPathToChild","arrayOf","focusedFilterField","setDirectPathToChild","setMountedTab","defaultProps","undefined","StyledDashboardContent","div","theme","gridUnit","dashboardFiltersOpen","transitionTiming","DashboardBuilder","Component","shouldFocusTabs","event","container","target","className","test","contains","getRootLevelTabIndex","Math","max","currentComponent","getRootLevelTabsComponent","dashboardRoot","rootChildId","children","constructor","props","tabIndex","state","handleChangeTab","handleDeleteTopLevelTabs","toggleDashboardFiltersOpen","getChildContext","dragDropManager","context","UNSAFE_componentWillReceiveProps","nextProps","nextFocusComponent","currentFocusComponent","nextTabIndex","setState","visible","pathToTabIndex","firstTab","render","topLevelTabs","childIds","barTopOffset","style","zIndex","dropIndicatorProps","id","DASHBOARD_NATIVE_FILTERS","width","min","length","index","childContextTypes"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-env browser */\nimport cx from 'classnames';\n// ParentSize uses resize observer so the dashboard will update size\n// when its container size changes, due to e.g., builder side panel opening\nimport { ParentSize } from '@vx/responsive';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Sticky, StickyContainer } from 'react-sticky';\nimport { TabContainer, TabContent, TabPane } from 'react-bootstrap';\nimport { styled } from '@superset-ui/core';\n\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport BuilderComponentPane from 'src/dashboard/components/BuilderComponentPane';\nimport DashboardHeader from 'src/dashboard/containers/DashboardHeader';\nimport DashboardGrid from 'src/dashboard/containers/DashboardGrid';\nimport IconButton from 'src/dashboard/components/IconButton';\nimport DragDroppable from 'src/dashboard/components/dnd/DragDroppable';\nimport DashboardComponent from 'src/dashboard/containers/DashboardComponent';\nimport ToastPresenter from 'src/messageToasts/containers/ToastPresenter';\nimport WithPopoverMenu from 'src/dashboard/components/menu/WithPopoverMenu';\n\nimport getDragDropManager from 'src/dashboard/util/getDragDropManager';\nimport findTabIndexByComponentId from 'src/dashboard/util/findTabIndexByComponentId';\n\nimport getDirectPathToTabIndex from 'src/dashboard/util/getDirectPathToTabIndex';\nimport getLeafComponentIdFromPath from 'src/dashboard/util/getLeafComponentIdFromPath';\nimport { FeatureFlag, isFeatureEnabled } from 'src/featureFlags';\nimport {\n  DASHBOARD_GRID_ID,\n  DASHBOARD_ROOT_ID,\n  DASHBOARD_ROOT_DEPTH,\n} from '../util/constants';\nimport FilterBar from './nativeFilters/FilterBar';\nimport { StickyVerticalBar } from './StickyVerticalBar';\n\nconst TABS_HEIGHT = 47;\nconst HEADER_HEIGHT = 67;\n\nconst propTypes = {\n  // redux\n  dashboardLayout: PropTypes.object.isRequired,\n  deleteTopLevelTabs: PropTypes.func.isRequired,\n  editMode: PropTypes.bool.isRequired,\n  showBuilderPane: PropTypes.func,\n  colorScheme: PropTypes.string,\n  setColorSchemeAndUnsavedChanges: PropTypes.func.isRequired,\n  handleComponentDrop: PropTypes.func.isRequired,\n  directPathToChild: PropTypes.arrayOf(PropTypes.string),\n  focusedFilterField: PropTypes.object,\n  setDirectPathToChild: PropTypes.func.isRequired,\n  setMountedTab: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  showBuilderPane: false,\n  directPathToChild: [],\n  colorScheme: undefined,\n};\n\nconst StyledDashboardContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  height: auto;\n  flex-grow: 1;\n\n  .grid-container .dashboard-component-tabs {\n    box-shadow: none;\n    padding-left: 0;\n  }\n\n  .grid-container {\n    /* without this, the grid will not get smaller upon toggling the builder panel on */\n    min-width: 0;\n    width: 100%;\n    flex-grow: 1;\n    position: relative;\n    margin: ${({ theme }) => theme.gridUnit * 6}px\n      ${({ theme }) => theme.gridUnit * 8}px\n      ${({ theme }) => theme.gridUnit * 6}px\n      ${({ theme, dashboardFiltersOpen }) => {\n        if (dashboardFiltersOpen) return theme.gridUnit * 8;\n        return 0;\n      }}px;\n  }\n\n  .dashboard-component-chart-holder {\n    // transitionable traits to show filter relevance\n    transition: opacity ${({ theme }) => theme.transitionTiming}s,\n      border-color ${({ theme }) => theme.transitionTiming}s,\n      box-shadow ${({ theme }) => theme.transitionTiming}s;\n    border: 0px solid transparent;\n  }\n`;\n\nclass DashboardBuilder extends React.Component {\n  static shouldFocusTabs(event, container) {\n    // don't focus the tabs when we click on a tab\n    return (\n      event.target.className === 'ant-tabs-nav-wrap' ||\n      (/icon-button/.test(event.target.className) &&\n        container.contains(event.target))\n    );\n  }\n\n  static getRootLevelTabIndex(dashboardLayout, directPathToChild) {\n    return Math.max(\n      0,\n      findTabIndexByComponentId({\n        currentComponent: DashboardBuilder.getRootLevelTabsComponent(\n          dashboardLayout,\n        ),\n        directPathToChild,\n      }),\n    );\n  }\n\n  static getRootLevelTabsComponent(dashboardLayout) {\n    const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n    const rootChildId = dashboardRoot.children[0];\n    return rootChildId === DASHBOARD_GRID_ID\n      ? dashboardLayout[DASHBOARD_ROOT_ID]\n      : dashboardLayout[rootChildId];\n  }\n\n  constructor(props) {\n    super(props);\n\n    const { dashboardLayout, directPathToChild } = props;\n    const tabIndex = DashboardBuilder.getRootLevelTabIndex(\n      dashboardLayout,\n      directPathToChild,\n    );\n    this.state = {\n      tabIndex,\n      dashboardFiltersOpen: true,\n    };\n\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.handleDeleteTopLevelTabs = this.handleDeleteTopLevelTabs.bind(this);\n    this.toggleDashboardFiltersOpen = this.toggleDashboardFiltersOpen.bind(\n      this,\n    );\n  }\n\n  getChildContext() {\n    return {\n      dragDropManager: this.context.dragDropManager || getDragDropManager(),\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextFocusComponent = getLeafComponentIdFromPath(\n      nextProps.directPathToChild,\n    );\n    const currentFocusComponent = getLeafComponentIdFromPath(\n      this.props.directPathToChild,\n    );\n    if (nextFocusComponent !== currentFocusComponent) {\n      const { dashboardLayout, directPathToChild } = nextProps;\n      const nextTabIndex = DashboardBuilder.getRootLevelTabIndex(\n        dashboardLayout,\n        directPathToChild,\n      );\n\n      this.setState(() => ({ tabIndex: nextTabIndex }));\n    }\n  }\n\n  toggleDashboardFiltersOpen(visible) {\n    if (visible === undefined) {\n      this.setState(state => ({\n        ...state,\n        dashboardFiltersOpen: !state.dashboardFiltersOpen,\n      }));\n    } else {\n      this.setState(state => ({\n        ...state,\n        dashboardFiltersOpen: visible,\n      }));\n    }\n  }\n\n  handleChangeTab({ pathToTabIndex }) {\n    this.props.setDirectPathToChild(pathToTabIndex);\n  }\n\n  handleDeleteTopLevelTabs() {\n    this.props.deleteTopLevelTabs();\n\n    const { dashboardLayout } = this.props;\n    const firstTab = getDirectPathToTabIndex(\n      DashboardBuilder.getRootLevelTabsComponent(dashboardLayout),\n      0,\n    );\n    this.props.setDirectPathToChild(firstTab);\n  }\n\n  render() {\n    const {\n      handleComponentDrop,\n      dashboardLayout,\n      editMode,\n      showBuilderPane,\n      setColorSchemeAndUnsavedChanges,\n      colorScheme,\n    } = this.props;\n    const { tabIndex } = this.state;\n    const dashboardRoot = dashboardLayout[DASHBOARD_ROOT_ID];\n    const rootChildId = dashboardRoot.children[0];\n    const topLevelTabs =\n      rootChildId !== DASHBOARD_GRID_ID && dashboardLayout[rootChildId];\n\n    const childIds = topLevelTabs ? topLevelTabs.children : [DASHBOARD_GRID_ID];\n\n    const barTopOffset = HEADER_HEIGHT + (topLevelTabs ? TABS_HEIGHT : 0);\n\n    return (\n      <StickyContainer\n        className={cx('dashboard', editMode && 'dashboard--editing')}\n      >\n        <Sticky>\n          {({ style }) => (\n            <DragDroppable\n              component={dashboardRoot}\n              parentComponent={null}\n              depth={DASHBOARD_ROOT_DEPTH}\n              index={0}\n              orientation=\"column\"\n              onDrop={handleComponentDrop}\n              editMode={editMode}\n              // you cannot drop on/displace tabs if they already exist\n              disableDragdrop={!!topLevelTabs}\n              style={{ zIndex: 100, ...style }}\n            >\n              {({ dropIndicatorProps }) => (\n                <div>\n                  <DashboardHeader />\n                  {dropIndicatorProps && <div {...dropIndicatorProps} />}\n                  {topLevelTabs && (\n                    <WithPopoverMenu\n                      shouldFocus={DashboardBuilder.shouldFocusTabs}\n                      menuItems={[\n                        <IconButton\n                          className=\"fa fa-level-down\"\n                          label=\"Collapse tab content\"\n                          onClick={this.handleDeleteTopLevelTabs}\n                        />,\n                      ]}\n                      editMode={editMode}\n                    >\n                      <DashboardComponent\n                        id={topLevelTabs.id}\n                        parentId={DASHBOARD_ROOT_ID}\n                        depth={DASHBOARD_ROOT_DEPTH + 1}\n                        index={0}\n                        renderTabContent={false}\n                        renderHoverMenu={false}\n                        onChangeTab={this.handleChangeTab}\n                      />\n                    </WithPopoverMenu>\n                  )}\n                </div>\n              )}\n            </DragDroppable>\n          )}\n        </Sticky>\n\n        <StyledDashboardContent\n          className=\"dashboard-content\"\n          dashboardFiltersOpen={this.state.dashboardFiltersOpen}\n        >\n          {isFeatureEnabled(FeatureFlag.DASHBOARD_NATIVE_FILTERS) && (\n            <StickyVerticalBar\n              filtersOpen={this.state.dashboardFiltersOpen}\n              topOffset={barTopOffset}\n            >\n              <ErrorBoundary>\n                <FilterBar\n                  filtersOpen={this.state.dashboardFiltersOpen}\n                  toggleFiltersBar={this.toggleDashboardFiltersOpen}\n                />\n              </ErrorBoundary>\n            </StickyVerticalBar>\n          )}\n          <div className=\"grid-container\" data-test=\"grid-container\">\n            <ParentSize>\n              {({ width }) => (\n                /*\n                  We use a TabContainer irrespective of whether top-level tabs exist to maintain\n                  a consistent React component tree. This avoids expensive mounts/unmounts of\n                  the entire dashboard upon adding/removing top-level tabs, which would otherwise\n                  happen because of React's diffing algorithm\n                */\n                <TabContainer\n                  id={DASHBOARD_GRID_ID}\n                  activeKey={Math.min(tabIndex, childIds.length - 1)}\n                  onSelect={this.handleChangeTab}\n                  animation\n                  mountOnEnter\n                  unmountOnExit={false}\n                >\n                  <TabContent>\n                    {childIds.map((id, index) => (\n                      // Matching the key of the first TabPane irrespective of topLevelTabs\n                      // lets us keep the same React component tree when !!topLevelTabs changes.\n                      // This avoids expensive mounts/unmounts of the entire dashboard.\n                      <TabPane\n                        key={index === 0 ? DASHBOARD_GRID_ID : id}\n                        eventKey={index}\n                      >\n                        <DashboardGrid\n                          gridComponent={dashboardLayout[id]}\n                          // see isValidChild for why tabs do not increment the depth of their children\n                          depth={DASHBOARD_ROOT_DEPTH + 1} // (topLevelTabs ? 0 : 1)}\n                          width={width}\n                          isComponentVisible={index === tabIndex}\n                        />\n                      </TabPane>\n                    ))}\n                  </TabContent>\n                </TabContainer>\n              )}\n            </ParentSize>\n          </div>\n          {editMode && (\n            <BuilderComponentPane\n              topOffset={barTopOffset}\n              showBuilderPane={showBuilderPane}\n              setColorSchemeAndUnsavedChanges={setColorSchemeAndUnsavedChanges}\n              colorScheme={colorScheme}\n            />\n          )}\n        </StyledDashboardContent>\n        <ToastPresenter />\n      </StickyContainer>\n    );\n  }\n}\n\nDashboardBuilder.propTypes = propTypes;\nDashboardBuilder.defaultProps = defaultProps;\nDashboardBuilder.childContextTypes = {\n  dragDropManager: PropTypes.object.isRequired,\n};\n\nexport default DashboardBuilder;\n"]},"metadata":{},"sourceType":"module"}