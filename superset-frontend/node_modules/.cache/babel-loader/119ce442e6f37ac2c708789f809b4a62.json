{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$keys from \"@babel/runtime-corejs3/core-js-stable/object/keys\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { t, SupersetClient } from '@superset-ui/core';\nimport TableView from 'src/components/TableView';\nimport withToasts from '../messageToasts/enhancers/withToasts';\nimport Loading from './Loading';\nimport '../../stylesheets/reactable-pagination.less';\nimport { EmptyWrapperType } from './TableView/TableView';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst propTypes = {\n  dataEndpoint: PropTypes.string.isRequired,\n  mutator: PropTypes.func,\n  columns: PropTypes.arrayOf(PropTypes.string),\n  addDangerToast: PropTypes.func.isRequired,\n  addInfoToast: PropTypes.func.isRequired,\n  addSuccessToast: PropTypes.func.isRequired,\n  addWarningToast: PropTypes.func.isRequired };\n\nconst TableLoader = props => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const { dataEndpoint, mutator } = props;\n    if (dataEndpoint) {\n      SupersetClient.get({ endpoint: dataEndpoint }).\n      then(({ json }) => {\n        const data = mutator ? mutator(json) : json;\n        setData(data);\n        setIsLoading(false);\n      }).\n      catch(() => {\n        setIsLoading(false);\n        props.addDangerToast(t('An error occurred'));\n      });\n    }\n  }, [props]);\n  const { columns, ...tableProps } = props;\n  const memoizedColumns = useMemo(() => {\n    let tableColumns = columns;\n    if (!columns && data.length > 0) {var _context;\n      tableColumns = _filterInstanceProperty(_context = _Object$keys(data[0])).call(_context, col => col[0] !== '_');\n    }\n    return tableColumns ?\n    _mapInstanceProperty(tableColumns).call(tableColumns, column => ({\n      accessor: column,\n      Header: column })) :\n\n    [];\n  }, [columns, data]);\n  delete tableProps.dataEndpoint;\n  delete tableProps.mutator;\n  if (isLoading) {\n    return ___EmotionJSX(Loading, null);\n  }\n  return ___EmotionJSX(TableView, _extends({ columns: memoizedColumns, data: data, pageSize: 50, loading: isLoading, emptyWrapperType: EmptyWrapperType.Small }, tableProps));\n};__signature__(TableLoader, \"useState{[data, setData]([])}\\nuseState{[isLoading, setIsLoading](true)}\\nuseEffect{}\\nuseMemo{memoizedColumns}\");\nTableLoader.propTypes = propTypes;const _default =\nwithToasts(TableLoader);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/components/TableLoader.tsx\");reactHotLoader.register(TableLoader, \"TableLoader\", \"/app/superset-frontend/src/components/TableLoader.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/TableLoader.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/TableLoader.tsx"],"names":[],"mappings":"8pBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,IAAgB,QAAhB,EAA0B,SAA1B,EAAqC,OAArC,QAAoD,OAApD;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,SAAS,CAAT,EAAY,cAAZ,QAA8C,mBAA9C;AACA,OAAO,SAAP,MAAsB,0BAAtB;AACA,OAAO,UAAP,MAAuB,uCAAvB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,6CAAP;AACA,SAAS,gBAAT,QAAiC,uBAAjC,C;AAEA,MAAM,SAAS,GAAG;AAChB,EAAA,YAAY,EAAE,SAAS,CAAC,MAAV,CAAiB,UADf;AAEhB,EAAA,OAAO,EAAE,SAAS,CAAC,IAFH;AAGhB,EAAA,OAAO,EAAE,SAAS,CAAC,OAAV,CAAkB,SAAS,CAAC,MAA5B,CAHO;AAIhB,EAAA,cAAc,EAAE,SAAS,CAAC,IAAV,CAAe,UAJf;AAKhB,EAAA,YAAY,EAAE,SAAS,CAAC,IAAV,CAAe,UALb;AAMhB,EAAA,eAAe,EAAE,SAAS,CAAC,IAAV,CAAe,UANhB;AAOhB,EAAA,eAAe,EAAE,SAAS,CAAC,IAAV,CAAe,UAPhB,EAAlB;;AAiBA,MAAM,WAAW,GAAI,KAAD,IAA4B;AAC9C,QAAM,CAAC,IAAD,EAAO,OAAP,IAAkB,QAAQ,CAAa,EAAb,CAAhC;AACA,QAAM,CAAC,SAAD,EAAY,YAAZ,IAA4B,QAAQ,CAAC,IAAD,CAA1C;AAEA,EAAA,SAAS,CAAC,MAAK;AACb,UAAM,EAAE,YAAF,EAAgB,OAAhB,KAA4B,KAAlC;AACA,QAAI,YAAJ,EAAkB;AAChB,MAAA,cAAc,CAAC,GAAf,CAAmB,EAAE,QAAQ,EAAE,YAAZ,EAAnB;AACG,MAAA,IADH,CACQ,CAAC,EAAE,IAAF,EAAD,KAAa;AACjB,cAAM,IAAI,GAAI,OAAO,GAAG,OAAO,CAAC,IAAD,CAAV,GAAmB,IAAxC;AACA,QAAA,OAAO,CAAC,IAAD,CAAP;AACA,QAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OALH;AAMG,MAAA,KANH,CAMS,MAAK;AACV,QAAA,YAAY,CAAC,KAAD,CAAZ;AACA,QAAA,KAAK,CAAC,cAAN,CAAqB,CAAC,CAAC,mBAAD,CAAtB;AACD,OATH;AAUD;AACF,GAdQ,EAcN,CAAC,KAAD,CAdM,CAAT;AAgBA,QAAM,EAAE,OAAF,EAAW,GAAG,UAAd,KAA6B,KAAnC;AAEA,QAAM,eAAe,GAAG,OAAO,CAAC,MAAK;AACnC,QAAI,YAAY,GAAG,OAAnB;AACA,QAAI,CAAC,OAAD,IAAY,IAAI,CAAC,MAAL,GAAc,CAA9B,EAAiC;AAC/B,MAAA,YAAY,GAAG,gDAAY,IAAI,CAAC,CAAD,CAAhB,kBAA4B,GAAG,IAAI,GAAG,CAAC,CAAD,CAAH,KAAW,GAA9C,CAAf;AACD;AACD,WAAO,YAAY;AACf,yBAAA,YAAY,MAAZ,CAAA,YAAY,EAAM,MAAD,KAAqB;AACpC,MAAA,QAAQ,EAAE,MAD0B;AAEpC,MAAA,MAAM,EAAE,MAF4B,EAArB,CAAL,CADG;;AAKf,MALJ;AAMD,GAX8B,EAW5B,CAAC,OAAD,EAAU,IAAV,CAX4B,CAA/B;AAaA,SAAO,UAAU,CAAC,YAAlB;AACA,SAAO,UAAU,CAAC,OAAlB;AAEA,MAAI,SAAJ,EAAe;AACb,WAAO,cAAC,OAAD,OAAP;AACD;AAED,SACE,cAAC,SAAD,aACE,OAAO,EAAE,eADX,EAEE,IAAI,EAAE,IAFR,EAGE,QAAQ,EAAE,EAHZ,EAIE,OAAO,EAAE,SAJX,EAKE,gBAAgB,EAAE,gBAAgB,CAAC,KALrC,IAMM,UANN,EADF;AAUD,CApDD,C,cAAM,W;AAsDN,WAAW,CAAC,SAAZ,GAAwB,SAAxB,C;AAEe,UAAU,CAAC,WAAD,C,CAAzB,wB,iLAzEM,S,gGAiBA,W","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { t, SupersetClient, JsonObject } from '@superset-ui/core';\nimport TableView from 'src/components/TableView';\nimport withToasts from '../messageToasts/enhancers/withToasts';\nimport Loading from './Loading';\nimport '../../stylesheets/reactable-pagination.less';\nimport { EmptyWrapperType } from './TableView/TableView';\n\nconst propTypes = {\n  dataEndpoint: PropTypes.string.isRequired,\n  mutator: PropTypes.func,\n  columns: PropTypes.arrayOf(PropTypes.string),\n  addDangerToast: PropTypes.func.isRequired,\n  addInfoToast: PropTypes.func.isRequired,\n  addSuccessToast: PropTypes.func.isRequired,\n  addWarningToast: PropTypes.func.isRequired,\n};\n\ninterface TableLoaderProps {\n  dataEndpoint?: string;\n  mutator?: (data: JsonObject) => any[];\n  columns?: string[];\n  addDangerToast(text: string): any;\n}\n\nconst TableLoader = (props: TableLoaderProps) => {\n  const [data, setData] = useState<Array<any>>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const { dataEndpoint, mutator } = props;\n    if (dataEndpoint) {\n      SupersetClient.get({ endpoint: dataEndpoint })\n        .then(({ json }) => {\n          const data = (mutator ? mutator(json) : json) as Array<any>;\n          setData(data);\n          setIsLoading(false);\n        })\n        .catch(() => {\n          setIsLoading(false);\n          props.addDangerToast(t('An error occurred'));\n        });\n    }\n  }, [props]);\n\n  const { columns, ...tableProps } = props;\n\n  const memoizedColumns = useMemo(() => {\n    let tableColumns = columns;\n    if (!columns && data.length > 0) {\n      tableColumns = Object.keys(data[0]).filter(col => col[0] !== '_');\n    }\n    return tableColumns\n      ? tableColumns.map((column: string) => ({\n          accessor: column,\n          Header: column,\n        }))\n      : [];\n  }, [columns, data]);\n\n  delete tableProps.dataEndpoint;\n  delete tableProps.mutator;\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <TableView\n      columns={memoizedColumns}\n      data={data}\n      pageSize={50}\n      loading={isLoading}\n      emptyWrapperType={EmptyWrapperType.Small}\n      {...tableProps}\n    />\n  );\n};\n\nTableLoader.propTypes = propTypes;\n\nexport default withToasts(TableLoader);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}