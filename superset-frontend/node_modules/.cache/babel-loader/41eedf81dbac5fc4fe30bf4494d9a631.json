{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-jsonschema-form';\nimport chrono from 'chrono-node';\nimport { Col, FormControl, FormGroup, Row } from 'react-bootstrap';\nimport { t, styled } from '@superset-ui/core';\n\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport FormLabel from 'src/components/FormLabel';\nimport './ScheduleQueryButton.less';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst validators = {\n  greater: (a, b) => a > b,\n  greater_equal: (a, b) => a >= b,\n  less: (a, b) => a < b,\n  less_equal: (a, b) => a <= b };\n\n\nfunction getJSONSchema() {var _context;\n  const jsonSchema = window.featureFlags.SCHEDULED_QUERIES.JSONSCHEMA;\n  // parse date-time into usable value (eg, 'today' => `new Date()`)\n  _forEachInstanceProperty(_context = _Object$entries(jsonSchema.properties)).call(_context, ([key, properties]) => {\n    if (properties.default && properties.format === 'date-time') {\n      jsonSchema.properties[key] = {\n        ...properties,\n        default: chrono.parseDate(properties.default).toISOString() };\n\n    }\n  });\n  return jsonSchema;\n}\n\nfunction getUISchema() {\n  return window.featureFlags.SCHEDULED_QUERIES.UISCHEMA;\n}\n\nfunction getValidationRules() {\n  return window.featureFlags.SCHEDULED_QUERIES.VALIDATION || [];\n}\n\nfunction getValidator() {\n  const rules = getValidationRules();\n  return (formData, errors) => {\n    _forEachInstanceProperty(rules).call(rules, rule => {var _context2, _context3;\n      const test = validators[rule.name];\n      const args = _mapInstanceProperty(_context2 = rule.arguments).call(_context2, name => formData[name]);\n      const container = rule.container || _sliceInstanceProperty(_context3 = rule.arguments).call(_context3, -1)[0];\n      if (!test(...args)) {\n        errors[container].addError(rule.message);\n      }\n    });\n    return errors;\n  };\n}\n\nconst propTypes = {\n  defaultLabel: PropTypes.string,\n  sql: PropTypes.string.isRequired,\n  schema: PropTypes.string.isRequired,\n  dbId: PropTypes.number.isRequired,\n  animation: PropTypes.bool,\n  onSchedule: PropTypes.func,\n  scheduleQueryWarning: PropTypes.string,\n  disabled: PropTypes.bool,\n  tooltip: PropTypes.string };\n\nconst defaultProps = {\n  defaultLabel: t('Undefined'),\n  animation: true,\n  onSchedule: () => {},\n  scheduleQueryWarning: null,\n  disabled: false,\n  tooltip: null };\n\n\nconst StyledRow = styled(Row)`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nclass ScheduleQueryButton extends React.PureComponent {\n  constructor(props) {var _context4, _context5, _context6, _context7, _context8;\n    super(props);\n    this.state = {\n      description: '',\n      label: props.defaultLabel,\n      showSchedule: false };\n\n    this.toggleSchedule = _bindInstanceProperty(_context4 = this.toggleSchedule).call(_context4, this);\n    this.onSchedule = _bindInstanceProperty(_context5 = this.onSchedule).call(_context5, this);\n    this.onCancel = _bindInstanceProperty(_context6 = this.onCancel).call(_context6, this);\n    this.onLabelChange = _bindInstanceProperty(_context7 = this.onLabelChange).call(_context7, this);\n    this.onDescriptionChange = _bindInstanceProperty(_context8 = this.onDescriptionChange).call(_context8, this);\n  }\n\n  onSchedule({ formData }) {\n    const query = {\n      label: this.state.label,\n      description: this.state.description,\n      db_id: this.props.dbId,\n      schema: this.props.schema,\n      sql: this.props.sql,\n      extra_json: _JSON$stringify({ schedule_info: formData }) };\n\n    this.props.onSchedule(query);\n    this.saveModal.close();\n  }\n\n  onCancel() {\n    this.saveModal.close();\n  }\n\n  onLabelChange(e) {\n    this.setState({ label: e.target.value });\n  }\n\n  onDescriptionChange(e) {\n    this.setState({ description: e.target.value });\n  }\n\n  toggleSchedule() {\n    this.setState(prevState => ({ showSchedule: !prevState.showSchedule }));\n  }\n\n  renderModalBody() {\n    return (\n      ___EmotionJSX(FormGroup, null,\n      ___EmotionJSX(StyledRow, null,\n      ___EmotionJSX(Col, { md: 12 },\n      ___EmotionJSX(FormLabel, { className: \"control-label\", htmlFor: \"embed-height\" },\n      t('Label')),\n\n      ___EmotionJSX(FormControl, {\n        type: \"text\",\n        placeholder: t('Label for your query'),\n        value: this.state.label,\n        onChange: this.onLabelChange }))),\n\n\n\n      ___EmotionJSX(StyledRow, null,\n      ___EmotionJSX(Col, { md: 12 },\n      ___EmotionJSX(FormLabel, { className: \"control-label\", htmlFor: \"embed-height\" },\n      t('Description')),\n\n      ___EmotionJSX(FormControl, {\n        componentClass: \"textarea\",\n        placeholder: t('Write a description for your query'),\n        value: this.state.description,\n        onChange: this.onDescriptionChange }))),\n\n\n\n      ___EmotionJSX(Row, null,\n      ___EmotionJSX(Col, { md: 12 },\n      ___EmotionJSX(\"div\", { className: \"json-schema\" },\n      ___EmotionJSX(Form, {\n        schema: getJSONSchema(),\n        uiSchema: getUISchema(),\n        onSubmit: this.onSchedule,\n        validate: getValidator() })))),\n\n\n\n\n      this.props.scheduleQueryWarning &&\n      ___EmotionJSX(Row, null,\n      ___EmotionJSX(Col, { md: 12 },\n      ___EmotionJSX(\"small\", null, this.props.scheduleQueryWarning)))));\n\n\n\n\n\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(\"span\", { className: \"ScheduleQueryButton\" },\n      ___EmotionJSX(ModalTrigger, {\n        ref: ref => {\n          this.saveModal = ref;\n        },\n        modalTitle: t('Schedule query'),\n        modalBody: this.renderModalBody(),\n        triggerNode:\n        ___EmotionJSX(\"div\", {\n          role: \"button\",\n          buttonSize: \"small\",\n          onClick: this.toggleSchedule,\n          disabled: this.props.disabled,\n          tooltip: this.props.tooltip },\n\n        t('Schedule')) })));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}ScheduleQueryButton.propTypes = propTypes;\nScheduleQueryButton.defaultProps = defaultProps;const _default =\n\nScheduleQueryButton;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(validators, \"validators\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.jsx\");reactHotLoader.register(getJSONSchema, \"getJSONSchema\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.jsx\");reactHotLoader.register(getUISchema, \"getUISchema\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.jsx\");reactHotLoader.register(getValidationRules, \"getValidationRules\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.jsx\");reactHotLoader.register(getValidator, \"getValidator\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.jsx\");reactHotLoader.register(StyledRow, \"StyledRow\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.jsx\");reactHotLoader.register(ScheduleQueryButton, \"ScheduleQueryButton\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/ScheduleQueryButton.jsx"],"names":["React","PropTypes","Form","chrono","Col","FormControl","FormGroup","Row","t","styled","ModalTrigger","FormLabel","validators","greater","a","b","greater_equal","less","less_equal","getJSONSchema","jsonSchema","window","featureFlags","SCHEDULED_QUERIES","JSONSCHEMA","properties","key","default","format","parseDate","toISOString","getUISchema","UISCHEMA","getValidationRules","VALIDATION","getValidator","rules","formData","errors","rule","test","name","args","arguments","container","addError","message","propTypes","defaultLabel","string","sql","isRequired","schema","dbId","number","animation","bool","onSchedule","func","scheduleQueryWarning","disabled","tooltip","defaultProps","StyledRow","theme","gridUnit","ScheduleQueryButton","PureComponent","constructor","props","state","description","label","showSchedule","toggleSchedule","onCancel","onLabelChange","onDescriptionChange","query","db_id","extra_json","schedule_info","saveModal","close","e","setState","target","value","prevState","renderModalBody","render","ref"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-jsonschema-form';\nimport chrono from 'chrono-node';\nimport { Col, FormControl, FormGroup, Row } from 'react-bootstrap';\nimport { t, styled } from '@superset-ui/core';\n\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport FormLabel from 'src/components/FormLabel';\nimport './ScheduleQueryButton.less';\n\nconst validators = {\n  greater: (a, b) => a > b,\n  greater_equal: (a, b) => a >= b,\n  less: (a, b) => a < b,\n  less_equal: (a, b) => a <= b,\n};\n\nfunction getJSONSchema() {\n  const jsonSchema = window.featureFlags.SCHEDULED_QUERIES.JSONSCHEMA;\n  // parse date-time into usable value (eg, 'today' => `new Date()`)\n  Object.entries(jsonSchema.properties).forEach(([key, properties]) => {\n    if (properties.default && properties.format === 'date-time') {\n      jsonSchema.properties[key] = {\n        ...properties,\n        default: chrono.parseDate(properties.default).toISOString(),\n      };\n    }\n  });\n  return jsonSchema;\n}\n\nfunction getUISchema() {\n  return window.featureFlags.SCHEDULED_QUERIES.UISCHEMA;\n}\n\nfunction getValidationRules() {\n  return window.featureFlags.SCHEDULED_QUERIES.VALIDATION || [];\n}\n\nfunction getValidator() {\n  const rules = getValidationRules();\n  return (formData, errors) => {\n    rules.forEach(rule => {\n      const test = validators[rule.name];\n      const args = rule.arguments.map(name => formData[name]);\n      const container = rule.container || rule.arguments.slice(-1)[0];\n      if (!test(...args)) {\n        errors[container].addError(rule.message);\n      }\n    });\n    return errors;\n  };\n}\n\nconst propTypes = {\n  defaultLabel: PropTypes.string,\n  sql: PropTypes.string.isRequired,\n  schema: PropTypes.string.isRequired,\n  dbId: PropTypes.number.isRequired,\n  animation: PropTypes.bool,\n  onSchedule: PropTypes.func,\n  scheduleQueryWarning: PropTypes.string,\n  disabled: PropTypes.bool,\n  tooltip: PropTypes.string,\n};\nconst defaultProps = {\n  defaultLabel: t('Undefined'),\n  animation: true,\n  onSchedule: () => {},\n  scheduleQueryWarning: null,\n  disabled: false,\n  tooltip: null,\n};\n\nconst StyledRow = styled(Row)`\n  padding-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nclass ScheduleQueryButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: '',\n      label: props.defaultLabel,\n      showSchedule: false,\n    };\n    this.toggleSchedule = this.toggleSchedule.bind(this);\n    this.onSchedule = this.onSchedule.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.onLabelChange = this.onLabelChange.bind(this);\n    this.onDescriptionChange = this.onDescriptionChange.bind(this);\n  }\n\n  onSchedule({ formData }) {\n    const query = {\n      label: this.state.label,\n      description: this.state.description,\n      db_id: this.props.dbId,\n      schema: this.props.schema,\n      sql: this.props.sql,\n      extra_json: JSON.stringify({ schedule_info: formData }),\n    };\n    this.props.onSchedule(query);\n    this.saveModal.close();\n  }\n\n  onCancel() {\n    this.saveModal.close();\n  }\n\n  onLabelChange(e) {\n    this.setState({ label: e.target.value });\n  }\n\n  onDescriptionChange(e) {\n    this.setState({ description: e.target.value });\n  }\n\n  toggleSchedule() {\n    this.setState(prevState => ({ showSchedule: !prevState.showSchedule }));\n  }\n\n  renderModalBody() {\n    return (\n      <FormGroup>\n        <StyledRow>\n          <Col md={12}>\n            <FormLabel className=\"control-label\" htmlFor=\"embed-height\">\n              {t('Label')}\n            </FormLabel>\n            <FormControl\n              type=\"text\"\n              placeholder={t('Label for your query')}\n              value={this.state.label}\n              onChange={this.onLabelChange}\n            />\n          </Col>\n        </StyledRow>\n        <StyledRow>\n          <Col md={12}>\n            <FormLabel className=\"control-label\" htmlFor=\"embed-height\">\n              {t('Description')}\n            </FormLabel>\n            <FormControl\n              componentClass=\"textarea\"\n              placeholder={t('Write a description for your query')}\n              value={this.state.description}\n              onChange={this.onDescriptionChange}\n            />\n          </Col>\n        </StyledRow>\n        <Row>\n          <Col md={12}>\n            <div className=\"json-schema\">\n              <Form\n                schema={getJSONSchema()}\n                uiSchema={getUISchema()}\n                onSubmit={this.onSchedule}\n                validate={getValidator()}\n              />\n            </div>\n          </Col>\n        </Row>\n        {this.props.scheduleQueryWarning && (\n          <Row>\n            <Col md={12}>\n              <small>{this.props.scheduleQueryWarning}</small>\n            </Col>\n          </Row>\n        )}\n      </FormGroup>\n    );\n  }\n\n  render() {\n    return (\n      <span className=\"ScheduleQueryButton\">\n        <ModalTrigger\n          ref={ref => {\n            this.saveModal = ref;\n          }}\n          modalTitle={t('Schedule query')}\n          modalBody={this.renderModalBody()}\n          triggerNode={\n            <div\n              role=\"button\"\n              buttonSize=\"small\"\n              onClick={this.toggleSchedule}\n              disabled={this.props.disabled}\n              tooltip={this.props.tooltip}\n            >\n              {t('Schedule')}\n            </div>\n          }\n        />\n      </span>\n    );\n  }\n}\nScheduleQueryButton.propTypes = propTypes;\nScheduleQueryButton.defaultProps = defaultProps;\n\nexport default ScheduleQueryButton;\n"]},"metadata":{},"sourceType":"module"}