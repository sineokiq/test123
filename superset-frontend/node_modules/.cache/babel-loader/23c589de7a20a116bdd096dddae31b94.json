{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport CopyToClipboard from './CopyToClipboard';\nimport { getShortUrl } from '../utils/common';\nimport withToasts from '../messageToasts/enhancers/withToasts';\nimport ModalTrigger from './ModalTrigger';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nclass URLShortLinkModal extends React.Component {\n  constructor(props) {var _context, _context2, _context3;\n    super(props);\n    this.state = {\n      shortUrl: '' };\n\n    this.modal = null;\n    this.setModalRef = _bindInstanceProperty(_context = this.setModalRef).call(_context, this);\n    this.onShortUrlSuccess = _bindInstanceProperty(_context2 = this.onShortUrlSuccess).call(_context2, this);\n    this.getCopyUrl = _bindInstanceProperty(_context3 = this.getCopyUrl).call(_context3, this);\n  }\n  onShortUrlSuccess(shortUrl) {\n    this.setState(() => ({ shortUrl }));\n  }\n  setModalRef(ref) {\n    this.modal = ref;\n  }\n  getCopyUrl() {\n    getShortUrl(this.props.url).\n    then(this.onShortUrlSuccess).\n    catch(this.props.addDangerToast);\n  }\n  render() {\n    const emailBody = t('%s%s', this.props.emailContent, this.state.shortUrl);\n    return ___EmotionJSX(ModalTrigger, { ref: this.setModalRef, triggerNode: this.props.triggerNode, beforeOpen: this.getCopyUrl, modalTitle: this.props.title || t('Share dashboard'), modalBody: ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(CopyToClipboard, { text: this.state.shortUrl, copyNode: ___EmotionJSX(\"i\", { className: \"fa fa-clipboard\", title: t('Copy to clipboard') }) }), \"\\xA0\\xA0\",\n\n      ___EmotionJSX(\"a\", { href: `mailto:?Subject=${this.props.emailSubject}%20&Body=${emailBody}` },\n      ___EmotionJSX(\"i\", { className: \"fa fa-envelope\" }))) });\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}URLShortLinkModal.defaultProps = {\n  url: window.location.href.substring(window.location.origin.length),\n  emailSubject: '',\n  emailContent: '' };const _default =\n\nwithToasts(URLShortLinkModal);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(URLShortLinkModal, \"URLShortLinkModal\", \"/app/superset-frontend/src/components/URLShortLinkModal.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/URLShortLinkModal.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/URLShortLinkModal.tsx"],"names":[],"mappings":"gYAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,CAAT,QAAkB,mBAAlB;AACA,OAAO,eAAP,MAA4B,mBAA5B;AACA,SAAS,WAAT,QAA4B,iBAA5B;AACA,OAAO,UAAP,MAAuB,uCAAvB;AACA,OAAO,YAAP,MAAyB,gBAAzB,C;AAeA,MAAM,iBAAN,SAAgC,KAAK,CAAC,SAAtC,CAGC;AASC,EAAA,WAAA,CAAY,KAAZ,EAAyC;AACvC,UAAM,KAAN;AACA,SAAK,KAAL,GAAa;AACX,MAAA,QAAQ,EAAE,EADC,EAAb;;AAGA,SAAK,KAAL,GAAa,IAAb;AACA,SAAK,WAAL,GAAmB,sCAAK,WAAL,iBAAsB,IAAtB,CAAnB;AACA,SAAK,iBAAL,GAAyB,uCAAK,iBAAL,kBAA4B,IAA5B,CAAzB;AACA,SAAK,UAAL,GAAkB,uCAAK,UAAL,kBAAqB,IAArB,CAAlB;AACD;AAED,EAAA,iBAAiB,CAAC,QAAD,EAAiB;AAChC,SAAK,QAAL,CAAc,OAAO,EAAE,QAAF,EAAP,CAAd;AACD;AAED,EAAA,WAAW,CAAC,GAAD,EAAyB;AAClC,SAAK,KAAL,GAAa,GAAb;AACD;AAED,EAAA,UAAU,GAAA;AACR,IAAA,WAAW,CAAC,KAAK,KAAL,CAAW,GAAZ,CAAX;AACG,IAAA,IADH,CACQ,KAAK,iBADb;AAEG,IAAA,KAFH,CAES,KAAK,KAAL,CAAW,cAFpB;AAGD;AAED,EAAA,MAAM,GAAA;AACJ,UAAM,SAAS,GAAG,CAAC,CAAC,MAAD,EAAS,KAAK,KAAL,CAAW,YAApB,EAAkC,KAAK,KAAL,CAAW,QAA7C,CAAnB;AACA,WACE,cAAC,YAAD,IACE,GAAG,EAAE,KAAK,WADZ,EAEE,WAAW,EAAE,KAAK,KAAL,CAAW,WAF1B,EAGE,UAAU,EAAE,KAAK,UAHnB,EAIE,UAAU,EAAE,KAAK,KAAL,CAAW,KAAX,IAAoB,CAAC,CAAC,iBAAD,CAJnC,EAKE,SAAS,EACP;AACE,oBAAC,eAAD,IACE,IAAI,EAAE,KAAK,KAAL,CAAW,QADnB,EAEE,QAAQ,EACN,qBAAG,SAAS,EAAC,iBAAb,EAA+B,KAAK,EAAE,CAAC,CAAC,mBAAD,CAAvC,GAHJ,GADF;;AAQE,2BACE,IAAI,EAAE,mBAAmB,KAAK,KAAL,CAAW,YAAY,YAAY,SAAS,EADvE;AAGE,2BAAG,SAAS,EAAC,gBAAb,GAHF,CARF,CANJ,GADF;;;AAwBD,GA5DF;AAAA;AAAA,6BACQ,iBAAA,CAAA,YAAA,GAAe;AACpB,EAAA,GAAG,EAAE,MAAM,CAAC,QAAP,CAAgB,IAAhB,CAAqB,SAArB,CAA+B,MAAM,CAAC,QAAP,CAAgB,MAAhB,CAAuB,MAAtD,CADe;AAEpB,EAAA,YAAY,EAAE,EAFM;AAGpB,EAAA,YAAY,EAAE,EAHM,EAAf,C;;AA8DM,UAAU,CAAC,iBAAD,C,CAAzB,wB,iLAlEM,iB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport CopyToClipboard from './CopyToClipboard';\nimport { getShortUrl } from '../utils/common';\nimport withToasts from '../messageToasts/enhancers/withToasts';\nimport ModalTrigger from './ModalTrigger';\n\ntype URLShortLinkModalProps = {\n  url: string;\n  emailSubject: string;\n  emailContent: string;\n  title?: string;\n  addDangerToast: (msg: string) => void;\n  triggerNode: JSX.Element;\n};\n\ntype URLShortLinkModalState = {\n  shortUrl: string;\n};\n\nclass URLShortLinkModal extends React.Component<\n  URLShortLinkModalProps,\n  URLShortLinkModalState\n> {\n  static defaultProps = {\n    url: window.location.href.substring(window.location.origin.length),\n    emailSubject: '',\n    emailContent: '',\n  };\n\n  modal: ModalTrigger | null;\n\n  constructor(props: URLShortLinkModalProps) {\n    super(props);\n    this.state = {\n      shortUrl: '',\n    };\n    this.modal = null;\n    this.setModalRef = this.setModalRef.bind(this);\n    this.onShortUrlSuccess = this.onShortUrlSuccess.bind(this);\n    this.getCopyUrl = this.getCopyUrl.bind(this);\n  }\n\n  onShortUrlSuccess(shortUrl: string) {\n    this.setState(() => ({ shortUrl }));\n  }\n\n  setModalRef(ref: ModalTrigger | null) {\n    this.modal = ref;\n  }\n\n  getCopyUrl() {\n    getShortUrl(this.props.url)\n      .then(this.onShortUrlSuccess)\n      .catch(this.props.addDangerToast);\n  }\n\n  render() {\n    const emailBody = t('%s%s', this.props.emailContent, this.state.shortUrl);\n    return (\n      <ModalTrigger\n        ref={this.setModalRef}\n        triggerNode={this.props.triggerNode}\n        beforeOpen={this.getCopyUrl}\n        modalTitle={this.props.title || t('Share dashboard')}\n        modalBody={\n          <div>\n            <CopyToClipboard\n              text={this.state.shortUrl}\n              copyNode={\n                <i className=\"fa fa-clipboard\" title={t('Copy to clipboard')} />\n              }\n            />\n            &nbsp;&nbsp;\n            <a\n              href={`mailto:?Subject=${this.props.emailSubject}%20&Body=${emailBody}`}\n            >\n              <i className=\"fa fa-envelope\" />\n            </a>\n          </div>\n        }\n      />\n    );\n  }\n}\n\nexport default withToasts(URLShortLinkModal);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}