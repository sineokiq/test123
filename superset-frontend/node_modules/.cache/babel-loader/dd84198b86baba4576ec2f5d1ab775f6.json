{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport TooltipWrapper from 'src/components/TooltipWrapper';\nimport Icon from 'src/components/Icon';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\nexport default function ActionsBar({ actions }) {\n  return ___EmotionJSX(StyledActions, { className: \"actions\" },\n  _mapInstanceProperty(actions).call(actions, (action, index) => {\n    if (action.tooltip) {\n      return ___EmotionJSX(TooltipWrapper, { label: action.label, tooltip: action.tooltip, placement: action.placement || '', key: index },\n      ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", \"data-test\": action.label, onClick: action.onClick },\n      ___EmotionJSX(Icon, { name: action.icon })));\n\n\n    }\n    return ___EmotionJSX(\"span\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: action.onClick, \"data-test\": action.label, key: index },\n    ___EmotionJSX(Icon, { name: action.icon }));\n\n  }));\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledActions, \"StyledActions\", \"/app/superset-frontend/src/components/ListView/ActionsBar.tsx\");reactHotLoader.register(ActionsBar, \"ActionsBar\", \"/app/superset-frontend/src/components/ListView/ActionsBar.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/ListView/ActionsBar.tsx"],"names":[],"mappings":"8XAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,OAAO,cAAP,MAA2B,+BAA3B;AACA,OAAO,IAAP,MAA+B,qBAA/B,C;AAcA,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI;;;;;;;;;;gBAUjB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,IAAI;;;;AAIvD,CAdD;AAgBA,eAAc,SAAU,UAAV,CAAqB,EAAE,OAAF,EAArB,EAAiD;AAC7D,SACE,cAAC,aAAD,IAAe,SAAS,EAAC,SAAzB;AACG,uBAAA,OAAO,MAAP,CAAA,OAAO,EAAK,CAAC,MAAD,EAAS,KAAT,KAAkB;AAC7B,QAAI,MAAM,CAAC,OAAX,EAAoB;AAClB,aACE,cAAC,cAAD,IACE,KAAK,EAAE,MAAM,CAAC,KADhB,EAEE,OAAO,EAAE,MAAM,CAAC,OAFlB,EAGE,SAAS,EAAE,MAAM,CAAC,SAAP,IAAoB,EAHjC,EAIE,GAAG,EAAE,KAJP;AAME,8BACE,IAAI,EAAC,QADP,EAEE,QAAQ,EAAE,CAFZ,EAGE,SAAS,EAAC,eAHZ,EAIE,aAAW,MAAM,CAAC,KAJpB,EAKE,OAAO,EAAE,MAAM,CAAC,OALlB;AAOE,oBAAC,IAAD,IAAM,IAAI,EAAE,MAAM,CAAC,IAAnB,GAPF,CANF,CADF;;;AAkBD;AAED,WACE,wBACE,IAAI,EAAC,QADP,EAEE,QAAQ,EAAE,CAFZ,EAGE,SAAS,EAAC,eAHZ,EAIE,OAAO,EAAE,MAAM,CAAC,OAJlB,EAKE,aAAW,MAAM,CAAC,KALpB,EAME,GAAG,EAAE,KANP;AAQE,kBAAC,IAAD,IAAM,IAAI,EAAE,MAAM,CAAC,IAAnB,GARF,CADF;;AAYD,GAlCO,CADV,CADF;;AAuCD,C,iLAxDK,a,4GAgBkB,U","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { styled } from '@superset-ui/core';\nimport TooltipWrapper from 'src/components/TooltipWrapper';\nimport Icon, { IconName } from 'src/components/Icon';\n\nexport type ActionProps = {\n  label: string;\n  tooltip?: string | React.ReactElement;\n  placement?: string;\n  icon: IconName;\n  onClick: () => void;\n};\n\ninterface ActionsBarProps {\n  actions: Array<ActionProps>;\n}\n\nconst StyledActions = styled.span`\n  white-space: nowrap;\n  min-width: 100px;\n\n  svg,\n  i {\n    margin-right: 8px;\n\n    &:hover {\n      path {\n        fill: ${({ theme }) => theme.colors.primary.base};\n      }\n    }\n  }\n`;\n\nexport default function ActionsBar({ actions }: ActionsBarProps) {\n  return (\n    <StyledActions className=\"actions\">\n      {actions.map((action, index) => {\n        if (action.tooltip) {\n          return (\n            <TooltipWrapper\n              label={action.label}\n              tooltip={action.tooltip}\n              placement={action.placement || ''}\n              key={index}\n            >\n              <span\n                role=\"button\"\n                tabIndex={0}\n                className=\"action-button\"\n                data-test={action.label}\n                onClick={action.onClick}\n              >\n                <Icon name={action.icon} />\n              </span>\n            </TooltipWrapper>\n          );\n        }\n\n        return (\n          <span\n            role=\"button\"\n            tabIndex={0}\n            className=\"action-button\"\n            onClick={action.onClick}\n            data-test={action.label}\n            key={index}\n          >\n            <Icon name={action.icon} />\n          </span>\n        );\n      })}\n    </StyledActions>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}