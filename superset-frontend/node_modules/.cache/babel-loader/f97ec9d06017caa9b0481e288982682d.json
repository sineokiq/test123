{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Date$now from \"@babel/runtime-corejs3/core-js-stable/date/now\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { Alert } from 'react-bootstrap';\nimport Tabs from 'src/common/components/Tabs';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { t, styled } from '@superset-ui/core';\n\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nimport Label from 'src/components/Label';\nimport * as Actions from '../actions/sqlLab';\nimport QueryHistory from './QueryHistory';\nimport ResultSet from './ResultSet';\nimport {\nSTATUS_OPTIONS,\nSTATE_BSSTYLE_MAP,\nLOCALSTORAGE_MAX_QUERY_AGE_MS } from\n'../constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst TAB_HEIGHT = 64;\n\n/*\n    editorQueries are queries executed by users passed from SqlEditor component\n    dataPrebiewQueries are all queries executed for preview of table data (from SqlEditorLeft)\n*/\nconst propTypes = {\n  editorQueries: PropTypes.array.isRequired,\n  latestQueryId: PropTypes.string,\n  dataPreviewQueries: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired,\n  activeSouthPaneTab: PropTypes.string,\n  height: PropTypes.number,\n  databases: PropTypes.object.isRequired,\n  offline: PropTypes.bool,\n  displayLimit: PropTypes.number.isRequired };\n\n\nconst defaultProps = {\n  activeSouthPaneTab: 'Results',\n  offline: false };\n\n\nconst StyledPane = styled.div`\n  width: 100%;\n\n  .ant-tabs .ant-tabs-content-holder {\n    overflow: visible;\n  }\n\n  .SouthPaneTabs {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n  .tab-content {\n    .alert {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    button.fetch {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n`;\n\nexport class SouthPane extends React.PureComponent {\n  constructor(props) {var _context;\n    super(props);\n    this.southPaneRef = /*#__PURE__*/React.createRef();\n    this.switchTab = _bindInstanceProperty(_context = this.switchTab).call(_context, this);\n  }\n\n  switchTab(id) {\n    this.props.actions.setActiveSouthPaneTab(id);\n  }\n\n  render() {var _context3;\n    if (this.props.offline) {\n      return (\n        ___EmotionJSX(Label, {\n          className: \"m-r-3\",\n          bsStyle: STATE_BSSTYLE_MAP[STATUS_OPTIONS.offline] },\n\n        STATUS_OPTIONS.offline));\n\n\n    }\n    const innerTabContentHeight = this.props.height - TAB_HEIGHT;\n    let latestQuery;\n    const { props } = this;\n    if (props.editorQueries.length > 0) {var _context2;\n      // get the latest query\n      latestQuery = _findInstanceProperty(_context2 = props.editorQueries).call(_context2,\n      q => q.id === this.props.latestQueryId);\n\n    }\n    let results;\n    if (latestQuery) {\n      if (\n      isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n      latestQuery.state === 'success' &&\n      !latestQuery.resultsKey &&\n      !latestQuery.results)\n      {\n        results =\n        ___EmotionJSX(Alert, { bsStyle: \"warning\" },\n        t('No stored results found, you need to re-run your query'));\n\n\n      } else if (\n      _Date$now() - latestQuery.startDttm <=\n      LOCALSTORAGE_MAX_QUERY_AGE_MS)\n      {\n        results =\n        ___EmotionJSX(ResultSet, {\n          showControls: true,\n          search: true,\n          query: latestQuery,\n          actions: props.actions,\n          height: innerTabContentHeight,\n          database: this.props.databases[latestQuery.dbId],\n          displayLimit: this.props.displayLimit });\n\n\n      }\n    } else {\n      results =\n      ___EmotionJSX(Alert, { bsStyle: \"info\" }, t('Run a query to display results here'));\n\n    }\n    const dataPreviewTabs = _mapInstanceProperty(_context3 = props.dataPreviewQueries).call(_context3, (query) =>\n    ___EmotionJSX(Tabs.TabPane, {\n      tab: t('Preview: `%s`', decodeURIComponent(query.tableName)),\n      key: query.id },\n\n    ___EmotionJSX(ResultSet, {\n      query: query,\n      visualize: false,\n      csv: false,\n      actions: props.actions,\n      cache: true,\n      height: innerTabContentHeight,\n      displayLimit: this.props.displayLimit })));\n\n\n\n\n    return (\n      ___EmotionJSX(StyledPane, { className: \"SouthPane\", ref: this.southPaneRef },\n      ___EmotionJSX(Tabs, {\n        activeKey: this.props.activeSouthPaneTab,\n        className: \"SouthPaneTabs\",\n        onChange: this.switchTab,\n        id: shortid.generate(),\n        fullWidth: false },\n\n      ___EmotionJSX(Tabs.TabPane, { tab: t('Results'), key: \"Results\" },\n      results),\n\n      ___EmotionJSX(Tabs.TabPane, { tab: t('Query history'), key: \"History\" },\n      ___EmotionJSX(QueryHistory, {\n        queries: props.editorQueries,\n        actions: props.actions,\n        displayLimit: props.displayLimit })),\n\n\n      dataPreviewTabs)));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nfunction mapStateToProps({ sqlLab }) {\n  return {\n    activeSouthPaneTab: sqlLab.activeSouthPaneTab,\n    databases: sqlLab.databases,\n    offline: sqlLab.offline };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch) };\n\n}\n\nSouthPane.propTypes = propTypes;\nSouthPane.defaultProps = defaultProps;const _default =\n\nconnect(mapStateToProps, mapDispatchToProps)(SouthPane);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(TAB_HEIGHT, \"TAB_HEIGHT\", \"/app/superset-frontend/src/SqlLab/components/SouthPane.jsx\");reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/SqlLab/components/SouthPane.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/SqlLab/components/SouthPane.jsx\");reactHotLoader.register(StyledPane, \"StyledPane\", \"/app/superset-frontend/src/SqlLab/components/SouthPane.jsx\");reactHotLoader.register(SouthPane, \"SouthPane\", \"/app/superset-frontend/src/SqlLab/components/SouthPane.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/app/superset-frontend/src/SqlLab/components/SouthPane.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/app/superset-frontend/src/SqlLab/components/SouthPane.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/SouthPane.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/SouthPane.jsx"],"names":["React","PropTypes","shortid","Alert","Tabs","connect","bindActionCreators","t","styled","isFeatureEnabled","FeatureFlag","Label","Actions","QueryHistory","ResultSet","STATUS_OPTIONS","STATE_BSSTYLE_MAP","LOCALSTORAGE_MAX_QUERY_AGE_MS","TAB_HEIGHT","propTypes","editorQueries","array","isRequired","latestQueryId","string","dataPreviewQueries","actions","object","activeSouthPaneTab","height","number","databases","offline","bool","displayLimit","defaultProps","StyledPane","div","theme","gridUnit","SouthPane","PureComponent","constructor","props","southPaneRef","createRef","switchTab","id","setActiveSouthPaneTab","render","innerTabContentHeight","latestQuery","length","q","results","SQLLAB_BACKEND_PERSISTENCE","state","resultsKey","startDttm","dbId","dataPreviewTabs","query","decodeURIComponent","tableName","generate","mapStateToProps","sqlLab","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { Alert } from 'react-bootstrap';\nimport Tabs from 'src/common/components/Tabs';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { t, styled } from '@superset-ui/core';\n\nimport { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n\nimport Label from 'src/components/Label';\nimport * as Actions from '../actions/sqlLab';\nimport QueryHistory from './QueryHistory';\nimport ResultSet from './ResultSet';\nimport {\n  STATUS_OPTIONS,\n  STATE_BSSTYLE_MAP,\n  LOCALSTORAGE_MAX_QUERY_AGE_MS,\n} from '../constants';\n\nconst TAB_HEIGHT = 64;\n\n/*\n    editorQueries are queries executed by users passed from SqlEditor component\n    dataPrebiewQueries are all queries executed for preview of table data (from SqlEditorLeft)\n*/\nconst propTypes = {\n  editorQueries: PropTypes.array.isRequired,\n  latestQueryId: PropTypes.string,\n  dataPreviewQueries: PropTypes.array.isRequired,\n  actions: PropTypes.object.isRequired,\n  activeSouthPaneTab: PropTypes.string,\n  height: PropTypes.number,\n  databases: PropTypes.object.isRequired,\n  offline: PropTypes.bool,\n  displayLimit: PropTypes.number.isRequired,\n};\n\nconst defaultProps = {\n  activeSouthPaneTab: 'Results',\n  offline: false,\n};\n\nconst StyledPane = styled.div`\n  width: 100%;\n\n  .ant-tabs .ant-tabs-content-holder {\n    overflow: visible;\n  }\n\n  .SouthPaneTabs {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n  }\n  .tab-content {\n    .alert {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n\n    button.fetch {\n      margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n`;\n\nexport class SouthPane extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.southPaneRef = React.createRef();\n    this.switchTab = this.switchTab.bind(this);\n  }\n\n  switchTab(id) {\n    this.props.actions.setActiveSouthPaneTab(id);\n  }\n\n  render() {\n    if (this.props.offline) {\n      return (\n        <Label\n          className=\"m-r-3\"\n          bsStyle={STATE_BSSTYLE_MAP[STATUS_OPTIONS.offline]}\n        >\n          {STATUS_OPTIONS.offline}\n        </Label>\n      );\n    }\n    const innerTabContentHeight = this.props.height - TAB_HEIGHT;\n    let latestQuery;\n    const { props } = this;\n    if (props.editorQueries.length > 0) {\n      // get the latest query\n      latestQuery = props.editorQueries.find(\n        q => q.id === this.props.latestQueryId,\n      );\n    }\n    let results;\n    if (latestQuery) {\n      if (\n        isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n        latestQuery.state === 'success' &&\n        !latestQuery.resultsKey &&\n        !latestQuery.results\n      ) {\n        results = (\n          <Alert bsStyle=\"warning\">\n            {t('No stored results found, you need to re-run your query')}\n          </Alert>\n        );\n      } else if (\n        Date.now() - latestQuery.startDttm <=\n        LOCALSTORAGE_MAX_QUERY_AGE_MS\n      ) {\n        results = (\n          <ResultSet\n            showControls\n            search\n            query={latestQuery}\n            actions={props.actions}\n            height={innerTabContentHeight}\n            database={this.props.databases[latestQuery.dbId]}\n            displayLimit={this.props.displayLimit}\n          />\n        );\n      }\n    } else {\n      results = (\n        <Alert bsStyle=\"info\">{t('Run a query to display results here')}</Alert>\n      );\n    }\n    const dataPreviewTabs = props.dataPreviewQueries.map(query => (\n      <Tabs.TabPane\n        tab={t('Preview: `%s`', decodeURIComponent(query.tableName))}\n        key={query.id}\n      >\n        <ResultSet\n          query={query}\n          visualize={false}\n          csv={false}\n          actions={props.actions}\n          cache\n          height={innerTabContentHeight}\n          displayLimit={this.props.displayLimit}\n        />\n      </Tabs.TabPane>\n    ));\n\n    return (\n      <StyledPane className=\"SouthPane\" ref={this.southPaneRef}>\n        <Tabs\n          activeKey={this.props.activeSouthPaneTab}\n          className=\"SouthPaneTabs\"\n          onChange={this.switchTab}\n          id={shortid.generate()}\n          fullWidth={false}\n        >\n          <Tabs.TabPane tab={t('Results')} key=\"Results\">\n            {results}\n          </Tabs.TabPane>\n          <Tabs.TabPane tab={t('Query history')} key=\"History\">\n            <QueryHistory\n              queries={props.editorQueries}\n              actions={props.actions}\n              displayLimit={props.displayLimit}\n            />\n          </Tabs.TabPane>\n          {dataPreviewTabs}\n        </Tabs>\n      </StyledPane>\n    );\n  }\n}\n\nfunction mapStateToProps({ sqlLab }) {\n  return {\n    activeSouthPaneTab: sqlLab.activeSouthPaneTab,\n    databases: sqlLab.databases,\n    offline: sqlLab.offline,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(Actions, dispatch),\n  };\n}\n\nSouthPane.propTypes = propTypes;\nSouthPane.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SouthPane);\n"]},"metadata":{},"sourceType":"module"}