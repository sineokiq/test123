{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport shortid from 'shortid';\n\nimport getToastsFromPyFlashMessages from '../../messageToasts/utils/getToastsFromPyFlashMessages';\nimport { getChartKey } from '../exploreUtils';\nimport { getControlsState } from '../store';\nimport {\ngetFormDataFromControls,\napplyMapStateToPropsToControl } from\n'../controlUtils';\n\nexport default function getInitialState(bootstrapData) {var _context;\n  const { form_data: rawFormData } = bootstrapData;\n  const { slice } = bootstrapData;\n  const sliceName = slice ? slice.slice_name : null;\n  const bootstrappedState = {\n    ...bootstrapData,\n    sliceName,\n    common: {\n      flash_messages: bootstrapData.common.flash_messages,\n      conf: bootstrapData.common.conf },\n\n    rawFormData,\n    filterColumnOpts: [],\n    isDatasourceMetaLoading: false,\n    isStarred: false };\n\n  const controls = getControlsState(bootstrappedState, rawFormData);\n  bootstrappedState.controls = controls;\n\n  // apply initial mapStateToProps for all controls, must execute AFTER\n  // bootstrappedState has initialized `controls`. Order of execution is not\n  // guaranteed, so controls shouldn't rely on the each other's mapped state.\n  _forEachInstanceProperty(_context = _Object$entries(controls)).call(_context, ([key, controlState]) => {\n    controls[key] = applyMapStateToPropsToControl(\n    controlState,\n    bootstrappedState);\n\n  });\n\n  const sliceFormData = slice ?\n  getFormDataFromControls(getControlsState(bootstrapData, slice.form_data)) :\n  null;\n\n  const chartKey = getChartKey(bootstrappedState);\n\n  return {\n    charts: {\n      [chartKey]: {\n        id: chartKey,\n        chartAlert: null,\n        chartStatus: null,\n        chartUpdateEndTime: null,\n        chartUpdateStartTime: 0,\n        latestQueryFormData: getFormDataFromControls(controls),\n        sliceFormData,\n        queryController: null,\n        queriesResponse: null,\n        triggerQuery: false,\n        lastRendered: 0 } },\n\n\n    saveModal: {\n      dashboards: [],\n      saveModalAlert: null },\n\n    explore: bootstrappedState,\n    impressionId: shortid.generate(),\n    messageToasts: getToastsFromPyFlashMessages(\n    (bootstrapData.common || {}).flash_messages || []) };\n\n\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getInitialState, \"getInitialState\", \"/app/superset-frontend/src/explore/reducers/getInitialState.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/reducers/getInitialState.js"],"names":["shortid","getToastsFromPyFlashMessages","getChartKey","getControlsState","getFormDataFromControls","applyMapStateToPropsToControl","getInitialState","bootstrapData","form_data","rawFormData","slice","sliceName","slice_name","bootstrappedState","common","flash_messages","conf","filterColumnOpts","isDatasourceMetaLoading","isStarred","controls","key","controlState","sliceFormData","chartKey","charts","id","chartAlert","chartStatus","chartUpdateEndTime","chartUpdateStartTime","latestQueryFormData","queryController","queriesResponse","triggerQuery","lastRendered","saveModal","dashboards","saveModalAlert","explore","impressionId","generate","messageToasts"],"mappings":"mhBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,OAAP,MAAoB,SAApB;;AAEA,OAAOC,4BAAP,MAAyC,wDAAzC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA;AACEC,uBADF;AAEEC,6BAFF;AAGO,iBAHP;;AAKA,eAAe,SAASC,eAAT,CAAyBC,aAAzB,EAAwC;AACrD,QAAM,EAAEC,SAAS,EAAEC,WAAb,KAA6BF,aAAnC;AACA,QAAM,EAAEG,KAAF,KAAYH,aAAlB;AACA,QAAMI,SAAS,GAAGD,KAAK,GAAGA,KAAK,CAACE,UAAT,GAAsB,IAA7C;AACA,QAAMC,iBAAiB,GAAG;AACxB,OAAGN,aADqB;AAExBI,IAAAA,SAFwB;AAGxBG,IAAAA,MAAM,EAAE;AACNC,MAAAA,cAAc,EAAER,aAAa,CAACO,MAAd,CAAqBC,cAD/B;AAENC,MAAAA,IAAI,EAAET,aAAa,CAACO,MAAd,CAAqBE,IAFrB,EAHgB;;AAOxBP,IAAAA,WAPwB;AAQxBQ,IAAAA,gBAAgB,EAAE,EARM;AASxBC,IAAAA,uBAAuB,EAAE,KATD;AAUxBC,IAAAA,SAAS,EAAE,KAVa,EAA1B;;AAYA,QAAMC,QAAQ,GAAGjB,gBAAgB,CAACU,iBAAD,EAAoBJ,WAApB,CAAjC;AACAI,EAAAA,iBAAiB,CAACO,QAAlB,GAA6BA,QAA7B;;AAEA;AACA;AACA;AACA,sDAAeA,QAAf,kBAAiC,CAAC,CAACC,GAAD,EAAMC,YAAN,CAAD,KAAyB;AACxDF,IAAAA,QAAQ,CAACC,GAAD,CAAR,GAAgBhB,6BAA6B;AAC3CiB,IAAAA,YAD2C;AAE3CT,IAAAA,iBAF2C,CAA7C;;AAID,GALD;;AAOA,QAAMU,aAAa,GAAGb,KAAK;AACvBN,EAAAA,uBAAuB,CAACD,gBAAgB,CAACI,aAAD,EAAgBG,KAAK,CAACF,SAAtB,CAAjB,CADA;AAEvB,MAFJ;;AAIA,QAAMgB,QAAQ,GAAGtB,WAAW,CAACW,iBAAD,CAA5B;;AAEA,SAAO;AACLY,IAAAA,MAAM,EAAE;AACN,OAACD,QAAD,GAAY;AACVE,QAAAA,EAAE,EAAEF,QADM;AAEVG,QAAAA,UAAU,EAAE,IAFF;AAGVC,QAAAA,WAAW,EAAE,IAHH;AAIVC,QAAAA,kBAAkB,EAAE,IAJV;AAKVC,QAAAA,oBAAoB,EAAE,CALZ;AAMVC,QAAAA,mBAAmB,EAAE3B,uBAAuB,CAACgB,QAAD,CANlC;AAOVG,QAAAA,aAPU;AAQVS,QAAAA,eAAe,EAAE,IARP;AASVC,QAAAA,eAAe,EAAE,IATP;AAUVC,QAAAA,YAAY,EAAE,KAVJ;AAWVC,QAAAA,YAAY,EAAE,CAXJ,EADN,EADH;;;AAgBLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,cAAc,EAAE,IAFP,EAhBN;;AAoBLC,IAAAA,OAAO,EAAE1B,iBApBJ;AAqBL2B,IAAAA,YAAY,EAAExC,OAAO,CAACyC,QAAR,EArBT;AAsBLC,IAAAA,aAAa,EAAEzC,4BAA4B;AACzC,KAACM,aAAa,CAACO,MAAd,IAAwB,EAAzB,EAA6BC,cAA7B,IAA+C,EADN,CAtBtC,EAAP;;;AA0BD,C,iLA7DuBT,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport shortid from 'shortid';\n\nimport getToastsFromPyFlashMessages from '../../messageToasts/utils/getToastsFromPyFlashMessages';\nimport { getChartKey } from '../exploreUtils';\nimport { getControlsState } from '../store';\nimport {\n  getFormDataFromControls,\n  applyMapStateToPropsToControl,\n} from '../controlUtils';\n\nexport default function getInitialState(bootstrapData) {\n  const { form_data: rawFormData } = bootstrapData;\n  const { slice } = bootstrapData;\n  const sliceName = slice ? slice.slice_name : null;\n  const bootstrappedState = {\n    ...bootstrapData,\n    sliceName,\n    common: {\n      flash_messages: bootstrapData.common.flash_messages,\n      conf: bootstrapData.common.conf,\n    },\n    rawFormData,\n    filterColumnOpts: [],\n    isDatasourceMetaLoading: false,\n    isStarred: false,\n  };\n  const controls = getControlsState(bootstrappedState, rawFormData);\n  bootstrappedState.controls = controls;\n\n  // apply initial mapStateToProps for all controls, must execute AFTER\n  // bootstrappedState has initialized `controls`. Order of execution is not\n  // guaranteed, so controls shouldn't rely on the each other's mapped state.\n  Object.entries(controls).forEach(([key, controlState]) => {\n    controls[key] = applyMapStateToPropsToControl(\n      controlState,\n      bootstrappedState,\n    );\n  });\n\n  const sliceFormData = slice\n    ? getFormDataFromControls(getControlsState(bootstrapData, slice.form_data))\n    : null;\n\n  const chartKey = getChartKey(bootstrappedState);\n\n  return {\n    charts: {\n      [chartKey]: {\n        id: chartKey,\n        chartAlert: null,\n        chartStatus: null,\n        chartUpdateEndTime: null,\n        chartUpdateStartTime: 0,\n        latestQueryFormData: getFormDataFromControls(controls),\n        sliceFormData,\n        queryController: null,\n        queriesResponse: null,\n        triggerQuery: false,\n        lastRendered: 0,\n      },\n    },\n    saveModal: {\n      dashboards: [],\n      saveModalAlert: null,\n    },\n    explore: bootstrappedState,\n    impressionId: shortid.generate(),\n    messageToasts: getToastsFromPyFlashMessages(\n      (bootstrapData.common || {}).flash_messages || [],\n    ),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}