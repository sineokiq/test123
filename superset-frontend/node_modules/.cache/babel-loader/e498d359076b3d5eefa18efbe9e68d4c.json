{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel } from 'react-bootstrap';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { styled } from '@superset-ui/core';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  label: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  startExpanded: PropTypes.bool,\n  hasErrors: PropTypes.bool };\n\n\nconst defaultProps = {\n  label: null,\n  description: null,\n  startExpanded: false,\n  hasErrors: false };\n\n\nconst StyledPanelTitle = styled(Panel.Title)`\n  & > div {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport default class ControlPanelSection extends React.Component {\n  constructor(props) {var _context;\n    super(props);\n    this.state = { expanded: this.props.startExpanded };\n    this.toggleExpand = _bindInstanceProperty(_context = this.toggleExpand).call(_context, this);\n  }\n\n  toggleExpand() {\n    this.setState(prevState => ({ expanded: !prevState.expanded }));\n  }\n\n  renderHeader() {var _context2;\n    const { label, description, hasErrors } = this.props;\n    return (\n      label &&\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(\"span\", {\n        \"data-test\": \"clickable-control-panel-section-title\",\n        role: \"button\",\n        tabIndex: 0,\n        onClick: this.toggleExpand },\n\n      label),\n      ' ',\n      description &&\n      ___EmotionJSX(InfoTooltipWithTrigger, { label: label, tooltip: description }),\n\n      hasErrors &&\n      ___EmotionJSX(InfoTooltipWithTrigger, {\n        label: \"validation-errors\",\n        bsStyle: \"danger\",\n        tooltip: \"This section contains validation errors\" })),\n\n\n\n      ___EmotionJSX(\"i\", {\n        role: \"button\",\n        \"aria-label\": \"Toggle expand\",\n        tabIndex: 0,\n        className: `float-right fa-lg text-primary expander fa fa-angle-${\n        this.state.expanded ? 'up' : 'down'\n        }`,\n        onClick: _bindInstanceProperty(_context2 = this.toggleExpand).call(_context2, this) })));\n\n\n\n\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(Panel, {\n        className: \"control-panel-section\",\n        expanded: this.state.expanded,\n        onToggle: this.toggleExpand },\n\n      ___EmotionJSX(Panel.Heading, null,\n      ___EmotionJSX(StyledPanelTitle, null, this.renderHeader())),\n\n      ___EmotionJSX(Panel.Collapse, null,\n      ___EmotionJSX(Panel.Body, null, this.props.children))));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nControlPanelSection.propTypes = propTypes;\nControlPanelSection.defaultProps = defaultProps;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/ControlPanelSection.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/explore/components/ControlPanelSection.jsx\");reactHotLoader.register(StyledPanelTitle, \"StyledPanelTitle\", \"/app/superset-frontend/src/explore/components/ControlPanelSection.jsx\");reactHotLoader.register(ControlPanelSection, \"ControlPanelSection\", \"/app/superset-frontend/src/explore/components/ControlPanelSection.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/ControlPanelSection.jsx"],"names":["React","PropTypes","Panel","InfoTooltipWithTrigger","styled","propTypes","label","string","description","children","node","isRequired","startExpanded","bool","hasErrors","defaultProps","StyledPanelTitle","Title","ControlPanelSection","Component","constructor","props","state","expanded","toggleExpand","setState","prevState","renderHeader","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel } from 'react-bootstrap';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { styled } from '@superset-ui/core';\n\nconst propTypes = {\n  label: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  startExpanded: PropTypes.bool,\n  hasErrors: PropTypes.bool,\n};\n\nconst defaultProps = {\n  label: null,\n  description: null,\n  startExpanded: false,\n  hasErrors: false,\n};\n\nconst StyledPanelTitle = styled(Panel.Title)`\n  & > div {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport default class ControlPanelSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { expanded: this.props.startExpanded };\n    this.toggleExpand = this.toggleExpand.bind(this);\n  }\n\n  toggleExpand() {\n    this.setState(prevState => ({ expanded: !prevState.expanded }));\n  }\n\n  renderHeader() {\n    const { label, description, hasErrors } = this.props;\n    return (\n      label && (\n        <div>\n          <span>\n            <span\n              data-test=\"clickable-control-panel-section-title\"\n              role=\"button\"\n              tabIndex={0}\n              onClick={this.toggleExpand}\n            >\n              {label}\n            </span>{' '}\n            {description && (\n              <InfoTooltipWithTrigger label={label} tooltip={description} />\n            )}\n            {hasErrors && (\n              <InfoTooltipWithTrigger\n                label=\"validation-errors\"\n                bsStyle=\"danger\"\n                tooltip=\"This section contains validation errors\"\n              />\n            )}\n          </span>\n          <i\n            role=\"button\"\n            aria-label=\"Toggle expand\"\n            tabIndex={0}\n            className={`float-right fa-lg text-primary expander fa fa-angle-${\n              this.state.expanded ? 'up' : 'down'\n            }`}\n            onClick={this.toggleExpand.bind(this)}\n          />\n        </div>\n      )\n    );\n  }\n\n  render() {\n    return (\n      <Panel\n        className=\"control-panel-section\"\n        expanded={this.state.expanded}\n        onToggle={this.toggleExpand}\n      >\n        <Panel.Heading>\n          <StyledPanelTitle>{this.renderHeader()}</StyledPanelTitle>\n        </Panel.Heading>\n        <Panel.Collapse>\n          <Panel.Body>{this.props.children}</Panel.Body>\n        </Panel.Collapse>\n      </Panel>\n    );\n  }\n}\n\nControlPanelSection.propTypes = propTypes;\nControlPanelSection.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}