{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _parseInt from \"@babel/runtime-corejs3/core-js-stable/parse-int\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport htmlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/htmlbars';\nimport markdownSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/markdown';\nimport sqlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport jsonSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/json';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { DropdownButton } from 'react-bootstrap';\nimport { styled, t } from '@superset-ui/core';\n\nimport { Menu } from 'src/common/components';\nimport { getClientErrorObject } from '../../utils/getClientErrorObject';\nimport CopyToClipboard from '../../components/CopyToClipboard';\nimport { getChartDataRequest } from '../../chart/chartAction';\nimport downloadAsImage from '../../utils/downloadAsImage';\nimport Loading from '../../components/Loading';\nimport ModalTrigger from '../../components/ModalTrigger';\nimport { sliceUpdated } from '../actions/exploreActions';\nimport { CopyButton } from './DataTableControl';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nSyntaxHighlighter.registerLanguage('markdown', markdownSyntax);\nSyntaxHighlighter.registerLanguage('html', htmlSyntax);\nSyntaxHighlighter.registerLanguage('sql', sqlSyntax);\nSyntaxHighlighter.registerLanguage('json', jsonSyntax);\n\nconst propTypes = {\n  onOpenPropertiesModal: PropTypes.func,\n  onOpenInEditor: PropTypes.func,\n  chartStatus: PropTypes.string,\n  chartHeight: PropTypes.string.isRequired,\n  latestQueryFormData: PropTypes.object.isRequired,\n  slice: PropTypes.object };\n\n\nconst MENU_KEYS = {\n  EDIT_PROPERTIES: 'edit_properties',\n  RUN_IN_SQL_LAB: 'run_in_sql_lab',\n  DOWNLOAD_AS_IMAGE: 'download_as_image' };\n\n\nconst CopyButtonViewQuery = styled(CopyButton)`\n  && {\n    margin: 0 0 ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nexport const DisplayQueryButton = props => {\n  const { datasource } = props.latestQueryFormData;\n\n  const [language, setLanguage] = useState(null);\n  const [query, setQuery] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [sqlSupported] = useState(\n  datasource && datasource.split('__')[1] === 'table');\n\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const beforeOpen = resultType => {\n    setIsLoading(true);\n\n    getChartDataRequest({\n      formData: props.latestQueryFormData,\n      resultFormat: 'json',\n      resultType }).\n\n    then(response => {\n      // Only displaying the first query is currently supported\n      const result = response.result[0];\n      setLanguage(result.language);\n      setQuery(result.query);\n      setIsLoading(false);\n      setError(null);\n    }).\n    catch(response => {\n      getClientErrorObject(response).then(({ error, statusText }) => {\n        setError(error || statusText || t('Sorry, An error occurred'));\n        setIsLoading(false);\n      });\n    });\n  };\n\n  const handleMenuClick = ({ key, domEvent }) => {var _slice$slice_name;\n    const { chartHeight, slice, onOpenInEditor, latestQueryFormData } = props;\n    setMenuVisible(false);\n    switch (key) {\n      case MENU_KEYS.EDIT_PROPERTIES:\n        props.onOpenPropertiesModal();\n        break;\n      case MENU_KEYS.RUN_IN_SQL_LAB:\n        onOpenInEditor(latestQueryFormData);\n        break;\n      case MENU_KEYS.DOWNLOAD_AS_IMAGE:\n        downloadAsImage(\n        '.chart-container',\n        // eslint-disable-next-line camelcase\n        (_slice$slice_name = slice == null ? void 0 : slice.slice_name) != null ? _slice$slice_name : t('New chart'),\n        {\n          height: _parseInt(chartHeight, 10) })(\n\n        domEvent);\n        break;\n      default:\n        break;}\n\n  };\n\n  const renderQueryModalBody = () => {\n    if (isLoading) {\n      return ___EmotionJSX(Loading, null);\n    }\n    if (error) {\n      return ___EmotionJSX(\"pre\", null, error);\n    }\n    if (query) {\n      return (\n        ___EmotionJSX(\"div\", null,\n        ___EmotionJSX(CopyToClipboard, {\n          text: query,\n          shouldShowText: false,\n          copyNode:\n          ___EmotionJSX(CopyButtonViewQuery, { buttonSize: \"xs\" },\n          ___EmotionJSX(\"i\", { className: \"fa fa-clipboard\" })) }),\n\n\n\n        ___EmotionJSX(SyntaxHighlighter, { language: language, style: github },\n        query)));\n\n\n\n    }\n    return null;\n  };\n\n  const { slice } = props;\n  return (\n    ___EmotionJSX(DropdownButton, {\n      open: menuVisible,\n      noCaret: true,\n      \"data-test\": \"query-dropdown\",\n      title:\n      ___EmotionJSX(\"span\", null,\n      ___EmotionJSX(\"i\", { className: \"fa fa-bars\" }), \"\\xA0\"),\n\n\n\n      bsSize: \"sm\",\n      pullRight: true,\n      id: \"query\",\n      onToggle: setMenuVisible },\n\n    ___EmotionJSX(Menu, { onClick: handleMenuClick, selectable: false },\n    slice &&\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.EDIT_PROPERTIES },\n    t('Edit properties')),\n\n\n    ___EmotionJSX(Menu.Item, null,\n    ___EmotionJSX(ModalTrigger, {\n      triggerNode:\n      ___EmotionJSX(\"span\", { \"data-test\": \"view-query-menu-item\" }, t('View query')),\n\n      modalTitle: t('View query'),\n      beforeOpen: () => beforeOpen('query'),\n      modalBody: renderQueryModalBody(),\n      responsive: true })),\n\n\n    sqlSupported &&\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.RUN_IN_SQL_LAB },\n    t('Run in SQL Lab')),\n\n\n    ___EmotionJSX(Menu.Item, { key: MENU_KEYS.DOWNLOAD_AS_IMAGE },\n    t('Download as image')))));\n\n\n\n\n};__signature__(DisplayQueryButton, \"useState{[language, setLanguage](null)}\\nuseState{[query, setQuery](null)}\\nuseState{[isLoading, setIsLoading](false)}\\nuseState{[error, setError](null)}\\nuseState{[sqlSupported](datasource && datasource.split('__')[1] === 'table')}\\nuseState{[menuVisible, setMenuVisible](false)}\");\n\nDisplayQueryButton.propTypes = propTypes;\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ sliceUpdated }, dispatch);\n}const _default =\n\nconnect(null, mapDispatchToProps)(DisplayQueryButton);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/DisplayQueryButton.jsx\");reactHotLoader.register(MENU_KEYS, \"MENU_KEYS\", \"/app/superset-frontend/src/explore/components/DisplayQueryButton.jsx\");reactHotLoader.register(CopyButtonViewQuery, \"CopyButtonViewQuery\", \"/app/superset-frontend/src/explore/components/DisplayQueryButton.jsx\");reactHotLoader.register(DisplayQueryButton, \"DisplayQueryButton\", \"/app/superset-frontend/src/explore/components/DisplayQueryButton.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/app/superset-frontend/src/explore/components/DisplayQueryButton.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/components/DisplayQueryButton.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/DisplayQueryButton.jsx"],"names":["React","useState","connect","bindActionCreators","PropTypes","SyntaxHighlighter","htmlSyntax","markdownSyntax","sqlSyntax","jsonSyntax","github","DropdownButton","styled","t","Menu","getClientErrorObject","CopyToClipboard","getChartDataRequest","downloadAsImage","Loading","ModalTrigger","sliceUpdated","CopyButton","registerLanguage","propTypes","onOpenPropertiesModal","func","onOpenInEditor","chartStatus","string","chartHeight","isRequired","latestQueryFormData","object","slice","MENU_KEYS","EDIT_PROPERTIES","RUN_IN_SQL_LAB","DOWNLOAD_AS_IMAGE","CopyButtonViewQuery","theme","gridUnit","DisplayQueryButton","props","datasource","language","setLanguage","query","setQuery","isLoading","setIsLoading","error","setError","sqlSupported","split","menuVisible","setMenuVisible","beforeOpen","resultType","formData","resultFormat","then","response","result","catch","statusText","handleMenuClick","key","domEvent","slice_name","height","renderQueryModalBody","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport SyntaxHighlighter from 'react-syntax-highlighter/dist/cjs/light';\nimport htmlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/htmlbars';\nimport markdownSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/markdown';\nimport sqlSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/sql';\nimport jsonSyntax from 'react-syntax-highlighter/dist/cjs/languages/hljs/json';\nimport github from 'react-syntax-highlighter/dist/cjs/styles/hljs/github';\nimport { DropdownButton } from 'react-bootstrap';\nimport { styled, t } from '@superset-ui/core';\n\nimport { Menu } from 'src/common/components';\nimport { getClientErrorObject } from '../../utils/getClientErrorObject';\nimport CopyToClipboard from '../../components/CopyToClipboard';\nimport { getChartDataRequest } from '../../chart/chartAction';\nimport downloadAsImage from '../../utils/downloadAsImage';\nimport Loading from '../../components/Loading';\nimport ModalTrigger from '../../components/ModalTrigger';\nimport { sliceUpdated } from '../actions/exploreActions';\nimport { CopyButton } from './DataTableControl';\n\nSyntaxHighlighter.registerLanguage('markdown', markdownSyntax);\nSyntaxHighlighter.registerLanguage('html', htmlSyntax);\nSyntaxHighlighter.registerLanguage('sql', sqlSyntax);\nSyntaxHighlighter.registerLanguage('json', jsonSyntax);\n\nconst propTypes = {\n  onOpenPropertiesModal: PropTypes.func,\n  onOpenInEditor: PropTypes.func,\n  chartStatus: PropTypes.string,\n  chartHeight: PropTypes.string.isRequired,\n  latestQueryFormData: PropTypes.object.isRequired,\n  slice: PropTypes.object,\n};\n\nconst MENU_KEYS = {\n  EDIT_PROPERTIES: 'edit_properties',\n  RUN_IN_SQL_LAB: 'run_in_sql_lab',\n  DOWNLOAD_AS_IMAGE: 'download_as_image',\n};\n\nconst CopyButtonViewQuery = styled(CopyButton)`\n  && {\n    margin: 0 0 ${({ theme }) => theme.gridUnit}px;\n  }\n`;\n\nexport const DisplayQueryButton = props => {\n  const { datasource } = props.latestQueryFormData;\n\n  const [language, setLanguage] = useState(null);\n  const [query, setQuery] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [sqlSupported] = useState(\n    datasource && datasource.split('__')[1] === 'table',\n  );\n  const [menuVisible, setMenuVisible] = useState(false);\n\n  const beforeOpen = resultType => {\n    setIsLoading(true);\n\n    getChartDataRequest({\n      formData: props.latestQueryFormData,\n      resultFormat: 'json',\n      resultType,\n    })\n      .then(response => {\n        // Only displaying the first query is currently supported\n        const result = response.result[0];\n        setLanguage(result.language);\n        setQuery(result.query);\n        setIsLoading(false);\n        setError(null);\n      })\n      .catch(response => {\n        getClientErrorObject(response).then(({ error, statusText }) => {\n          setError(error || statusText || t('Sorry, An error occurred'));\n          setIsLoading(false);\n        });\n      });\n  };\n\n  const handleMenuClick = ({ key, domEvent }) => {\n    const { chartHeight, slice, onOpenInEditor, latestQueryFormData } = props;\n    setMenuVisible(false);\n    switch (key) {\n      case MENU_KEYS.EDIT_PROPERTIES:\n        props.onOpenPropertiesModal();\n        break;\n      case MENU_KEYS.RUN_IN_SQL_LAB:\n        onOpenInEditor(latestQueryFormData);\n        break;\n      case MENU_KEYS.DOWNLOAD_AS_IMAGE:\n        downloadAsImage(\n          '.chart-container',\n          // eslint-disable-next-line camelcase\n          slice?.slice_name ?? t('New chart'),\n          {\n            height: parseInt(chartHeight, 10),\n          },\n        )(domEvent);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const renderQueryModalBody = () => {\n    if (isLoading) {\n      return <Loading />;\n    }\n    if (error) {\n      return <pre>{error}</pre>;\n    }\n    if (query) {\n      return (\n        <div>\n          <CopyToClipboard\n            text={query}\n            shouldShowText={false}\n            copyNode={\n              <CopyButtonViewQuery buttonSize=\"xs\">\n                <i className=\"fa fa-clipboard\" />\n              </CopyButtonViewQuery>\n            }\n          />\n          <SyntaxHighlighter language={language} style={github}>\n            {query}\n          </SyntaxHighlighter>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const { slice } = props;\n  return (\n    <DropdownButton\n      open={menuVisible}\n      noCaret\n      data-test=\"query-dropdown\"\n      title={\n        <span>\n          <i className=\"fa fa-bars\" />\n          &nbsp;\n        </span>\n      }\n      bsSize=\"sm\"\n      pullRight\n      id=\"query\"\n      onToggle={setMenuVisible}\n    >\n      <Menu onClick={handleMenuClick} selectable={false}>\n        {slice && (\n          <Menu.Item key={MENU_KEYS.EDIT_PROPERTIES}>\n            {t('Edit properties')}\n          </Menu.Item>\n        )}\n        <Menu.Item>\n          <ModalTrigger\n            triggerNode={\n              <span data-test=\"view-query-menu-item\">{t('View query')}</span>\n            }\n            modalTitle={t('View query')}\n            beforeOpen={() => beforeOpen('query')}\n            modalBody={renderQueryModalBody()}\n            responsive\n          />\n        </Menu.Item>\n        {sqlSupported && (\n          <Menu.Item key={MENU_KEYS.RUN_IN_SQL_LAB}>\n            {t('Run in SQL Lab')}\n          </Menu.Item>\n        )}\n        <Menu.Item key={MENU_KEYS.DOWNLOAD_AS_IMAGE}>\n          {t('Download as image')}\n        </Menu.Item>\n      </Menu>\n    </DropdownButton>\n  );\n};\n\nDisplayQueryButton.propTypes = propTypes;\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ sliceUpdated }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(DisplayQueryButton);\n"]},"metadata":{},"sourceType":"module"}