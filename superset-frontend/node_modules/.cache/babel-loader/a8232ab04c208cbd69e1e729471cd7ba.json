{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport serializeActiveFilterValues from './serializeActiveFilterValues';\n\nexport default function getDashboardUrl(\npathname,\nfilters = {},\nhash = '',\nstandalone = false)\n{\n  // convert flattened { [id_column]: values } object\n  // to nested filter object\n  const obj = serializeActiveFilterValues(filters);\n  const preselectFilters = encodeURIComponent(_JSON$stringify(obj));\n  const hashSection = hash ? `#${hash}` : '';\n  const standaloneParam = standalone ? '&standalone=true' : '';\n  return `${pathname}?preselect_filters=${preselectFilters}${standaloneParam}${hashSection}`;\n};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(getDashboardUrl, \"getDashboardUrl\", \"/app/superset-frontend/src/dashboard/util/getDashboardUrl.js\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/util/getDashboardUrl.js"],"names":["serializeActiveFilterValues","getDashboardUrl","pathname","filters","hash","standalone","obj","preselectFilters","encodeURIComponent","hashSection","standaloneParam"],"mappings":"2XAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,2BAAP,MAAwC,+BAAxC;;AAEA,eAAe,SAASC,eAAT;AACbC,QADa;AAEbC,OAAO,GAAG,EAFG;AAGbC,IAAI,GAAG,EAHM;AAIbC,UAAU,GAAG,KAJA;AAKb;AACA;AACA;AACA,QAAMC,GAAG,GAAGN,2BAA2B,CAACG,OAAD,CAAvC;AACA,QAAMI,gBAAgB,GAAGC,kBAAkB,CAAC,gBAAeF,GAAf,CAAD,CAA3C;AACA,QAAMG,WAAW,GAAGL,IAAI,GAAI,IAAGA,IAAK,EAAZ,GAAgB,EAAxC;AACA,QAAMM,eAAe,GAAGL,UAAU,GAAG,kBAAH,GAAwB,EAA1D;AACA,SAAQ,GAAEH,QAAS,sBAAqBK,gBAAiB,GAAEG,eAAgB,GAAED,WAAY,EAAzF;AACD,C,iLAbuBR,e","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport serializeActiveFilterValues from './serializeActiveFilterValues';\n\nexport default function getDashboardUrl(\n  pathname,\n  filters = {},\n  hash = '',\n  standalone = false,\n) {\n  // convert flattened { [id_column]: values } object\n  // to nested filter object\n  const obj = serializeActiveFilterValues(filters);\n  const preselectFilters = encodeURIComponent(JSON.stringify(obj));\n  const hashSection = hash ? `#${hash}` : '';\n  const standaloneParam = standalone ? '&standalone=true' : '';\n  return `${pathname}?preselect_filters=${preselectFilters}${standaloneParam}${hashSection}`;\n}\n"]},"metadata":{},"sourceType":"module"}