{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport backgroundStyleOptions from '../../util/backgroundStyleOptions';\nimport PopoverDropdown from './PopoverDropdown';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired };\n\n\nfunction renderButton(option) {\n  return (\n    ___EmotionJSX(\"div\", { className: cx('background-style-option', option.className) },\n    `${option.label} background`));\n\n\n}\n\nfunction renderOption(option) {\n  return (\n    ___EmotionJSX(\"div\", { className: cx('background-style-option', option.className) },\n    option.label));\n\n\n}\n\nexport default class BackgroundStyleDropdown extends React.PureComponent {\n  render() {\n    const { id, value, onChange } = this.props;\n    return (\n      ___EmotionJSX(PopoverDropdown, {\n        id: id,\n        options: backgroundStyleOptions,\n        value: value,\n        onChange: onChange,\n        renderButton: renderButton,\n        renderOption: renderOption }));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nBackgroundStyleDropdown.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/menu/BackgroundStyleDropdown.jsx\");reactHotLoader.register(renderButton, \"renderButton\", \"/app/superset-frontend/src/dashboard/components/menu/BackgroundStyleDropdown.jsx\");reactHotLoader.register(renderOption, \"renderOption\", \"/app/superset-frontend/src/dashboard/components/menu/BackgroundStyleDropdown.jsx\");reactHotLoader.register(BackgroundStyleDropdown, \"BackgroundStyleDropdown\", \"/app/superset-frontend/src/dashboard/components/menu/BackgroundStyleDropdown.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/menu/BackgroundStyleDropdown.jsx"],"names":["React","PropTypes","cx","backgroundStyleOptions","PopoverDropdown","propTypes","id","string","isRequired","value","onChange","func","renderButton","option","className","label","renderOption","BackgroundStyleDropdown","PureComponent","render","props"],"mappings":"wSAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,OAAOC,sBAAP,MAAmC,mCAAnC;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAEL,SAAS,CAACM,MAAV,CAAiBC,UADL;AAEhBC,EAAAA,KAAK,EAAER,SAAS,CAACM,MAAV,CAAiBC,UAFR;AAGhBE,EAAAA,QAAQ,EAAET,SAAS,CAACU,IAAV,CAAeH,UAHT,EAAlB;;;AAMA,SAASI,YAAT,CAAsBC,MAAtB,EAA8B;AAC5B;AACE,2BAAK,SAAS,EAAEX,EAAE,CAAC,yBAAD,EAA4BW,MAAM,CAACC,SAAnC,CAAlB;AACI,OAAED,MAAM,CAACE,KAAM,aADnB,CADF;;;AAKD;;AAED,SAASC,YAAT,CAAsBH,MAAtB,EAA8B;AAC5B;AACE,2BAAK,SAAS,EAAEX,EAAE,CAAC,yBAAD,EAA4BW,MAAM,CAACC,SAAnC,CAAlB;AACGD,IAAAA,MAAM,CAACE,KADV,CADF;;;AAKD;;AAED,eAAe,MAAME,uBAAN,SAAsCjB,KAAK,CAACkB,aAA5C,CAA0D;AACvEC,EAAAA,MAAM,GAAG;AACP,UAAM,EAAEb,EAAF,EAAMG,KAAN,EAAaC,QAAb,KAA0B,KAAKU,KAArC;AACA;AACE,oBAAC,eAAD;AACE,QAAA,EAAE,EAAEd,EADN;AAEE,QAAA,OAAO,EAAEH,sBAFX;AAGE,QAAA,KAAK,EAAEM,KAHT;AAIE,QAAA,QAAQ,EAAEC,QAJZ;AAKE,QAAA,YAAY,EAAEE,YALhB;AAME,QAAA,YAAY,EAAEI,YANhB,GADF;;;AAUD,GAbsE;AAAA;AAAA;AAgBzEC,uBAAuB,CAACZ,SAAxB,GAAoCA,SAApC,C,iLAtCMA,S,2HAMGO,Y,8HAQAI,Y,8HAQYC,uB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport backgroundStyleOptions from '../../util/backgroundStyleOptions';\nimport PopoverDropdown from './PopoverDropdown';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nfunction renderButton(option) {\n  return (\n    <div className={cx('background-style-option', option.className)}>\n      {`${option.label} background`}\n    </div>\n  );\n}\n\nfunction renderOption(option) {\n  return (\n    <div className={cx('background-style-option', option.className)}>\n      {option.label}\n    </div>\n  );\n}\n\nexport default class BackgroundStyleDropdown extends React.PureComponent {\n  render() {\n    const { id, value, onChange } = this.props;\n    return (\n      <PopoverDropdown\n        id={id}\n        options={backgroundStyleOptions}\n        value={value}\n        onChange={onChange}\n        renderButton={renderButton}\n        renderOption={renderOption}\n      />\n    );\n  }\n}\n\nBackgroundStyleDropdown.propTypes = propTypes;\n"]},"metadata":{},"sourceType":"module"}