{"ast":null,"code":"import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { styled } from '@superset-ui/core';\nimport { DropdownButton } from 'react-bootstrap';\nimport { Menu } from 'src/common/components';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(\n  PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    className: PropTypes.string })).\n\n  isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  renderButton: PropTypes.func,\n  renderOption: PropTypes.func };\n\n\nconst defaultProps = {\n  renderButton: option => option.label,\n  renderOption: (option) =>\n  ___EmotionJSX(\"div\", { className: option.className }, option.label) };\n\n\n\nconst MenuItem = styled(Menu.Item)`\n  &.ant-menu-item {\n    height: auto;\n    line-height: 1.4;\n\n    padding-top: ${({ theme }) => theme.gridUnit}px;\n    padding-bottom: ${({ theme }) => theme.gridUnit}px;\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    &:not(:last-child) {\n      margin-bottom: 0;\n    }\n\n    &:hover {\n      background: ${({ theme }) => theme.colors.grayscale.light3};\n    }\n\n    &.active {\n      font-weight: ${({ theme }) => theme.typography.weights.bold};\n      background: ${({ theme }) => theme.colors.grayscale.light2};\n    }\n  }\n\n  &.ant-menu-item-selected {\n    color: unset;\n  }\n`;\n\nclass PopoverDropdown extends React.PureComponent {\n  constructor(props) {var _context;\n    super(props);\n    this.handleSelect = _bindInstanceProperty(_context = this.handleSelect).call(_context, this);\n  }\n\n  handleSelect({ key }) {\n    this.props.onChange(key);\n  }\n\n  render() {\n    const { id, value, options, renderButton, renderOption } = this.props;\n    const selected = _findInstanceProperty(options).call(options, opt => opt.value === value);\n    return (\n      ___EmotionJSX(DropdownButton, {\n        id: id,\n        bsSize: \"small\",\n        title: renderButton(selected),\n        className: \"popover-dropdown\" },\n\n      ___EmotionJSX(Menu, { onClick: this.handleSelect },\n      _mapInstanceProperty(options).call(options, (option) =>\n      ___EmotionJSX(MenuItem, {\n        key: option.value,\n        className: cx('dropdown-item', {\n          active: option.value === value }) },\n\n\n      renderOption(option))))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nPopoverDropdown.propTypes = propTypes;\nPopoverDropdown.defaultProps = defaultProps;const _default =\n\nPopoverDropdown;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/dashboard/components/menu/PopoverDropdown.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/dashboard/components/menu/PopoverDropdown.jsx\");reactHotLoader.register(MenuItem, \"MenuItem\", \"/app/superset-frontend/src/dashboard/components/menu/PopoverDropdown.jsx\");reactHotLoader.register(PopoverDropdown, \"PopoverDropdown\", \"/app/superset-frontend/src/dashboard/components/menu/PopoverDropdown.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/menu/PopoverDropdown.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/menu/PopoverDropdown.jsx"],"names":["React","PropTypes","cx","styled","DropdownButton","Menu","propTypes","id","string","isRequired","options","arrayOf","shape","value","label","className","onChange","func","renderButton","renderOption","defaultProps","option","MenuItem","Item","theme","gridUnit","colors","grayscale","light3","typography","weights","bold","light2","PopoverDropdown","PureComponent","constructor","props","handleSelect","key","render","selected","opt","active"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { styled } from '@superset-ui/core';\nimport { DropdownButton } from 'react-bootstrap';\nimport { Menu } from 'src/common/components';\n\nconst propTypes = {\n  id: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      className: PropTypes.string,\n    }),\n  ).isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  renderButton: PropTypes.func,\n  renderOption: PropTypes.func,\n};\n\nconst defaultProps = {\n  renderButton: option => option.label,\n  renderOption: option => (\n    <div className={option.className}>{option.label}</div>\n  ),\n};\n\nconst MenuItem = styled(Menu.Item)`\n  &.ant-menu-item {\n    height: auto;\n    line-height: 1.4;\n\n    padding-top: ${({ theme }) => theme.gridUnit}px;\n    padding-bottom: ${({ theme }) => theme.gridUnit}px;\n\n    margin-top: 0;\n    margin-bottom: 0;\n\n    &:not(:last-child) {\n      margin-bottom: 0;\n    }\n\n    &:hover {\n      background: ${({ theme }) => theme.colors.grayscale.light3};\n    }\n\n    &.active {\n      font-weight: ${({ theme }) => theme.typography.weights.bold};\n      background: ${({ theme }) => theme.colors.grayscale.light2};\n    }\n  }\n\n  &.ant-menu-item-selected {\n    color: unset;\n  }\n`;\n\nclass PopoverDropdown extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleSelect({ key }) {\n    this.props.onChange(key);\n  }\n\n  render() {\n    const { id, value, options, renderButton, renderOption } = this.props;\n    const selected = options.find(opt => opt.value === value);\n    return (\n      <DropdownButton\n        id={id}\n        bsSize=\"small\"\n        title={renderButton(selected)}\n        className=\"popover-dropdown\"\n      >\n        <Menu onClick={this.handleSelect}>\n          {options.map(option => (\n            <MenuItem\n              key={option.value}\n              className={cx('dropdown-item', {\n                active: option.value === value,\n              })}\n            >\n              {renderOption(option)}\n            </MenuItem>\n          ))}\n        </Menu>\n      </DropdownButton>\n    );\n  }\n}\n\nPopoverDropdown.propTypes = propTypes;\nPopoverDropdown.defaultProps = defaultProps;\n\nexport default PopoverDropdown;\n"]},"metadata":{},"sourceType":"module"}