{"ast":null,"code":"import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/reduce\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setExtraFormData } from 'src/dashboard/actions/nativeFilters';\nimport { getInitialFilterState } from 'src/dashboard/reducers/nativeFilters';\nimport { t } from '@superset-ui/core';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { DASHBOARD_ROOT_TYPE } from 'src/dashboard/util/componentTypes';\nimport { buildTree, mergeExtraFormData } from './utils';\nconst defaultFilterConfiguration = [];\nexport function useFilterConfiguration() {\n  return useSelector(state => {var _state$dashboardInfo, _state$dashboardInfo$;return ((_state$dashboardInfo = state.dashboardInfo) == null ? void 0 : (_state$dashboardInfo$ = _state$dashboardInfo.metadata) == null ? void 0 : _state$dashboardInfo$.filter_configuration) ||\n    defaultFilterConfiguration;});\n}\n/**\n * returns the dashboard's filter configuration,\n * converted into a map of id -> filter\n */__signature__(useFilterConfiguration, \"useSelector{}\", () => [useSelector]);\nexport function useFilterConfigMap() {\n  const filterConfig = useFilterConfiguration();\n  return useMemo(() => _reduceInstanceProperty(filterConfig).call(filterConfig, (acc, filter) => {\n    acc[filter.id] = filter;\n    return acc;\n  }, {}), [filterConfig]);\n}__signature__(useFilterConfigMap, \"useFilterConfiguration{filterConfig}\\nuseMemo{}\", () => [useFilterConfiguration]);\nexport function useFilterState(id) {\n  return useSelector(state => state.nativeFilters.filtersState[id] || getInitialFilterState(id));\n}__signature__(useFilterState, \"useSelector{}\", () => [useSelector]);\nexport function useSetExtraFormData() {\n  const dispatch = useDispatch();\n  return useCallback((id, extraFormData) => dispatch(setExtraFormData(id, extraFormData)), [dispatch]);\n}__signature__(useSetExtraFormData, \"useDispatch{dispatch}\\nuseCallback{}\", () => [useDispatch]);\nexport function useFilterScopeTree() {\n  const layout = useSelector(({ dashboardLayout: { present } }) => present);\n  const charts = useSelector(({ charts }) => charts);\n  const tree = {\n    children: [],\n    key: DASHBOARD_ROOT_ID,\n    type: DASHBOARD_ROOT_TYPE,\n    title: t('All panels') };\n\n  buildTree(layout[DASHBOARD_ROOT_ID], tree, layout, charts);\n  return { treeData: [tree], layout };\n}__signature__(useFilterScopeTree, \"useSelector{layout}\\nuseSelector{charts}\", () => [useSelector, useSelector]);\nexport function useCascadingFilters(id) {\n  return useSelector(state => {var _filter$cascadeParent;\n    const { nativeFilters } = state;\n    const { filters, filtersState } = nativeFilters;\n    const filter = filters[id];\n    const cascadeParentIds = (_filter$cascadeParent = filter == null ? void 0 : filter.cascadeParentIds) != null ? _filter$cascadeParent : [];\n    let cascadedFilters = {};\n    _forEachInstanceProperty(cascadeParentIds).call(cascadeParentIds, parentId => {\n      const parentState = filtersState[parentId] || {};\n      const { extraFormData: parentExtra = {} } = parentState;\n      cascadedFilters = mergeExtraFormData(cascadedFilters, parentExtra);\n    });\n    return cascadedFilters;\n  });\n}__signature__(useCascadingFilters, \"useSelector{}\", () => [useSelector]);;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(defaultFilterConfiguration, \"defaultFilterConfiguration\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useFilterConfiguration, \"useFilterConfiguration\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useFilterConfigMap, \"useFilterConfigMap\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useFilterState, \"useFilterState\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useSetExtraFormData, \"useSetExtraFormData\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useFilterScopeTree, \"useFilterScopeTree\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");reactHotLoader.register(useCascadingFilters, \"useCascadingFilters\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/state.ts\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/state.ts"],"names":[],"mappings":"meAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,WAAT,EAAsB,OAAtB,QAAqC,OAArC;AACA,SAAS,WAAT,EAAsB,WAAtB,QAAyC,aAAzC;AACA,SAAS,gBAAT,QAAiC,qCAAjC;AACA,SAAS,qBAAT,QAAsC,sCAAtC;AACA,SAAwB,CAAxB,QAAiC,mBAAjC;AAEA,SAAS,iBAAT,QAAkC,8BAAlC;AACA,SAAS,mBAAT,QAAoC,mCAApC;AAQA,SAAS,SAAT,EAAoB,kBAApB,QAA8C,SAA9C;AAEA,MAAM,0BAA0B,GAAa,EAA7C;AAEA,OAAM,SAAU,sBAAV,GAAgC;AACpC,SAAO,WAAW,CAChB,KAAK,4DACH,yBAAA,KAAK,CAAC,aAAN,mEAAqB,QAArB,2CAA+B,oBAA/B;AACA,IAAA,0BAFG,EADW,CAAlB;AAKD;AAED;;;AAGG,G,cAXa,sB,0BACP,W;AAWT,OAAM,SAAU,kBAAV,GAA4B;AAChC,QAAM,YAAY,GAAG,sBAAsB,EAA3C;AACA,SAAO,OAAO,CACZ,MACE,wBAAA,YAAY,MAAZ,CAAA,YAAY,EAAQ,CAAC,GAAD,EAA8B,MAA9B,KAAgD;AAClE,IAAA,GAAG,CAAC,MAAM,CAAC,EAAR,CAAH,GAAiB,MAAjB;AACA,WAAO,GAAP;AACD,GAHW,EAGT,EAHS,CAFF,EAMZ,CAAC,YAAD,CANY,CAAd;AAQD,C,cAVe,kB,4DACO,sB;AAWvB,OAAM,SAAU,cAAV,CAAyB,EAAzB,EAAmC;AACvC,SAAO,WAAW,CAChB,KAAK,IAAI,KAAK,CAAC,aAAN,CAAoB,YAApB,CAAiC,EAAjC,KAAwC,qBAAqB,CAAC,EAAD,CADtD,CAAlB;AAGD,C,cAJe,c,0BACP,W;AAKT,OAAM,SAAU,mBAAV,GAA6B;AACjC,QAAM,QAAQ,GAAG,WAAW,EAA5B;AACA,SAAO,WAAW,CAChB,CAAC,EAAD,EAAa,aAAb,KACE,QAAQ,CAAC,gBAAgB,CAAC,EAAD,EAAK,aAAL,CAAjB,CAFM,EAGhB,CAAC,QAAD,CAHgB,CAAlB;AAKD,C,cAPe,mB,iDACG,W;AAQnB,OAAM,SAAU,kBAAV,GAA4B;AAIhC,QAAM,MAAM,GAAG,WAAW,CACxB,CAAC,EAAE,eAAe,EAAE,EAAE,OAAF,EAAnB,EAAD,KAAsC,OADd,CAA1B;AAIA,QAAM,MAAM,GAAG,WAAW,CAAoB,CAAC,EAAE,MAAF,EAAD,KAAgB,MAApC,CAA1B;AAEA,QAAM,IAAI,GAAG;AACX,IAAA,QAAQ,EAAE,EADC;AAEX,IAAA,GAAG,EAAE,iBAFM;AAGX,IAAA,IAAI,EAAE,mBAHK;AAIX,IAAA,KAAK,EAAE,CAAC,CAAC,YAAD,CAJG,EAAb;;AAMA,EAAA,SAAS,CAAC,MAAM,CAAC,iBAAD,CAAP,EAA4B,IAA5B,EAAkC,MAAlC,EAA0C,MAA1C,CAAT;AACA,SAAO,EAAE,QAAQ,EAAE,CAAC,IAAD,CAAZ,EAAoB,MAApB,EAAP;AACD,C,cAlBe,kB,qDAIC,W,EAIA,W;AAYjB,OAAM,SAAU,mBAAV,CAA8B,EAA9B,EAAwC;AAC5C,SAAO,WAAW,CAAqB,KAAK,IAAG;AAC7C,UAAM,EAAE,aAAF,KAA2D,KAAjE;AACA,UAAM,EAAE,OAAF,EAAW,YAAX,KAA4B,aAAlC;AACA,UAAM,MAAM,GAAG,OAAO,CAAC,EAAD,CAAtB;AACA,UAAM,gBAAgB,4BAAG,MAAH,oBAAG,MAAM,CAAE,gBAAX,oCAA+B,EAArD;AACA,QAAI,eAAe,GAAG,EAAtB;AACA,6BAAA,gBAAgB,MAAhB,CAAA,gBAAgB,EAAS,QAAQ,IAAG;AAClC,YAAM,WAAW,GAAG,YAAY,CAAC,QAAD,CAAZ,IAA0B,EAA9C;AACA,YAAM,EAAE,aAAa,EAAE,WAAW,GAAG,EAA/B,KAAsC,WAA5C;AACA,MAAA,eAAe,GAAG,kBAAkB,CAAC,eAAD,EAAkB,WAAlB,CAApC;AACD,KAJe,CAAhB;AAKA,WAAO,eAAP;AACD,GAZiB,CAAlB;AAaD,C,cAde,mB,0BACP,W,oLA9DH,0B,kIAEU,sB,8HAYA,kB,0HAYA,c,sHAMA,mB,2HASA,kB,0HAoBA,mB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setExtraFormData } from 'src/dashboard/actions/nativeFilters';\nimport { getInitialFilterState } from 'src/dashboard/reducers/nativeFilters';\nimport { ExtraFormData, t } from '@superset-ui/core';\nimport { Charts, Layout, RootState } from 'src/dashboard/types';\nimport { DASHBOARD_ROOT_ID } from 'src/dashboard/util/constants';\nimport { DASHBOARD_ROOT_TYPE } from 'src/dashboard/util/componentTypes';\nimport {\n  Filter,\n  FilterConfiguration,\n  FilterState,\n  NativeFiltersState,\n  TreeItem,\n} from './types';\nimport { buildTree, mergeExtraFormData } from './utils';\n\nconst defaultFilterConfiguration: Filter[] = [];\n\nexport function useFilterConfiguration() {\n  return useSelector<any, FilterConfiguration>(\n    state =>\n      state.dashboardInfo?.metadata?.filter_configuration ||\n      defaultFilterConfiguration,\n  );\n}\n\n/**\n * returns the dashboard's filter configuration,\n * converted into a map of id -> filter\n */\nexport function useFilterConfigMap() {\n  const filterConfig = useFilterConfiguration();\n  return useMemo(\n    () =>\n      filterConfig.reduce((acc: Record<string, Filter>, filter: Filter) => {\n        acc[filter.id] = filter;\n        return acc;\n      }, {} as Record<string, Filter>),\n    [filterConfig],\n  );\n}\n\nexport function useFilterState(id: string) {\n  return useSelector<any, FilterState>(\n    state => state.nativeFilters.filtersState[id] || getInitialFilterState(id),\n  );\n}\n\nexport function useSetExtraFormData() {\n  const dispatch = useDispatch();\n  return useCallback(\n    (id: string, extraFormData: ExtraFormData) =>\n      dispatch(setExtraFormData(id, extraFormData)),\n    [dispatch],\n  );\n}\n\nexport function useFilterScopeTree(): {\n  treeData: [TreeItem];\n  layout: Layout;\n} {\n  const layout = useSelector<RootState, Layout>(\n    ({ dashboardLayout: { present } }) => present,\n  );\n\n  const charts = useSelector<RootState, Charts>(({ charts }) => charts);\n\n  const tree = {\n    children: [],\n    key: DASHBOARD_ROOT_ID,\n    type: DASHBOARD_ROOT_TYPE,\n    title: t('All panels'),\n  };\n  buildTree(layout[DASHBOARD_ROOT_ID], tree, layout, charts);\n  return { treeData: [tree], layout };\n}\n\nexport function useCascadingFilters(id: string) {\n  return useSelector<any, ExtraFormData>(state => {\n    const { nativeFilters }: { nativeFilters: NativeFiltersState } = state;\n    const { filters, filtersState } = nativeFilters;\n    const filter = filters[id];\n    const cascadeParentIds = filter?.cascadeParentIds ?? [];\n    let cascadedFilters = {};\n    cascadeParentIds.forEach(parentId => {\n      const parentState = filtersState[parentId] || {};\n      const { extraFormData: parentExtra = {} } = parentState;\n      cascadedFilters = mergeExtraFormData(cascadedFilters, parentExtra);\n    });\n    return cascadedFilters;\n  });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}