{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _Array$isArray from \"@babel/runtime-corejs3/core-js-stable/array/is-array\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Select } from 'src/common/components';\nimport { DEFAULT_FORM_DATA } from './types';\nimport { getSelectExtraFormData } from '../../utils';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst Styles = styled.div`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\nconst { Option } = Select;\nexport default function AntdPluginFilterSelect(props) {var _context;\n  const [values, setValues] = useState([]);\n  const { data, formData, height, width, setExtraFormData } = props;\n  const { defaultValues, enableEmptyFilter, multiSelect, showSearch, inverseSelection } = {\n    ...DEFAULT_FORM_DATA,\n    ...formData };\n\n  useEffect(() => {\n    setValues(defaultValues || []);\n  }, [defaultValues]);\n  let { groupby = [] } = formData;\n  groupby = _Array$isArray(groupby) ? groupby : [groupby];\n  function handleChange(value) {\n    setValues(value || []);\n    const [col] = groupby;\n    const emptyFilter = enableEmptyFilter &&\n    !inverseSelection && (\n    value === undefined || value === null || value.length === 0);\n    setExtraFormData(getSelectExtraFormData(col, value, emptyFilter, inverseSelection));\n  }\n  const placeholderText = (data || []).length === 0 ?\n  'No data' :\n  `${data.length} option${data.length > 1 ? 's' : 0}`;\n  return ___EmotionJSX(Styles, { height: height, width: width },\n  ___EmotionJSX(Select, { allowClear: true, value: values, showSearch: showSearch, style: { width: '100%' }, mode: multiSelect ? 'multiple' : undefined, placeholder: placeholderText\n    // @ts-ignore\n    , onChange: handleChange },\n  _mapInstanceProperty(_context = data || []).call(_context, row => {\n    const option = `${_mapInstanceProperty(groupby).call(groupby, col => row[col])[0]}`;\n    return ___EmotionJSX(Option, { key: option, value: option },\n    option);\n\n  })));\n\n\n}__signature__(AntdPluginFilterSelect, \"useState{[values, setValues]([])}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(Styles, \"Styles\", \"/app/superset-frontend/src/filters/components/Select/AntdSelectFilter.tsx\");reactHotLoader.register(Option, \"Option\", \"/app/superset-frontend/src/filters/components/Select/AntdSelectFilter.tsx\");reactHotLoader.register(AntdPluginFilterSelect, \"AntdPluginFilterSelect\", \"/app/superset-frontend/src/filters/components/Select/AntdSelectFilter.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/filters/components/Select/AntdSelectFilter.tsx"],"names":[],"mappings":"ygBAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,MAAT,QAAuB,mBAAvB;AACA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,QAA3B,QAA2C,OAA3C;AACA,SAAS,MAAT,QAAuB,uBAAvB;AACA,SAAS,iBAAT,QAA+D,SAA/D;AAEA,SAAS,sBAAT,QAAuC,aAAvC,C;AAEA,MAAM,MAAM,GAAG,MAAM,CAAC,GAAgC;YAC1C,CAAC,EAAE,MAAF,EAAD,KAAgB,MAAM;WACvB,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK;AAC9B,CAHD;AAKA,MAAM,EAAE,MAAF,KAAa,MAAnB;AAEA,eAAc,SAAU,sBAAV,CACZ,KADY,EACsB;AAElC,QAAM,CAAC,MAAD,EAAS,SAAT,IAAsB,QAAQ,CAAsB,EAAtB,CAApC;AACA,QAAM,EAAE,IAAF,EAAQ,QAAR,EAAkB,MAAlB,EAA0B,KAA1B,EAAiC,gBAAjC,KAAsD,KAA5D;AACA,QAAM,EACJ,aADI,EAEJ,iBAFI,EAGJ,WAHI,EAIJ,UAJI,EAKJ,gBALI,KAMF;AACF,OAAG,iBADD;AAEF,OAAG,QAFD,EANJ;;AAWA,EAAA,SAAS,CAAC,MAAK;AACb,IAAA,SAAS,CAAC,aAAa,IAAI,EAAlB,CAAT;AACD,GAFQ,EAEN,CAAC,aAAD,CAFM,CAAT;AAIA,MAAI,EAAE,OAAO,GAAG,EAAZ,KAAmB,QAAvB;AACA,EAAA,OAAO,GAAG,eAAc,OAAd,IAAyB,OAAzB,GAAmC,CAAC,OAAD,CAA7C;AAEA,WAAS,YAAT,CAAsB,KAAtB,EAAwD;AACtD,IAAA,SAAS,CAAC,KAAK,IAAI,EAAV,CAAT;AACA,UAAM,CAAC,GAAD,IAAQ,OAAd;AACA,UAAM,WAAW,GACf,iBAAiB;AACjB,KAAC,gBADD;AAEC,IAAA,KAAK,KAAK,SAAV,IAAuB,KAAK,KAAK,IAAjC,IAAyC,KAAK,CAAC,MAAN,KAAiB,CAF3D,CADF;AAIA,IAAA,gBAAgB,CACd,sBAAsB,CAAC,GAAD,EAAM,KAAN,EAAa,WAAb,EAA0B,gBAA1B,CADR,CAAhB;AAGD;AACD,QAAM,eAAe,GACnB,CAAC,IAAI,IAAI,EAAT,EAAa,MAAb,KAAwB,CAAxB;AACI,WADJ;AAEI,KAAG,IAAI,CAAC,MAAM,UAAU,IAAI,CAAC,MAAL,GAAc,CAAd,GAAkB,GAAlB,GAAwB,CAAC,EAHvD;AAIA,SACE,cAAC,MAAD,IAAQ,MAAM,EAAE,MAAhB,EAAwB,KAAK,EAAE,KAA/B;AACE,gBAAC,MAAD,IACE,UAAU,MADZ,EAEE,KAAK,EAAE,MAFT,EAGE,UAAU,EAAE,UAHd,EAIE,KAAK,EAAE,EAAE,KAAK,EAAE,MAAT,EAJT,EAKE,IAAI,EAAE,WAAW,GAAG,UAAH,GAAgB,SALnC,EAME,WAAW,EAAE;AACb;AAPF,MAQE,QAAQ,EAAE,YARZ;AAUG,kCAAC,IAAI,IAAI,EAAT,iBAAiB,GAAG,IAAG;AACtB,UAAM,MAAM,GAAG,GAAG,qBAAA,OAAO,MAAP,CAAA,OAAO,EAAK,GAAG,IAAI,GAAG,CAAC,GAAD,CAAf,CAAP,CAA6B,CAA7B,CAA+B,EAAjD;AACA,WACE,cAAC,MAAD,IAAQ,GAAG,EAAE,MAAb,EAAqB,KAAK,EAAE,MAA5B;AACG,IAAA,MADH,CADF;;AAKD,GAPA,CAVH,CADF,CADF;;;AAuBD,C,cA7DuB,sB,qOAPlB,M,iHAKE,M,iHAEgB,sB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled } from '@superset-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Select } from 'src/common/components';\nimport { DEFAULT_FORM_DATA, AntdPluginFilterSelectProps } from './types';\nimport { AntdPluginFilterStylesProps } from '../types';\nimport { getSelectExtraFormData } from '../../utils';\n\nconst Styles = styled.div<AntdPluginFilterStylesProps>`\n  height: ${({ height }) => height};\n  width: ${({ width }) => width};\n`;\n\nconst { Option } = Select;\n\nexport default function AntdPluginFilterSelect(\n  props: AntdPluginFilterSelectProps,\n) {\n  const [values, setValues] = useState<(string | number)[]>([]);\n  const { data, formData, height, width, setExtraFormData } = props;\n  const {\n    defaultValues,\n    enableEmptyFilter,\n    multiSelect,\n    showSearch,\n    inverseSelection,\n  } = {\n    ...DEFAULT_FORM_DATA,\n    ...formData,\n  };\n\n  useEffect(() => {\n    setValues(defaultValues || []);\n  }, [defaultValues]);\n\n  let { groupby = [] } = formData;\n  groupby = Array.isArray(groupby) ? groupby : [groupby];\n\n  function handleChange(value?: number[] | string[] | null) {\n    setValues(value || []);\n    const [col] = groupby;\n    const emptyFilter =\n      enableEmptyFilter &&\n      !inverseSelection &&\n      (value === undefined || value === null || value.length === 0);\n    setExtraFormData(\n      getSelectExtraFormData(col, value, emptyFilter, inverseSelection),\n    );\n  }\n  const placeholderText =\n    (data || []).length === 0\n      ? 'No data'\n      : `${data.length} option${data.length > 1 ? 's' : 0}`;\n  return (\n    <Styles height={height} width={width}>\n      <Select\n        allowClear\n        value={values}\n        showSearch={showSearch}\n        style={{ width: '100%' }}\n        mode={multiSelect ? 'multiple' : undefined}\n        placeholder={placeholderText}\n        // @ts-ignore\n        onChange={handleChange}\n      >\n        {(data || []).map(row => {\n          const option = `${groupby.map(col => row[col])[0]}`;\n          return (\n            <Option key={option} value={option}>\n              {option}\n            </Option>\n          );\n        })}\n      </Select>\n    </Styles>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}