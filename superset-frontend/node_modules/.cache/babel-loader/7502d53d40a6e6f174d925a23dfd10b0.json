{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _sortInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/sort\";import _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/slice\";import _JSON$stringify from \"@babel/runtime-corejs3/core-js-stable/json/stringify\";import _Object$entries from \"@babel/runtime-corejs3/core-js-stable/object/entries\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonGroup, Collapse, Well } from 'react-bootstrap';\nimport shortid from 'shortid';\nimport { t, styled } from '@superset-ui/core';\n\nimport Fade from 'src/common/components/Fade';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport CopyToClipboard from '../../components/CopyToClipboard';\nimport { IconTooltip } from '../../components/IconTooltip';\nimport ColumnElement from './ColumnElement';\nimport ShowSQL from './ShowSQL';\nimport ModalTrigger from '../../components/ModalTrigger';\nimport Loading from '../../components/Loading';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  table: PropTypes.object,\n  actions: PropTypes.object,\n  timeout: PropTypes.number // used for tests\n};\n\nconst defaultProps = {\n  actions: {},\n  table: null,\n  timeout: 500 };\n\n\nconst StyledSpan = styled.span`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  &: hover {\n    color: ${({ theme }) => theme.colors.primary.dark2};\n  }\n  cursor: pointer;\n`;\n\nclass TableElement extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3, _context4;\n    super(props);\n    this.state = {\n      sortColumns: false,\n      expanded: true,\n      hovered: false };\n\n    this.removeFromStore = _bindInstanceProperty(_context = this.removeFromStore).call(_context, this);\n    this.toggleSortColumns = _bindInstanceProperty(_context2 = this.toggleSortColumns).call(_context2, this);\n    this.removeTable = _bindInstanceProperty(_context3 = this.removeTable).call(_context3, this);\n    this.setHover = _bindInstanceProperty(_context4 = this.setHover).call(_context4, this);\n  }\n\n  setHover(hovered) {\n    this.setState({ hovered });\n  }\n\n  popSelectStar() {\n    const qe = {\n      id: shortid.generate(),\n      title: this.props.table.name,\n      dbId: this.props.table.dbId,\n      autorun: true,\n      sql: this.props.table.selectStar };\n\n    this.props.actions.addQueryEditor(qe);\n  }\n\n  toggleTable(e) {\n    e.preventDefault();\n    if (this.props.table.expanded) {\n      this.props.actions.collapseTable(this.props.table);\n    } else {\n      this.props.actions.expandTable(this.props.table);\n    }\n  }\n\n  removeTable() {\n    this.setState({ expanded: false });\n    this.props.actions.removeDataPreview(this.props.table);\n  }\n\n  toggleSortColumns() {\n    this.setState(prevState => ({ sortColumns: !prevState.sortColumns }));\n  }\n\n  removeFromStore() {\n    this.props.actions.removeTable(this.props.table);\n  }\n\n  renderWell() {\n    const { table } = this.props;\n    let header;\n    if (table.partitions) {var _context5, _table$partitions;\n      let partitionQuery;\n      let partitionClipBoard;\n      if (table.partitions.partitionQuery) {\n        ({ partitionQuery } = table.partitions.partitionQuery);\n        const tt = t('Copy partition query to clipboard');\n        partitionClipBoard =\n        ___EmotionJSX(CopyToClipboard, {\n          text: partitionQuery,\n          shouldShowText: false,\n          tooltipText: tt,\n          copyNode: ___EmotionJSX(\"i\", { className: \"fa fa-clipboard\" }) });\n\n\n      }\n      let latest = _mapInstanceProperty(_context5 = _Object$entries(((_table$partitions = table.partitions) == null ? void 0 : _table$partitions.latest) || [])).call(_context5,\n      ([key, value]) => `${key}=${value}`);\n\n      latest = latest.join('/');\n      header =\n      ___EmotionJSX(Well, { bsSize: \"small\" },\n      ___EmotionJSX(\"div\", null,\n      ___EmotionJSX(\"small\", null,\n      t('latest partition:'), \" \", latest),\n      ' ',\n      partitionClipBoard));\n\n\n\n    }\n    return header;\n  }\n\n  renderControls() {\n    let keyLink;\n    const { table } = this.props;\n    if (table.indexes && table.indexes.length > 0) {var _context6;\n      keyLink =\n      ___EmotionJSX(ModalTrigger, {\n        modalTitle:\n        ___EmotionJSX(\"div\", null,\n        t('Keys for table'), \" \", ___EmotionJSX(\"strong\", null, table.name)),\n\n\n        modalBody: _mapInstanceProperty(_context6 = table.indexes).call(_context6, (ix, i) =>\n        ___EmotionJSX(\"pre\", { key: i }, _JSON$stringify(ix, null, '  '))),\n\n        triggerNode:\n        ___EmotionJSX(IconTooltip, {\n          className: \"fa fa-key pull-left m-l-2\",\n          tooltip: t('View keys & indexes (%s)', table.indexes.length) }) });\n\n\n\n\n    }\n    return (\n      ___EmotionJSX(ButtonGroup, { className: \"ws-el-controls\" },\n      keyLink,\n      ___EmotionJSX(IconTooltip, {\n        className:\n        `fa fa-sort-${!this.state.sortColumns ? 'alpha' : 'numeric'}-asc ` +\n        'pull-left sort-cols m-l-2 pointer',\n\n        onClick: this.toggleSortColumns,\n        tooltip:\n        !this.state.sortColumns ?\n        t('Sort columns alphabetically') :\n        t('Original table column order') }),\n\n\n      table.selectStar &&\n      ___EmotionJSX(CopyToClipboard, {\n        copyNode:\n        ___EmotionJSX(IconTooltip, { \"aria-label\": \"Copy\" },\n        ___EmotionJSX(\"i\", { \"aria-hidden\": true, className: \"fa fa-clipboard pull-left m-l-2\" })),\n\n\n        text: table.selectStar,\n        shouldShowText: false,\n        tooltipText: t('Copy SELECT statement to the clipboard') }),\n\n\n      table.view &&\n      ___EmotionJSX(ShowSQL, {\n        sql: table.view,\n        tooltipText: t('Show CREATE VIEW statement'),\n        title: t('CREATE VIEW statement') }),\n\n\n      ___EmotionJSX(IconTooltip, {\n        className: \"fa fa-times table-remove pull-left m-l-2 pointer\",\n        onClick: this.removeTable,\n        tooltip: t('Remove table preview') })));\n\n\n\n  }\n\n  renderHeader() {\n    const { table } = this.props;\n    return (\n      ___EmotionJSX(\"div\", { className: \"clearfix header-container\" },\n      ___EmotionJSX(Tooltip, {\n        id: \"copy-to-clipboard-tooltip\",\n        placement: \"top\",\n        style: { cursor: 'pointer' },\n        title: table.name,\n        trigger: ['hover'] },\n\n      ___EmotionJSX(StyledSpan, {\n        \"data-test\": \"collapse\",\n        className: \"table-name\",\n        onClick: e => {\n          this.toggleTable(e);\n        } },\n\n      ___EmotionJSX(\"strong\", null, table.name))),\n\n\n\n      ___EmotionJSX(\"div\", { className: \"pull-right header-right-side\" },\n      table.isMetadataLoading || table.isExtraMetadataLoading ?\n      ___EmotionJSX(Loading, { position: \"inline\" }) :\n\n      ___EmotionJSX(Fade, { hovered: this.state.hovered }, this.renderControls()),\n\n      ___EmotionJSX(\"i\", {\n        role: \"button\",\n        \"aria-label\": \"Toggle table\",\n        tabIndex: 0,\n        onClick: e => {\n          this.toggleTable(e);\n        },\n        className:\n        'text-primary pointer m-l-10 ' +\n        'fa fa-lg ' +\n        `fa-angle-${table.expanded ? 'up' : 'down'}` }))));\n\n\n\n\n\n  }\n\n  renderBody() {\n    const { table } = this.props;\n    let cols;\n    if (table.columns) {var _context7;\n      cols = _sliceInstanceProperty(_context7 = table.columns).call(_context7);\n      if (this.state.sortColumns) {\n        _sortInstanceProperty(cols).call(cols, (a, b) => {\n          const colA = a.name.toUpperCase();\n          const colB = b.name.toUpperCase();\n          if (colA < colB) {\n            return -1;\n          }\n          if (colA > colB) {\n            return 1;\n          }\n          return 0;\n        });\n      }\n    }\n    const metadata =\n    ___EmotionJSX(Collapse, { in: table.expanded, timeout: this.props.timeout },\n    ___EmotionJSX(\"div\", null,\n    this.renderWell(),\n    ___EmotionJSX(\"div\", { className: \"table-columns m-t-5\" },\n    cols &&\n    _mapInstanceProperty(cols).call(cols, col => ___EmotionJSX(ColumnElement, { column: col, key: col.name })))));\n\n\n\n\n    return metadata;\n  }\n\n  render() {\n    return (\n      ___EmotionJSX(Collapse, {\n        in: this.state.expanded,\n        timeout: this.props.timeout,\n        onExited: this.removeFromStore },\n\n      ___EmotionJSX(\"div\", {\n        className: \"TableElement table-schema m-b-10\",\n        onMouseEnter: () => this.setHover(true),\n        onMouseLeave: () => this.setHover(false) },\n\n      this.renderHeader(),\n      ___EmotionJSX(\"div\", null, this.renderBody()))));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}TableElement.propTypes = propTypes;\nTableElement.defaultProps = defaultProps;const _default =\n\nTableElement;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/SqlLab/components/TableElement.jsx\");reactHotLoader.register(defaultProps, \"defaultProps\", \"/app/superset-frontend/src/SqlLab/components/TableElement.jsx\");reactHotLoader.register(StyledSpan, \"StyledSpan\", \"/app/superset-frontend/src/SqlLab/components/TableElement.jsx\");reactHotLoader.register(TableElement, \"TableElement\", \"/app/superset-frontend/src/SqlLab/components/TableElement.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/TableElement.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/TableElement.jsx"],"names":["React","PropTypes","ButtonGroup","Collapse","Well","shortid","t","styled","Fade","Tooltip","CopyToClipboard","IconTooltip","ColumnElement","ShowSQL","ModalTrigger","Loading","propTypes","table","object","actions","timeout","number","defaultProps","StyledSpan","span","theme","colors","primary","dark1","dark2","TableElement","PureComponent","constructor","props","state","sortColumns","expanded","hovered","removeFromStore","toggleSortColumns","removeTable","setHover","setState","popSelectStar","qe","id","generate","title","name","dbId","autorun","sql","selectStar","addQueryEditor","toggleTable","e","preventDefault","collapseTable","expandTable","removeDataPreview","prevState","renderWell","header","partitions","partitionQuery","partitionClipBoard","tt","latest","key","value","join","renderControls","keyLink","indexes","length","ix","i","view","renderHeader","cursor","isMetadataLoading","isExtraMetadataLoading","renderBody","cols","columns","a","b","colA","toUpperCase","colB","metadata","col","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonGroup, Collapse, Well } from 'react-bootstrap';\nimport shortid from 'shortid';\nimport { t, styled } from '@superset-ui/core';\n\nimport Fade from 'src/common/components/Fade';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport CopyToClipboard from '../../components/CopyToClipboard';\nimport { IconTooltip } from '../../components/IconTooltip';\nimport ColumnElement from './ColumnElement';\nimport ShowSQL from './ShowSQL';\nimport ModalTrigger from '../../components/ModalTrigger';\nimport Loading from '../../components/Loading';\n\nconst propTypes = {\n  table: PropTypes.object,\n  actions: PropTypes.object,\n  timeout: PropTypes.number, // used for tests\n};\n\nconst defaultProps = {\n  actions: {},\n  table: null,\n  timeout: 500,\n};\n\nconst StyledSpan = styled.span`\n  color: ${({ theme }) => theme.colors.primary.dark1};\n  &: hover {\n    color: ${({ theme }) => theme.colors.primary.dark2};\n  }\n  cursor: pointer;\n`;\n\nclass TableElement extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortColumns: false,\n      expanded: true,\n      hovered: false,\n    };\n    this.removeFromStore = this.removeFromStore.bind(this);\n    this.toggleSortColumns = this.toggleSortColumns.bind(this);\n    this.removeTable = this.removeTable.bind(this);\n    this.setHover = this.setHover.bind(this);\n  }\n\n  setHover(hovered) {\n    this.setState({ hovered });\n  }\n\n  popSelectStar() {\n    const qe = {\n      id: shortid.generate(),\n      title: this.props.table.name,\n      dbId: this.props.table.dbId,\n      autorun: true,\n      sql: this.props.table.selectStar,\n    };\n    this.props.actions.addQueryEditor(qe);\n  }\n\n  toggleTable(e) {\n    e.preventDefault();\n    if (this.props.table.expanded) {\n      this.props.actions.collapseTable(this.props.table);\n    } else {\n      this.props.actions.expandTable(this.props.table);\n    }\n  }\n\n  removeTable() {\n    this.setState({ expanded: false });\n    this.props.actions.removeDataPreview(this.props.table);\n  }\n\n  toggleSortColumns() {\n    this.setState(prevState => ({ sortColumns: !prevState.sortColumns }));\n  }\n\n  removeFromStore() {\n    this.props.actions.removeTable(this.props.table);\n  }\n\n  renderWell() {\n    const { table } = this.props;\n    let header;\n    if (table.partitions) {\n      let partitionQuery;\n      let partitionClipBoard;\n      if (table.partitions.partitionQuery) {\n        ({ partitionQuery } = table.partitions.partitionQuery);\n        const tt = t('Copy partition query to clipboard');\n        partitionClipBoard = (\n          <CopyToClipboard\n            text={partitionQuery}\n            shouldShowText={false}\n            tooltipText={tt}\n            copyNode={<i className=\"fa fa-clipboard\" />}\n          />\n        );\n      }\n      let latest = Object.entries(table.partitions?.latest || []).map(\n        ([key, value]) => `${key}=${value}`,\n      );\n      latest = latest.join('/');\n      header = (\n        <Well bsSize=\"small\">\n          <div>\n            <small>\n              {t('latest partition:')} {latest}\n            </small>{' '}\n            {partitionClipBoard}\n          </div>\n        </Well>\n      );\n    }\n    return header;\n  }\n\n  renderControls() {\n    let keyLink;\n    const { table } = this.props;\n    if (table.indexes && table.indexes.length > 0) {\n      keyLink = (\n        <ModalTrigger\n          modalTitle={\n            <div>\n              {t('Keys for table')} <strong>{table.name}</strong>\n            </div>\n          }\n          modalBody={table.indexes.map((ix, i) => (\n            <pre key={i}>{JSON.stringify(ix, null, '  ')}</pre>\n          ))}\n          triggerNode={\n            <IconTooltip\n              className=\"fa fa-key pull-left m-l-2\"\n              tooltip={t('View keys & indexes (%s)', table.indexes.length)}\n            />\n          }\n        />\n      );\n    }\n    return (\n      <ButtonGroup className=\"ws-el-controls\">\n        {keyLink}\n        <IconTooltip\n          className={\n            `fa fa-sort-${!this.state.sortColumns ? 'alpha' : 'numeric'}-asc ` +\n            'pull-left sort-cols m-l-2 pointer'\n          }\n          onClick={this.toggleSortColumns}\n          tooltip={\n            !this.state.sortColumns\n              ? t('Sort columns alphabetically')\n              : t('Original table column order')\n          }\n        />\n        {table.selectStar && (\n          <CopyToClipboard\n            copyNode={\n              <IconTooltip aria-label=\"Copy\">\n                <i aria-hidden className=\"fa fa-clipboard pull-left m-l-2\" />\n              </IconTooltip>\n            }\n            text={table.selectStar}\n            shouldShowText={false}\n            tooltipText={t('Copy SELECT statement to the clipboard')}\n          />\n        )}\n        {table.view && (\n          <ShowSQL\n            sql={table.view}\n            tooltipText={t('Show CREATE VIEW statement')}\n            title={t('CREATE VIEW statement')}\n          />\n        )}\n        <IconTooltip\n          className=\"fa fa-times table-remove pull-left m-l-2 pointer\"\n          onClick={this.removeTable}\n          tooltip={t('Remove table preview')}\n        />\n      </ButtonGroup>\n    );\n  }\n\n  renderHeader() {\n    const { table } = this.props;\n    return (\n      <div className=\"clearfix header-container\">\n        <Tooltip\n          id=\"copy-to-clipboard-tooltip\"\n          placement=\"top\"\n          style={{ cursor: 'pointer' }}\n          title={table.name}\n          trigger={['hover']}\n        >\n          <StyledSpan\n            data-test=\"collapse\"\n            className=\"table-name\"\n            onClick={e => {\n              this.toggleTable(e);\n            }}\n          >\n            <strong>{table.name}</strong>\n          </StyledSpan>\n        </Tooltip>\n\n        <div className=\"pull-right header-right-side\">\n          {table.isMetadataLoading || table.isExtraMetadataLoading ? (\n            <Loading position=\"inline\" />\n          ) : (\n            <Fade hovered={this.state.hovered}>{this.renderControls()}</Fade>\n          )}\n          <i\n            role=\"button\"\n            aria-label=\"Toggle table\"\n            tabIndex={0}\n            onClick={e => {\n              this.toggleTable(e);\n            }}\n            className={\n              'text-primary pointer m-l-10 ' +\n              'fa fa-lg ' +\n              `fa-angle-${table.expanded ? 'up' : 'down'}`\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderBody() {\n    const { table } = this.props;\n    let cols;\n    if (table.columns) {\n      cols = table.columns.slice();\n      if (this.state.sortColumns) {\n        cols.sort((a, b) => {\n          const colA = a.name.toUpperCase();\n          const colB = b.name.toUpperCase();\n          if (colA < colB) {\n            return -1;\n          }\n          if (colA > colB) {\n            return 1;\n          }\n          return 0;\n        });\n      }\n    }\n    const metadata = (\n      <Collapse in={table.expanded} timeout={this.props.timeout}>\n        <div>\n          {this.renderWell()}\n          <div className=\"table-columns m-t-5\">\n            {cols &&\n              cols.map(col => <ColumnElement column={col} key={col.name} />)}\n          </div>\n        </div>\n      </Collapse>\n    );\n    return metadata;\n  }\n\n  render() {\n    return (\n      <Collapse\n        in={this.state.expanded}\n        timeout={this.props.timeout}\n        onExited={this.removeFromStore}\n      >\n        <div\n          className=\"TableElement table-schema m-b-10\"\n          onMouseEnter={() => this.setHover(true)}\n          onMouseLeave={() => this.setHover(false)}\n        >\n          {this.renderHeader()}\n          <div>{this.renderBody()}</div>\n        </div>\n      </Collapse>\n    );\n  }\n}\nTableElement.propTypes = propTypes;\nTableElement.defaultProps = defaultProps;\n\nexport default TableElement;\n"]},"metadata":{},"sourceType":"module"}