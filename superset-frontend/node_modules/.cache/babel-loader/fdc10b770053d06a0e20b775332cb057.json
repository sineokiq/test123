{"ast":null,"code":"import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/for-each\";import _filterInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/filter\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";import _someInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/some\";import _extends from \"@babel/runtime-corejs3/helpers/extends\";import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Alert } from 'react-bootstrap';\nimport { t, styled, getChartControlPanelRegistry } from '@superset-ui/core';\n\nimport Tabs from 'src/common/components/Tabs';\nimport { PluginContext } from 'src/components/DynamicPlugins';\nimport Loading from 'src/components/Loading';\nimport ControlPanelSection from './ControlPanelSection';\nimport ControlRow from './ControlRow';\nimport Control from './Control';\nimport { sectionsToRender } from '../controlUtils';\nimport { exploreActions } from '../actions/exploreActions';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  alert: PropTypes.string,\n  datasource_type: PropTypes.string.isRequired,\n  exploreState: PropTypes.object.isRequired,\n  controls: PropTypes.object.isRequired,\n  form_data: PropTypes.object.isRequired,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired };\n\n\nconst Styles = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n  overflow-x: visible;\n  overflow-y: auto;\n  .remove-alert {\n    cursor: pointer;\n  }\n  #controlSections {\n    min-height: 100%;\n    overflow: visible;\n  }\n  .nav-tabs {\n    flex: 0 0 1;\n  }\n  .tab-content {\n    overflow: auto;\n    flex: 1 1 100%;\n  }\n  .Select__menu {\n    max-width: 100%;\n  }\n`;\n\nconst ControlPanelsTabs = styled(Tabs)`\n  .ant-tabs-nav-list {\n    width: ${({ fullWidth }) => fullWidth ? '100%' : '50%'};\n  }\n  .ant-tabs-content-holder {\n    overflow: visible;\n  }\n`;\n\nclass ControlPanelsContainer extends React.Component {\n  // trigger updates to the component when async plugins load\n\n\n  constructor(props) {var _context, _context2, _context3;\n    super(props);\n\n    this.removeAlert = _bindInstanceProperty(_context = this.removeAlert).call(_context, this);\n    this.renderControl = _bindInstanceProperty(_context2 = this.renderControl).call(_context2, this);\n    this.renderControlPanelSection = _bindInstanceProperty(_context3 = this.renderControlPanelSection).call(_context3, this);\n  }\n\n  sectionsToRender() {\n    return sectionsToRender(\n    this.props.form_data.viz_type,\n    this.props.datasource_type);\n\n  }\n\n  removeAlert() {\n    this.props.actions.removeControlPanelAlert();\n  }\n\n  renderControl({ name, config }) {\n    const { actions, controls, form_data: formData } = this.props;\n    const { visibility } = config;\n\n    // If the control item is not an object, we have to look up the control data from\n    // the centralized controls file.\n    // When it is an object we read control data straight from `config` instead\n    const controlData = {\n      ...config,\n      ...controls[name],\n      name };\n\n    const {\n      validationErrors,\n      provideFormDataToProps,\n      ...restProps } =\n    controlData;\n\n    // if visibility check says the config is not visible, don't render it\n    if (visibility && !visibility.call(config, this.props, controlData)) {\n      return null;\n    }\n\n    return (\n      ___EmotionJSX(Control, _extends({\n        key: `control-${name}`,\n        name: name,\n        validationErrors: validationErrors,\n        actions: actions,\n        formData: provideFormDataToProps ? formData : null },\n      restProps)));\n\n\n  }\n\n  renderControlPanelSection(section) {var _context4, _context5;\n    const { controls } = this.props;\n\n    const hasErrors = _someInstanceProperty(_context4 = section.controlSetRows).call(_context4, (rows) =>\n    _someInstanceProperty(rows).call(rows,\n    (s) =>\n    controls[s] &&\n    controls[s].validationErrors &&\n    controls[s].validationErrors.length > 0));\n\n\n\n    return (\n      ___EmotionJSX(ControlPanelSection, {\n        key: section.label,\n        label: section.label,\n        startExpanded: section.expanded,\n        hasErrors: hasErrors,\n        description: section.description },\n\n      _mapInstanceProperty(_context5 = section.controlSetRows).call(_context5, (controlSets, i) => {var _context6;\n        const renderedControls = _filterInstanceProperty(_context6 = _mapInstanceProperty(controlSets).call(controlSets,\n        controlItem => {\n          if (!controlItem) {\n            // When the item is invalid\n            return null;\n          }\n          if ( /*#__PURE__*/React.isValidElement(controlItem)) {\n            // When the item is a React element\n            return controlItem;\n          }\n          if (\n          controlItem.name &&\n          controlItem.config &&\n          controlItem.name !== 'datasource')\n          {\n            return this.renderControl(controlItem);\n          }\n          return null;\n        })).call(_context6,\n        x => x !== null);\n        // don't show the row if it is empty\n        if (renderedControls.length === 0) {\n          return null;\n        }\n        return (\n          ___EmotionJSX(ControlRow, {\n            key: `controlsetrow-${i}`,\n            className: \"control-row\",\n            controls: renderedControls }));\n\n\n      })));\n\n\n  }\n\n  render() {var _context7;\n    const controlPanelRegistry = getChartControlPanelRegistry();\n    if (\n    !controlPanelRegistry.has(this.props.form_data.viz_type) &&\n    this.context.loading)\n    {\n      return ___EmotionJSX(Loading, null);\n    }\n\n    const querySectionsToRender = [];\n    const displaySectionsToRender = [];\n    _forEachInstanceProperty(_context7 = this.sectionsToRender()).call(_context7, section => {var _context8;\n      // if at least one control in the section is not `renderTrigger`\n      // or asks to be displayed at the Data tab\n      if (\n      section.tabOverride === 'data' ||\n      _someInstanceProperty(_context8 = section.controlSetRows).call(_context8, (rows) =>\n      _someInstanceProperty(rows).call(rows,\n      (control) =>\n      control &&\n      control.config && (\n      !control.config.renderTrigger ||\n      control.config.tabOverride === 'data'))))\n\n\n      {\n        querySectionsToRender.push(section);\n      } else {\n        displaySectionsToRender.push(section);\n      }\n    });\n    const showCustomizeTab = displaySectionsToRender.length > 0;\n    return (\n      ___EmotionJSX(Styles, null,\n      this.props.alert &&\n      ___EmotionJSX(Alert, { bsStyle: \"warning\" },\n      this.props.alert,\n      ___EmotionJSX(\"i\", {\n        role: \"button\",\n        \"aria-label\": \"Remove alert\",\n        tabIndex: 0,\n        className: \"fa fa-close pull-right\",\n        onClick: this.removeAlert,\n        style: { cursor: 'pointer' } })),\n\n\n\n      ___EmotionJSX(ControlPanelsTabs, {\n        id: \"controlSections\",\n        \"data-test\": \"control-tabs\",\n        fullWidth: showCustomizeTab },\n\n      ___EmotionJSX(Tabs.TabPane, { key: \"query\", tab: t('Data') },\n      _mapInstanceProperty(querySectionsToRender).call(querySectionsToRender, this.renderControlPanelSection)),\n\n      showCustomizeTab &&\n      ___EmotionJSX(Tabs.TabPane, { key: \"display\", tab: t('Customize') },\n      _mapInstanceProperty(displaySectionsToRender).call(displaySectionsToRender, this.renderControlPanelSection)))));\n\n\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}ControlPanelsContainer.contextType = PluginContext;\nControlPanelsContainer.propTypes = propTypes;\n\nfunction mapStateToProps({ explore }) {\n  return {\n    alert: explore.controlPanelAlert,\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    controls: explore.controls,\n    exploreState: explore };\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(exploreActions, dispatch) };\n\n}\n\nexport { ControlPanelsContainer };const _default =\n\nconnect(\nmapStateToProps,\nmapDispatchToProps)(\nControlPanelsContainer);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(Styles, \"Styles\", \"/app/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(ControlPanelsTabs, \"ControlPanelsTabs\", \"/app/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(ControlPanelsContainer, \"ControlPanelsContainer\", \"/app/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(mapStateToProps, \"mapStateToProps\", \"/app/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(mapDispatchToProps, \"mapDispatchToProps\", \"/app/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/components/ControlPanelsContainer.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/ControlPanelsContainer.jsx"],"names":["React","PropTypes","bindActionCreators","connect","Alert","t","styled","getChartControlPanelRegistry","Tabs","PluginContext","Loading","ControlPanelSection","ControlRow","Control","sectionsToRender","exploreActions","propTypes","actions","object","isRequired","alert","string","datasource_type","exploreState","controls","form_data","isDatasourceMetaLoading","bool","Styles","div","ControlPanelsTabs","fullWidth","ControlPanelsContainer","Component","constructor","props","removeAlert","renderControl","renderControlPanelSection","viz_type","removeControlPanelAlert","name","config","formData","visibility","controlData","validationErrors","provideFormDataToProps","restProps","call","section","hasErrors","controlSetRows","rows","s","length","label","expanded","description","controlSets","i","renderedControls","controlItem","isValidElement","x","render","controlPanelRegistry","has","context","loading","querySectionsToRender","displaySectionsToRender","tabOverride","control","renderTrigger","push","showCustomizeTab","cursor","contextType","mapStateToProps","explore","controlPanelAlert","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Alert } from 'react-bootstrap';\nimport { t, styled, getChartControlPanelRegistry } from '@superset-ui/core';\n\nimport Tabs from 'src/common/components/Tabs';\nimport { PluginContext } from 'src/components/DynamicPlugins';\nimport Loading from 'src/components/Loading';\nimport ControlPanelSection from './ControlPanelSection';\nimport ControlRow from './ControlRow';\nimport Control from './Control';\nimport { sectionsToRender } from '../controlUtils';\nimport { exploreActions } from '../actions/exploreActions';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  alert: PropTypes.string,\n  datasource_type: PropTypes.string.isRequired,\n  exploreState: PropTypes.object.isRequired,\n  controls: PropTypes.object.isRequired,\n  form_data: PropTypes.object.isRequired,\n  isDatasourceMetaLoading: PropTypes.bool.isRequired,\n};\n\nconst Styles = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n  overflow-x: visible;\n  overflow-y: auto;\n  .remove-alert {\n    cursor: pointer;\n  }\n  #controlSections {\n    min-height: 100%;\n    overflow: visible;\n  }\n  .nav-tabs {\n    flex: 0 0 1;\n  }\n  .tab-content {\n    overflow: auto;\n    flex: 1 1 100%;\n  }\n  .Select__menu {\n    max-width: 100%;\n  }\n`;\n\nconst ControlPanelsTabs = styled(Tabs)`\n  .ant-tabs-nav-list {\n    width: ${({ fullWidth }) => (fullWidth ? '100%' : '50%')};\n  }\n  .ant-tabs-content-holder {\n    overflow: visible;\n  }\n`;\n\nclass ControlPanelsContainer extends React.Component {\n  // trigger updates to the component when async plugins load\n  static contextType = PluginContext;\n\n  constructor(props) {\n    super(props);\n\n    this.removeAlert = this.removeAlert.bind(this);\n    this.renderControl = this.renderControl.bind(this);\n    this.renderControlPanelSection = this.renderControlPanelSection.bind(this);\n  }\n\n  sectionsToRender() {\n    return sectionsToRender(\n      this.props.form_data.viz_type,\n      this.props.datasource_type,\n    );\n  }\n\n  removeAlert() {\n    this.props.actions.removeControlPanelAlert();\n  }\n\n  renderControl({ name, config }) {\n    const { actions, controls, form_data: formData } = this.props;\n    const { visibility } = config;\n\n    // If the control item is not an object, we have to look up the control data from\n    // the centralized controls file.\n    // When it is an object we read control data straight from `config` instead\n    const controlData = {\n      ...config,\n      ...controls[name],\n      name,\n    };\n    const {\n      validationErrors,\n      provideFormDataToProps,\n      ...restProps\n    } = controlData;\n\n    // if visibility check says the config is not visible, don't render it\n    if (visibility && !visibility.call(config, this.props, controlData)) {\n      return null;\n    }\n\n    return (\n      <Control\n        key={`control-${name}`}\n        name={name}\n        validationErrors={validationErrors}\n        actions={actions}\n        formData={provideFormDataToProps ? formData : null}\n        {...restProps}\n      />\n    );\n  }\n\n  renderControlPanelSection(section) {\n    const { controls } = this.props;\n\n    const hasErrors = section.controlSetRows.some(rows =>\n      rows.some(\n        s =>\n          controls[s] &&\n          controls[s].validationErrors &&\n          controls[s].validationErrors.length > 0,\n      ),\n    );\n\n    return (\n      <ControlPanelSection\n        key={section.label}\n        label={section.label}\n        startExpanded={section.expanded}\n        hasErrors={hasErrors}\n        description={section.description}\n      >\n        {section.controlSetRows.map((controlSets, i) => {\n          const renderedControls = controlSets\n            .map(controlItem => {\n              if (!controlItem) {\n                // When the item is invalid\n                return null;\n              }\n              if (React.isValidElement(controlItem)) {\n                // When the item is a React element\n                return controlItem;\n              }\n              if (\n                controlItem.name &&\n                controlItem.config &&\n                controlItem.name !== 'datasource'\n              ) {\n                return this.renderControl(controlItem);\n              }\n              return null;\n            })\n            .filter(x => x !== null);\n          // don't show the row if it is empty\n          if (renderedControls.length === 0) {\n            return null;\n          }\n          return (\n            <ControlRow\n              key={`controlsetrow-${i}`}\n              className=\"control-row\"\n              controls={renderedControls}\n            />\n          );\n        })}\n      </ControlPanelSection>\n    );\n  }\n\n  render() {\n    const controlPanelRegistry = getChartControlPanelRegistry();\n    if (\n      !controlPanelRegistry.has(this.props.form_data.viz_type) &&\n      this.context.loading\n    ) {\n      return <Loading />;\n    }\n\n    const querySectionsToRender = [];\n    const displaySectionsToRender = [];\n    this.sectionsToRender().forEach(section => {\n      // if at least one control in the section is not `renderTrigger`\n      // or asks to be displayed at the Data tab\n      if (\n        section.tabOverride === 'data' ||\n        section.controlSetRows.some(rows =>\n          rows.some(\n            control =>\n              control &&\n              control.config &&\n              (!control.config.renderTrigger ||\n                control.config.tabOverride === 'data'),\n          ),\n        )\n      ) {\n        querySectionsToRender.push(section);\n      } else {\n        displaySectionsToRender.push(section);\n      }\n    });\n    const showCustomizeTab = displaySectionsToRender.length > 0;\n    return (\n      <Styles>\n        {this.props.alert && (\n          <Alert bsStyle=\"warning\">\n            {this.props.alert}\n            <i\n              role=\"button\"\n              aria-label=\"Remove alert\"\n              tabIndex={0}\n              className=\"fa fa-close pull-right\"\n              onClick={this.removeAlert}\n              style={{ cursor: 'pointer' }}\n            />\n          </Alert>\n        )}\n        <ControlPanelsTabs\n          id=\"controlSections\"\n          data-test=\"control-tabs\"\n          fullWidth={showCustomizeTab}\n        >\n          <Tabs.TabPane key=\"query\" tab={t('Data')}>\n            {querySectionsToRender.map(this.renderControlPanelSection)}\n          </Tabs.TabPane>\n          {showCustomizeTab && (\n            <Tabs.TabPane key=\"display\" tab={t('Customize')}>\n              {displaySectionsToRender.map(this.renderControlPanelSection)}\n            </Tabs.TabPane>\n          )}\n        </ControlPanelsTabs>\n      </Styles>\n    );\n  }\n}\n\nControlPanelsContainer.propTypes = propTypes;\n\nfunction mapStateToProps({ explore }) {\n  return {\n    alert: explore.controlPanelAlert,\n    isDatasourceMetaLoading: explore.isDatasourceMetaLoading,\n    controls: explore.controls,\n    exploreState: explore,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(exploreActions, dispatch),\n  };\n}\n\nexport { ControlPanelsContainer };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ControlPanelsContainer);\n"]},"metadata":{},"sourceType":"module"}