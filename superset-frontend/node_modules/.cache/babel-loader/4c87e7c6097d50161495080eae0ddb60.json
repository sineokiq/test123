{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { t } from '@superset-ui/core';\n\nimport Label from 'src/components/Label';\nimport TooltipWrapper from './TooltipWrapper';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  onClick: PropTypes.func,\n  cachedTimestamp: PropTypes.string,\n  className: PropTypes.string };\n\n\nclass CacheLabel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tooltipContent: '',\n      hovered: false };\n\n  }\n\n  updateTooltipContent() {\n    const cachedText = this.props.cachedTimestamp ?\n    ___EmotionJSX(\"span\", null,\n    t('Loaded data cached'),\n    ___EmotionJSX(\"b\", null, \" \", moment.utc(this.props.cachedTimestamp).fromNow())) :\n\n\n    t('Loaded from cache');\n\n\n    const tooltipContent =\n    ___EmotionJSX(\"span\", null,\n    cachedText, \". \", t('Click to force-refresh'));\n\n\n    this.setState({ tooltipContent });\n  }\n\n  mouseOver() {\n    this.updateTooltipContent();\n    this.setState({ hovered: true });\n  }\n\n  mouseOut() {\n    this.setState({ hovered: false });\n  }\n\n  render() {var _context, _context2;\n    const labelStyle = this.state.hovered ? 'primary' : 'default';\n    return (\n      ___EmotionJSX(TooltipWrapper, { tooltip: this.state.tooltipContent, label: \"cache-desc\" },\n      ___EmotionJSX(Label, {\n        className: `${this.props.className}`,\n        bsStyle: labelStyle,\n        onClick: this.props.onClick,\n        onMouseOver: _bindInstanceProperty(_context = this.mouseOver).call(_context, this),\n        onMouseOut: _bindInstanceProperty(_context2 = this.mouseOut).call(_context2, this) },\n\n      t('cached'), \" \", ___EmotionJSX(\"i\", { className: \"fa fa-refresh\" }))));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}CacheLabel.propTypes = propTypes;const _default =\n\nCacheLabel;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/components/CachedLabel.jsx\");reactHotLoader.register(CacheLabel, \"CacheLabel\", \"/app/superset-frontend/src/components/CachedLabel.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/components/CachedLabel.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/CachedLabel.jsx"],"names":["React","PropTypes","moment","t","Label","TooltipWrapper","propTypes","onClick","func","cachedTimestamp","string","className","CacheLabel","PureComponent","constructor","props","state","tooltipContent","hovered","updateTooltipContent","cachedText","utc","fromNow","setState","mouseOver","mouseOut","render","labelStyle"],"mappings":"gYAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,CAAT,QAAkB,mBAAlB;;AAEA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEN,SAAS,CAACO,IADH;AAEhBC,EAAAA,eAAe,EAAER,SAAS,CAACS,MAFX;AAGhBC,EAAAA,SAAS,EAAEV,SAAS,CAACS,MAHL,EAAlB;;;AAMA,MAAME,UAAN,SAAyBZ,KAAK,CAACa,aAA/B,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,EADL;AAEXC,MAAAA,OAAO,EAAE,KAFE,EAAb;;AAID;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,UAAMC,UAAU,GAAG,KAAKL,KAAL,CAAWN,eAAX;AACjB;AACGN,IAAAA,CAAC,CAAC,oBAAD,CADJ;AAEE,kCAAKD,MAAM,CAACmB,GAAP,CAAW,KAAKN,KAAL,CAAWN,eAAtB,EAAuCa,OAAvC,EAAL,CAFF,CADiB;;;AAMjBnB,IAAAA,CAAC,CAAC,mBAAD,CANH;;;AASA,UAAMc,cAAc;AAClB;AACGG,IAAAA,UADH,QACiBjB,CAAC,CAAC,wBAAD,CADlB,CADF;;;AAKA,SAAKoB,QAAL,CAAc,EAAEN,cAAF,EAAd;AACD;;AAEDO,EAAAA,SAAS,GAAG;AACV,SAAKL,oBAAL;AACA,SAAKI,QAAL,CAAc,EAAEL,OAAO,EAAE,IAAX,EAAd;AACD;;AAEDO,EAAAA,QAAQ,GAAG;AACT,SAAKF,QAAL,CAAc,EAAEL,OAAO,EAAE,KAAX,EAAd;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,KAAKX,KAAL,CAAWE,OAAX,GAAqB,SAArB,GAAiC,SAApD;AACA;AACE,oBAAC,cAAD,IAAgB,OAAO,EAAE,KAAKF,KAAL,CAAWC,cAApC,EAAoD,KAAK,EAAC,YAA1D;AACE,oBAAC,KAAD;AACE,QAAA,SAAS,EAAG,GAAE,KAAKF,KAAL,CAAWJ,SAAU,EADrC;AAEE,QAAA,OAAO,EAAEgB,UAFX;AAGE,QAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWR,OAHtB;AAIE,QAAA,WAAW,EAAE,sCAAKiB,SAAL,iBAAoB,IAApB,CAJf;AAKE,QAAA,UAAU,EAAE,uCAAKC,QAAL,kBAAmB,IAAnB,CALd;;AAOGtB,MAAAA,CAAC,CAAC,QAAD,CAPJ,OAOgB,qBAAG,SAAS,EAAC,eAAb,GAPhB,CADF,CADF;;;;AAaD,GAnD0C;AAAA;AAAA,6BAqD7CS,UAAU,CAACN,SAAX,GAAuBA,SAAvB,C;;AAEeM,U,CAAf,wB,iLA7DMN,S,gGAMAM,U","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { t } from '@superset-ui/core';\n\nimport Label from 'src/components/Label';\nimport TooltipWrapper from './TooltipWrapper';\n\nconst propTypes = {\n  onClick: PropTypes.func,\n  cachedTimestamp: PropTypes.string,\n  className: PropTypes.string,\n};\n\nclass CacheLabel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tooltipContent: '',\n      hovered: false,\n    };\n  }\n\n  updateTooltipContent() {\n    const cachedText = this.props.cachedTimestamp ? (\n      <span>\n        {t('Loaded data cached')}\n        <b> {moment.utc(this.props.cachedTimestamp).fromNow()}</b>\n      </span>\n    ) : (\n      t('Loaded from cache')\n    );\n\n    const tooltipContent = (\n      <span>\n        {cachedText}. {t('Click to force-refresh')}\n      </span>\n    );\n    this.setState({ tooltipContent });\n  }\n\n  mouseOver() {\n    this.updateTooltipContent();\n    this.setState({ hovered: true });\n  }\n\n  mouseOut() {\n    this.setState({ hovered: false });\n  }\n\n  render() {\n    const labelStyle = this.state.hovered ? 'primary' : 'default';\n    return (\n      <TooltipWrapper tooltip={this.state.tooltipContent} label=\"cache-desc\">\n        <Label\n          className={`${this.props.className}`}\n          bsStyle={labelStyle}\n          onClick={this.props.onClick}\n          onMouseOver={this.mouseOver.bind(this)}\n          onMouseOut={this.mouseOut.bind(this)}\n        >\n          {t('cached')} <i className=\"fa fa-refresh\" />\n        </Label>\n      </TooltipWrapper>\n    );\n  }\n}\nCacheLabel.propTypes = propTypes;\n\nexport default CacheLabel;\n"]},"metadata":{},"sourceType":"module"}