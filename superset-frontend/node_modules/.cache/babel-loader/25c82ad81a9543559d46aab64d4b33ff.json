{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport TooltipWrapper from './TooltipWrapper';\nimport Icon from './Icon';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst StyledLink = styled.a`\n  font-size: ${({ theme }) => theme.typography.sizes.xl}px;\n  display: flex;\n  padding: 0 0 0 0.5em;\n`;\nexport default class FaveStar extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.onClick = e => {\n      e.preventDefault();\n      this.props.saveFaveStar(this.props.itemId, this.props.isStarred);\n    };\n  }\n  componentDidMount() {\n    if (this.props.fetchFaveStar) {\n      this.props.fetchFaveStar(this.props.itemId);\n    }\n  }\n  render() {\n    const content = ___EmotionJSX(StyledLink, { href: \"#\", onClick: this.onClick, className: \"fave-unfave-icon\", \"data-test\": \"fave-unfave-icon\" },\n    ___EmotionJSX(Icon, { name: this.props.isStarred ? 'favorite-selected' : 'favorite-unselected' }));\n\n    if (this.props.showTooltip) {\n      return ___EmotionJSX(TooltipWrapper, { label: \"fave-unfave\", tooltip: t('Click to favorite/unfavorite') },\n      content);\n\n    }\n    return content;\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}};(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(StyledLink, \"StyledLink\", \"/app/superset-frontend/src/components/FaveStar.tsx\");reactHotLoader.register(FaveStar, \"FaveStar\", \"/app/superset-frontend/src/components/FaveStar.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/components/FaveStar.tsx"],"names":[],"mappings":"iWAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,CAAT,EAAY,MAAZ,QAA0B,mBAA1B;AACA,OAAO,cAAP,MAA2B,kBAA3B;AACA,OAAO,IAAP,MAAiB,QAAjB,C;AAUA,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC;eACZ,CAAC,EAAE,KAAF,EAAD,KAAe,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,EAAE;;;AAGtD,CAJD;AAMA,eAAc,MAAO,QAAP,SAAwB,KAAK,CAAC,aAA9B,CAA0D;AAAxE,EAAA,WAAA,GAAA;;AAOE,SAAA,OAAA,GAAW,CAAD,IAAwB;AAChC,MAAA,CAAC,CAAC,cAAF;AACA,WAAK,KAAL,CAAW,YAAX,CAAwB,KAAK,KAAL,CAAW,MAAnC,EAA2C,KAAK,KAAL,CAAW,SAAtD;AACD,KAHD;AAkCD;AAxCC,EAAA,iBAAiB,GAAA;AACf,QAAI,KAAK,KAAL,CAAW,aAAf,EAA8B;AAC5B,WAAK,KAAL,CAAW,aAAX,CAAyB,KAAK,KAAL,CAAW,MAApC;AACD;AACF;AAOD,EAAA,MAAM,GAAA;AACJ,UAAM,OAAO,GACX,cAAC,UAAD,IACE,IAAI,EAAC,GADP,EAEE,OAAO,EAAE,KAAK,OAFhB,EAGE,SAAS,EAAC,kBAHZ,EAIE,aAAU,kBAJZ;AAME,kBAAC,IAAD,IACE,IAAI,EACF,KAAK,KAAL,CAAW,SAAX,GAAuB,mBAAvB,GAA6C,qBAFjD,GANF,CADF;;AAeA,QAAI,KAAK,KAAL,CAAW,WAAf,EAA4B;AAC1B,aACE,cAAC,cAAD,IACE,KAAK,EAAC,aADR,EAEE,OAAO,EAAE,CAAC,CAAC,8BAAD,CAFZ;AAIG,MAAA,OAJH,CADF;;AAQD;AAED,WAAO,OAAP;AACD,GAxCqE;AAAA;AAAA,6B,iLANlE,U,8FAMe,Q","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t, styled } from '@superset-ui/core';\nimport TooltipWrapper from './TooltipWrapper';\nimport Icon from './Icon';\n\ninterface FaveStarProps {\n  itemId: number;\n  fetchFaveStar?: (id: number) => void;\n  saveFaveStar(id: number, isStarred: boolean): any;\n  isStarred: boolean;\n  showTooltip?: boolean;\n}\n\nconst StyledLink = styled.a`\n  font-size: ${({ theme }) => theme.typography.sizes.xl}px;\n  display: flex;\n  padding: 0 0 0 0.5em;\n`;\n\nexport default class FaveStar extends React.PureComponent<FaveStarProps> {\n  componentDidMount() {\n    if (this.props.fetchFaveStar) {\n      this.props.fetchFaveStar(this.props.itemId);\n    }\n  }\n\n  onClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    this.props.saveFaveStar(this.props.itemId, this.props.isStarred);\n  };\n\n  render() {\n    const content = (\n      <StyledLink\n        href=\"#\"\n        onClick={this.onClick}\n        className=\"fave-unfave-icon\"\n        data-test=\"fave-unfave-icon\"\n      >\n        <Icon\n          name={\n            this.props.isStarred ? 'favorite-selected' : 'favorite-unselected'\n          }\n        />\n      </StyledLink>\n    );\n\n    if (this.props.showTooltip) {\n      return (\n        <TooltipWrapper\n          label=\"fave-unfave\"\n          tooltip={t('Click to favorite/unfavorite')}\n        >\n          {content}\n        </TooltipWrapper>\n      );\n    }\n\n    return content;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}