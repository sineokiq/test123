{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport Popover from 'src/common/components/Popover';\nimport AdhocFilterEditPopover from './AdhocFilterEditPopover';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nclass AdhocFilterPopoverTrigger extends React.PureComponent {\n  constructor(props) {var _context, _context2, _context3;\n    super(props);\n    this.onPopoverResize = _bindInstanceProperty(_context = this.onPopoverResize).call(_context, this);\n    this.closePopover = _bindInstanceProperty(_context2 = this.closePopover).call(_context2, this);\n    this.togglePopover = _bindInstanceProperty(_context3 = this.togglePopover).call(_context3, this);\n    this.state = {\n      popoverVisible: false };\n\n  }\n  onPopoverResize() {\n    this.forceUpdate();\n  }\n  closePopover() {\n    this.togglePopover(false);\n  }\n  togglePopover(visible) {\n    this.setState({\n      popoverVisible: visible });\n\n  }\n  render() {\n    const { adhocFilter } = this.props;\n    const overlayContent = ___EmotionJSX(AdhocFilterEditPopover, { adhocFilter: adhocFilter, options: this.props.options, datasource: this.props.datasource, partitionColumn: this.props.partitionColumn, onResize: this.onPopoverResize, onClose: this.closePopover, onChange: this.props.onFilterEdit });\n    return ___EmotionJSX(React.Fragment, null,\n    adhocFilter.isExtra && ___EmotionJSX(InfoTooltipWithTrigger, { icon: \"exclamation-triangle\", placement: \"top\", className: \"m-r-5 text-muted\", tooltip: t(`\n                This filter was inherited from the dashboard's context.\n                It won't be saved when saving the chart.\n              `) }),\n    ___EmotionJSX(Popover, { placement: \"right\", trigger: \"click\", content: overlayContent, defaultVisible: this.state.popoverVisible, visible: this.state.popoverVisible, onVisibleChange: this.togglePopover, destroyTooltipOnHide: this.props.createNew },\n    this.props.children));\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}const _default = AdhocFilterPopoverTrigger;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(AdhocFilterPopoverTrigger, \"AdhocFilterPopoverTrigger\", \"/app/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/controls/FilterControl/AdhocFilterPopoverTrigger.tsx"],"names":[],"mappings":"gYAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,CAAT,QAAkB,mBAAlB;AACA,SAAS,sBAAT,QAAuC,6BAAvC;AAEA,OAAO,OAAP,MAAoB,+BAApB;AAGA,OAAO,sBAAP,MAAmC,0BAAnC,C;AAmBA,MAAM,yBAAN,SAAwC,KAAK,CAAC,aAA9C,CAGC;AACC,EAAA,WAAA,CAAY,KAAZ,EAAiD;AAC/C,UAAM,KAAN;AACA,SAAK,eAAL,GAAuB,sCAAK,eAAL,iBAA0B,IAA1B,CAAvB;AACA,SAAK,YAAL,GAAoB,uCAAK,YAAL,kBAAuB,IAAvB,CAApB;AACA,SAAK,aAAL,GAAqB,uCAAK,aAAL,kBAAwB,IAAxB,CAArB;AACA,SAAK,KAAL,GAAa;AACX,MAAA,cAAc,EAAE,KADL,EAAb;;AAGD;AAED,EAAA,eAAe,GAAA;AACb,SAAK,WAAL;AACD;AAED,EAAA,YAAY,GAAA;AACV,SAAK,aAAL,CAAmB,KAAnB;AACD;AAED,EAAA,aAAa,CAAC,OAAD,EAAiB;AAC5B,SAAK,QAAL,CAAc;AACZ,MAAA,cAAc,EAAE,OADJ,EAAd;;AAGD;AAED,EAAA,MAAM,GAAA;AACJ,UAAM,EAAE,WAAF,KAAkB,KAAK,KAA7B;AACA,UAAM,cAAc,GAClB,cAAC,sBAAD,IACE,WAAW,EAAE,WADf,EAEE,OAAO,EAAE,KAAK,KAAL,CAAW,OAFtB,EAGE,UAAU,EAAE,KAAK,KAAL,CAAW,UAHzB,EAIE,eAAe,EAAE,KAAK,KAAL,CAAW,eAJ9B,EAKE,QAAQ,EAAE,KAAK,eALjB,EAME,OAAO,EAAE,KAAK,YANhB,EAOE,QAAQ,EAAE,KAAK,KAAL,CAAW,YAPvB,GADF;AAYA,WACE;AACG,IAAA,WAAW,CAAC,OAAZ,IACC,cAAC,sBAAD,IACE,IAAI,EAAC,sBADP,EAEE,SAAS,EAAC,KAFZ,EAGE,SAAS,EAAC,kBAHZ,EAIE,OAAO,EAAE,CAAC,CAAC;;;AAGR,eAHO,CAJZ,GAFJ;AAYE,kBAAC,OAAD,IACE,SAAS,EAAC,OADZ,EAEE,OAAO,EAAC,OAFV,EAGE,OAAO,EAAE,cAHX,EAIE,cAAc,EAAE,KAAK,KAAL,CAAW,cAJ7B,EAKE,OAAO,EAAE,KAAK,KAAL,CAAW,cALtB,EAME,eAAe,EAAE,KAAK,aANxB,EAOE,oBAAoB,EAAE,KAAK,KAAL,CAAW,SAPnC;AASG,SAAK,KAAL,CAAW,QATd,CAZF,CADF;;;AA0BD,GAjEF;AAAA;AAAA,6B,iBAoEc,yB,CAAf,wB,iLAvEM,yB","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { t } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\n\nimport Popover from 'src/common/components/Popover';\nimport columnType from 'src/explore/propTypes/columnType';\nimport adhocMetricType from 'src/explore/components/controls/MetricControl/adhocMetricType';\nimport AdhocFilterEditPopover from './AdhocFilterEditPopover';\nimport AdhocFilter from './AdhocFilter';\n\ninterface AdhocFilterPopoverTriggerProps {\n  adhocFilter: AdhocFilter;\n  options:\n    | typeof columnType[]\n    | { saved_metric_name: string }[]\n    | typeof adhocMetricType[];\n  datasource: Record<string, any>;\n  onFilterEdit: () => void;\n  partitionColumn?: string;\n  createNew?: boolean;\n}\n\ninterface AdhocFilterPopoverTriggerState {\n  popoverVisible: boolean;\n}\n\nclass AdhocFilterPopoverTrigger extends React.PureComponent<\n  AdhocFilterPopoverTriggerProps,\n  AdhocFilterPopoverTriggerState\n> {\n  constructor(props: AdhocFilterPopoverTriggerProps) {\n    super(props);\n    this.onPopoverResize = this.onPopoverResize.bind(this);\n    this.closePopover = this.closePopover.bind(this);\n    this.togglePopover = this.togglePopover.bind(this);\n    this.state = {\n      popoverVisible: false,\n    };\n  }\n\n  onPopoverResize() {\n    this.forceUpdate();\n  }\n\n  closePopover() {\n    this.togglePopover(false);\n  }\n\n  togglePopover(visible: boolean) {\n    this.setState({\n      popoverVisible: visible,\n    });\n  }\n\n  render() {\n    const { adhocFilter } = this.props;\n    const overlayContent = (\n      <AdhocFilterEditPopover\n        adhocFilter={adhocFilter}\n        options={this.props.options}\n        datasource={this.props.datasource}\n        partitionColumn={this.props.partitionColumn}\n        onResize={this.onPopoverResize}\n        onClose={this.closePopover}\n        onChange={this.props.onFilterEdit}\n      />\n    );\n\n    return (\n      <>\n        {adhocFilter.isExtra && (\n          <InfoTooltipWithTrigger\n            icon=\"exclamation-triangle\"\n            placement=\"top\"\n            className=\"m-r-5 text-muted\"\n            tooltip={t(`\n                This filter was inherited from the dashboard's context.\n                It won't be saved when saving the chart.\n              `)}\n          />\n        )}\n        <Popover\n          placement=\"right\"\n          trigger=\"click\"\n          content={overlayContent}\n          defaultVisible={this.state.popoverVisible}\n          visible={this.state.popoverVisible}\n          onVisibleChange={this.togglePopover}\n          destroyTooltipOnHide={this.props.createNew}\n        >\n          {this.props.children}\n        </Popover>\n      </>\n    );\n  }\n}\n\nexport default AdhocFilterPopoverTrigger;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}