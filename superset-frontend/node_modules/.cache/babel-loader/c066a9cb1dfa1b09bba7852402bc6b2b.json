{"ast":null,"code":"(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport { t, styled, supersetTheme } from '@superset-ui/core';\nimport cx from 'classnames';\n\nimport Button from 'src/components/Button';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport Icon from 'src/components/Icon';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { storeQuery } from 'src/utils/common';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { FeatureFlag, isFeatureEnabled } from '../../featureFlags';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  queryEditor: PropTypes.shape({\n    dbId: PropTypes.number,\n    title: PropTypes.string,\n    schema: PropTypes.string,\n    autorun: PropTypes.bool,\n    sql: PropTypes.string,\n    remoteId: PropTypes.number }).\n  isRequired,\n  addDangerToast: PropTypes.func.isRequired };\n\n\nconst Styles = styled.div`\n  .btn-disabled {\n    &,\n    &:hover {\n      cursor: default;\n      background-color: ${supersetTheme.colors.grayscale.light2};\n      color: ${supersetTheme.colors.grayscale.base};\n    }\n  }\n  svg {\n    vertical-align: -${supersetTheme.gridUnit * 1.25}px;\n  }\n`;\n\nclass ShareSqlLabQuery extends React.Component {\n  getCopyUrl(callback) {\n    if (isFeatureEnabled(FeatureFlag.SHARE_QUERIES_VIA_KV_STORE)) {\n      return this.getCopyUrlForKvStore(callback);\n    }\n    return this.getCopyUrlForSavedQuery(callback);\n  }\n\n  getCopyUrlForKvStore(callback) {\n    const { dbId, title, schema, autorun, sql } = this.props.queryEditor;\n    const sharedQuery = { dbId, title, schema, autorun, sql };\n\n    return storeQuery(sharedQuery).\n    then(shortUrl => {\n      callback(shortUrl);\n    }).\n    catch(response => {\n      getClientErrorObject(response).then(() => {\n        this.props.addDangerToast(t('There was an error with your request'));\n      });\n    });\n  }\n\n  getCopyUrlForSavedQuery(callback) {\n    let savedQueryToastContent;\n\n    if (this.props.queryEditor.remoteId) {\n      savedQueryToastContent = `${\n      window.location.origin + window.location.pathname\n      }?savedQueryId=${this.props.queryEditor.remoteId}`;\n      callback(savedQueryToastContent);\n    } else {\n      savedQueryToastContent = t('Please save the query to enable sharing');\n      callback(savedQueryToastContent);\n    }\n  }\n\n  buildButton() {\n    const canShare =\n    this.props.queryEditor.remoteId ||\n    isFeatureEnabled(FeatureFlag.SHARE_QUERIES_VIA_KV_STORE);\n    return (\n      ___EmotionJSX(Styles, null,\n      ___EmotionJSX(Button, { buttonSize: \"small\", className: cx(!canShare && 'btn-disabled') },\n      ___EmotionJSX(Icon, {\n        name: \"link\",\n        color:\n        canShare ?\n        supersetTheme.colors.primary.base :\n        supersetTheme.colors.grayscale.base,\n\n        width: 20,\n        height: 20 }),\n      ' ',\n      t('Copy link'))));\n\n\n\n  }\n\n  render() {\n    const canShare =\n    this.props.queryEditor.remoteId ||\n    isFeatureEnabled(FeatureFlag.SHARE_QUERIES_VIA_KV_STORE);\n    return (\n      ___EmotionJSX(Tooltip, {\n        id: \"copy_link\",\n        placement: \"top\",\n        title:\n        canShare ?\n        t('Copy query link to your clipboard') :\n        t('Save the query to copy the link') },\n\n\n      canShare ?\n      ___EmotionJSX(CopyToClipboard, {\n        getText: callback => this.getCopyUrl(callback),\n        wrapped: false,\n        copyNode: this.buildButton() }) :\n\n\n      this.buildButton()));\n\n\n\n  } // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {// @ts-ignore\n    this[key] = eval(code);}}\nShareSqlLabQuery.propTypes = propTypes;const _default =\n\nwithToasts(ShareSqlLabQuery);export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/SqlLab/components/ShareSqlLabQuery.jsx\");reactHotLoader.register(Styles, \"Styles\", \"/app/superset-frontend/src/SqlLab/components/ShareSqlLabQuery.jsx\");reactHotLoader.register(ShareSqlLabQuery, \"ShareSqlLabQuery\", \"/app/superset-frontend/src/SqlLab/components/ShareSqlLabQuery.jsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/SqlLab/components/ShareSqlLabQuery.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/SqlLab/components/ShareSqlLabQuery.jsx"],"names":["React","PropTypes","Tooltip","t","styled","supersetTheme","cx","Button","withToasts","Icon","CopyToClipboard","storeQuery","getClientErrorObject","FeatureFlag","isFeatureEnabled","propTypes","queryEditor","shape","dbId","number","title","string","schema","autorun","bool","sql","remoteId","isRequired","addDangerToast","func","Styles","div","colors","grayscale","light2","base","gridUnit","ShareSqlLabQuery","Component","getCopyUrl","callback","SHARE_QUERIES_VIA_KV_STORE","getCopyUrlForKvStore","getCopyUrlForSavedQuery","props","sharedQuery","then","shortUrl","catch","response","savedQueryToastContent","window","location","origin","pathname","buildButton","canShare","primary","render"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from 'src/common/components/Tooltip';\nimport { t, styled, supersetTheme } from '@superset-ui/core';\nimport cx from 'classnames';\n\nimport Button from 'src/components/Button';\nimport withToasts from 'src/messageToasts/enhancers/withToasts';\nimport Icon from 'src/components/Icon';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport { storeQuery } from 'src/utils/common';\nimport { getClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { FeatureFlag, isFeatureEnabled } from '../../featureFlags';\n\nconst propTypes = {\n  queryEditor: PropTypes.shape({\n    dbId: PropTypes.number,\n    title: PropTypes.string,\n    schema: PropTypes.string,\n    autorun: PropTypes.bool,\n    sql: PropTypes.string,\n    remoteId: PropTypes.number,\n  }).isRequired,\n  addDangerToast: PropTypes.func.isRequired,\n};\n\nconst Styles = styled.div`\n  .btn-disabled {\n    &,\n    &:hover {\n      cursor: default;\n      background-color: ${supersetTheme.colors.grayscale.light2};\n      color: ${supersetTheme.colors.grayscale.base};\n    }\n  }\n  svg {\n    vertical-align: -${supersetTheme.gridUnit * 1.25}px;\n  }\n`;\n\nclass ShareSqlLabQuery extends React.Component {\n  getCopyUrl(callback) {\n    if (isFeatureEnabled(FeatureFlag.SHARE_QUERIES_VIA_KV_STORE)) {\n      return this.getCopyUrlForKvStore(callback);\n    }\n    return this.getCopyUrlForSavedQuery(callback);\n  }\n\n  getCopyUrlForKvStore(callback) {\n    const { dbId, title, schema, autorun, sql } = this.props.queryEditor;\n    const sharedQuery = { dbId, title, schema, autorun, sql };\n\n    return storeQuery(sharedQuery)\n      .then(shortUrl => {\n        callback(shortUrl);\n      })\n      .catch(response => {\n        getClientErrorObject(response).then(() => {\n          this.props.addDangerToast(t('There was an error with your request'));\n        });\n      });\n  }\n\n  getCopyUrlForSavedQuery(callback) {\n    let savedQueryToastContent;\n\n    if (this.props.queryEditor.remoteId) {\n      savedQueryToastContent = `${\n        window.location.origin + window.location.pathname\n      }?savedQueryId=${this.props.queryEditor.remoteId}`;\n      callback(savedQueryToastContent);\n    } else {\n      savedQueryToastContent = t('Please save the query to enable sharing');\n      callback(savedQueryToastContent);\n    }\n  }\n\n  buildButton() {\n    const canShare =\n      this.props.queryEditor.remoteId ||\n      isFeatureEnabled(FeatureFlag.SHARE_QUERIES_VIA_KV_STORE);\n    return (\n      <Styles>\n        <Button buttonSize=\"small\" className={cx(!canShare && 'btn-disabled')}>\n          <Icon\n            name=\"link\"\n            color={\n              canShare\n                ? supersetTheme.colors.primary.base\n                : supersetTheme.colors.grayscale.base\n            }\n            width={20}\n            height={20}\n          />{' '}\n          {t('Copy link')}\n        </Button>\n      </Styles>\n    );\n  }\n\n  render() {\n    const canShare =\n      this.props.queryEditor.remoteId ||\n      isFeatureEnabled(FeatureFlag.SHARE_QUERIES_VIA_KV_STORE);\n    return (\n      <Tooltip\n        id=\"copy_link\"\n        placement=\"top\"\n        title={\n          canShare\n            ? t('Copy query link to your clipboard')\n            : t('Save the query to copy the link')\n        }\n      >\n        {canShare ? (\n          <CopyToClipboard\n            getText={callback => this.getCopyUrl(callback)}\n            wrapped={false}\n            copyNode={this.buildButton()}\n          />\n        ) : (\n          this.buildButton()\n        )}\n      </Tooltip>\n    );\n  }\n}\n\nShareSqlLabQuery.propTypes = propTypes;\n\nexport default withToasts(ShareSqlLabQuery);\n"]},"metadata":{},"sourceType":"module"}