{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _setTimeout from \"@babel/runtime-corejs3/core-js-stable/set-timeout\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Alert } from 'react-bootstrap';\nimport { styled } from '@superset-ui/core';\nimport cx from 'classnames';\nimport Interweave from 'interweave';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Icon from 'src/components/Icon';\nimport { ToastType } from 'src/messageToasts/constants';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst ToastContianer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    padding: 0 11px;\n  }\n`;\nexport default function Toast({ toast, onCloseToast }) {\n  const hideTimer = useRef();\n  const [visible, setVisible] = useState(false);\n  const showToast = () => {\n    setVisible(true);\n  };\n  const handleClosePress = useCallback(() => {\n    if (hideTimer.current) {\n      clearTimeout(hideTimer.current);\n    }\n    // Wait for the transition\n    setVisible(() => {\n      _setTimeout(() => {\n        onCloseToast(toast.id);\n      }, 150);\n      return false;\n    });\n  }, [onCloseToast, toast.id]);\n  useEffect(() => {\n    _setTimeout(showToast);\n    if (toast.duration > 0) {\n      hideTimer.current = _setTimeout(handleClosePress, toast.duration);\n    }\n    return () => {\n      if (hideTimer.current) {\n        clearTimeout(hideTimer.current);\n      }\n    };\n  }, [handleClosePress, toast.duration]);\n  return ___EmotionJSX(Alert, { onDismiss: handleClosePress, bsClass: cx('alert', 'toast', visible && 'toast--visible', toast.toastType === ToastType.SUCCESS && 'toast--success', toast.toastType === ToastType.WARNING && 'toast--warning', toast.toastType === ToastType.DANGER && 'toast--danger') },\n  ___EmotionJSX(ToastContianer, null,\n  toast.toastType === ToastType.SUCCESS && ___EmotionJSX(Icon, { name: \"circle-check-solid\" }),\n  toast.toastType === ToastType.WARNING ||\n  toast.toastType === ToastType.DANGER && ___EmotionJSX(Icon, { name: \"error-solid\" }),\n  ___EmotionJSX(Interweave, { content: toast.text })));\n\n\n}__signature__(Toast, \"useRef{hideTimer}\\nuseState{[visible, setVisible](false)}\\nuseCallback{handleClosePress}\\nuseEffect{}\");;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(ToastContianer, \"ToastContianer\", \"/app/superset-frontend/src/messageToasts/components/Toast.tsx\");reactHotLoader.register(Toast, \"Toast\", \"/app/superset-frontend/src/messageToasts/components/Toast.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/messageToasts/components/Toast.tsx"],"names":[],"mappings":"6aAAA;;;;;;;;;;;;;;;;;AAiBG;AACH,SAAS,KAAT,QAAsB,iBAAtB;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,OAAO,EAAP,MAAe,YAAf;AACA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAP,IAAgB,WAAhB,EAA6B,SAA7B,EAAwC,MAAxC,EAAgD,QAAhD,QAAgE,OAAhE;AACA,OAAO,IAAP,MAAiB,qBAAjB;AACA,SAAS,SAAT,QAA0B,6BAA1B,C;AAGA,MAAM,cAAc,GAAG,MAAM,CAAC,GAAG;;;;;;;;AAQhC,CARD;AAeA,eAAc,SAAU,KAAV,CAAgB,EAAE,KAAF,EAAS,YAAT,EAAhB,EAA4D;AACxE,QAAM,SAAS,GAAG,MAAM,EAAxB;AACA,QAAM,CAAC,OAAD,EAAU,UAAV,IAAwB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,SAAS,GAAG,MAAK;AACrB,IAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;AAIA,QAAM,gBAAgB,GAAG,WAAW,CAAC,MAAK;AACxC,QAAI,SAAS,CAAC,OAAd,EAAuB;AACrB,MAAA,YAAY,CAAC,SAAS,CAAC,OAAX,CAAZ;AACD;AACD;AACA,IAAA,UAAU,CAAC,MAAK;AACd,kBAAW,MAAK;AACd,QAAA,YAAY,CAAC,KAAK,CAAC,EAAP,CAAZ;AACD,OAFD,EAEG,GAFH;AAGA,aAAO,KAAP;AACD,KALS,CAAV;AAMD,GAXmC,EAWjC,CAAC,YAAD,EAAe,KAAK,CAAC,EAArB,CAXiC,CAApC;AAaA,EAAA,SAAS,CAAC,MAAK;AACb,gBAAW,SAAX;AAEA,QAAI,KAAK,CAAC,QAAN,GAAiB,CAArB,EAAwB;AACtB,MAAA,SAAS,CAAC,OAAV,GAAoB,YAAW,gBAAX,EAA6B,KAAK,CAAC,QAAnC,CAApB;AACD;AACD,WAAO,MAAK;AACV,UAAI,SAAS,CAAC,OAAd,EAAuB;AACrB,QAAA,YAAY,CAAC,SAAS,CAAC,OAAX,CAAZ;AACD;AACF,KAJD;AAKD,GAXQ,EAWN,CAAC,gBAAD,EAAmB,KAAK,CAAC,QAAzB,CAXM,CAAT;AAaA,SACE,cAAC,KAAD,IACE,SAAS,EAAE,gBADb,EAEE,OAAO,EAAE,EAAE,CACT,OADS,EAET,OAFS,EAGT,OAAO,IAAI,gBAHF,EAIT,KAAK,CAAC,SAAN,KAAoB,SAAS,CAAC,OAA9B,IAAyC,gBAJhC,EAKT,KAAK,CAAC,SAAN,KAAoB,SAAS,CAAC,OAA9B,IAAyC,gBALhC,EAMT,KAAK,CAAC,SAAN,KAAoB,SAAS,CAAC,MAA9B,IAAwC,eAN/B,CAFb;AAWE,gBAAC,cAAD;AACG,EAAA,KAAK,CAAC,SAAN,KAAoB,SAAS,CAAC,OAA9B,IACC,cAAC,IAAD,IAAM,IAAI,EAAC,oBAAX,GAFJ;AAIG,EAAA,KAAK,CAAC,SAAN,KAAoB,SAAS,CAAC,OAA9B;AACE,EAAA,KAAK,CAAC,SAAN,KAAoB,SAAS,CAAC,MAA9B,IAAwC,cAAC,IAAD,IAAM,IAAI,EAAC,aAAX,GAL7C;AAME,gBAAC,UAAD,IAAY,OAAO,EAAE,KAAK,CAAC,IAA3B,GANF,CAXF,CADF;;;AAsBD,C,cAvDuB,K,4RAflB,c,6GAekB,K","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Alert } from 'react-bootstrap';\nimport { styled } from '@superset-ui/core';\nimport cx from 'classnames';\nimport Interweave from 'interweave';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Icon from 'src/components/Icon';\nimport { ToastType } from 'src/messageToasts/constants';\nimport { ToastMeta } from '../types';\n\nconst ToastContianer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    padding: 0 11px;\n  }\n`;\n\ninterface ToastPresenterProps {\n  toast: ToastMeta;\n  onCloseToast: (id: string) => void;\n}\n\nexport default function Toast({ toast, onCloseToast }: ToastPresenterProps) {\n  const hideTimer = useRef<ReturnType<typeof setTimeout>>();\n  const [visible, setVisible] = useState(false);\n  const showToast = () => {\n    setVisible(true);\n  };\n\n  const handleClosePress = useCallback(() => {\n    if (hideTimer.current) {\n      clearTimeout(hideTimer.current);\n    }\n    // Wait for the transition\n    setVisible(() => {\n      setTimeout(() => {\n        onCloseToast(toast.id);\n      }, 150);\n      return false;\n    });\n  }, [onCloseToast, toast.id]);\n\n  useEffect(() => {\n    setTimeout(showToast);\n\n    if (toast.duration > 0) {\n      hideTimer.current = setTimeout(handleClosePress, toast.duration);\n    }\n    return () => {\n      if (hideTimer.current) {\n        clearTimeout(hideTimer.current);\n      }\n    };\n  }, [handleClosePress, toast.duration]);\n\n  return (\n    <Alert\n      onDismiss={handleClosePress}\n      bsClass={cx(\n        'alert',\n        'toast',\n        visible && 'toast--visible',\n        toast.toastType === ToastType.SUCCESS && 'toast--success',\n        toast.toastType === ToastType.WARNING && 'toast--warning',\n        toast.toastType === ToastType.DANGER && 'toast--danger',\n      )}\n    >\n      <ToastContianer>\n        {toast.toastType === ToastType.SUCCESS && (\n          <Icon name=\"circle-check-solid\" />\n        )}\n        {toast.toastType === ToastType.WARNING ||\n          (toast.toastType === ToastType.DANGER && <Icon name=\"error-solid\" />)}\n        <Interweave content={toast.text} />\n      </ToastContianer>\n    </Alert>\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}