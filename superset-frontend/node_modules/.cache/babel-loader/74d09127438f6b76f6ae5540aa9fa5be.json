{"ast":null,"code":"import \"core-js/modules/web.dom-collections.iterator.js\";import _findInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/find\";import _mapInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/map\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, t } from '@superset-ui/core';\nimport React, { useCallback, useState } from 'react';\nimport { Button, Checkbox, Form, Input, Radio, Typography } from 'src/common/components';\nimport { Select } from 'src/components/Select/SupersetStyledSelect';\nimport SupersetResourceSelect from 'src/components/SupersetResourceSelect';\nimport { addDangerToast } from 'src/messageToasts/actions';\nimport { ColumnSelect } from './ColumnSelect';\nimport ScopingTree from './ScopingTree';\nimport { Scoping } from './types';import { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst datasetToSelectOption = item => ({\n  value: item.id,\n  label: item.table_name });\n\nconst ScopingTreeNote = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nconst RemovedContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 400px; // arbitrary\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n`;\nconst StyledFormItem = styled(Form.Item)`\n  width: 49%;\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n`;\nconst StyledCheckboxFormItem = styled(Form.Item)`\n  margin-bottom: 0;\n`;\nconst StyledLabel = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s};\n  text-transform: uppercase;\n`;\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nexport const FilterConfigForm = ({ filterId, filterToEdit, removed, restore, form, parentFilters }) => {var _filterToEdit$targets, _filterToEdit$targets2;\n  const [advancedScopingOpen, setAdvancedScopingOpen] = useState(Scoping.all);\n  const [dataset, setDataset] = useState();\n  const onDatasetSelectError = useCallback(({ error, message }) => {\n    let errorText = message || error || t('An error has occurred');\n    if (message === 'Forbidden') {\n      errorText = t('You do not have permission to edit this dashboard');\n    }\n    addDangerToast(errorText);\n  }, []);\n  const setFilterScope = useCallback(value => {\n    form.setFields([{ name: ['filters', filterId, 'scope'], value }]);\n  }, [form, filterId]);\n  if (removed) {\n    return ___EmotionJSX(RemovedContent, null,\n    ___EmotionJSX(\"p\", null, t('You have removed this filter.')),\n    ___EmotionJSX(\"div\", null,\n    ___EmotionJSX(Button, { type: \"primary\", onClick: () => restore(filterId) },\n    t('Restore filter'))));\n\n\n\n  }\n  const parentFilterOptions = _mapInstanceProperty(parentFilters).call(parentFilters, filter => ({\n    value: filter.id,\n    label: filter.title }));\n\n  return ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(Typography.Title, { level: 5 }, t('Settings')),\n  ___EmotionJSX(StyledContainer, null,\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'name'], label: ___EmotionJSX(StyledLabel, null, t('Filter name')), initialValue: filterToEdit == null ? void 0 : filterToEdit.name, rules: [{ required: !removed, message: t('Name is required') }], \"data-test\": \"name-input\" },\n  ___EmotionJSX(Input, null)),\n\n\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'dataset'], label: ___EmotionJSX(StyledLabel, null, t('Datasource')), rules: [{ required: !removed, message: t('Datasource is required') }], \"data-test\": \"datasource-input\" },\n  ___EmotionJSX(SupersetResourceSelect, { initialId: filterToEdit == null ? void 0 : filterToEdit.targets[0].datasetId, resource: \"dataset\", searchColumn: \"table_name\", transformItem: datasetToSelectOption, isMulti: false, onChange: setDataset, onError: onDatasetSelectError }))),\n\n\n  ___EmotionJSX(StyledFormItem\n  // don't show the column select unless we have a dataset\n  // style={{ display: datasetId == null ? undefined : 'none' }}\n  , { name: ['filters', filterId, 'column'], initialValue: filterToEdit == null ? void 0 : (_filterToEdit$targets = filterToEdit.targets[0]) == null ? void 0 : (_filterToEdit$targets2 = _filterToEdit$targets.column) == null ? void 0 : _filterToEdit$targets2.name, label: ___EmotionJSX(StyledLabel, null, t('Field')), rules: [{ required: !removed, message: t('Field is required') }], \"data-test\": \"field-input\" },\n  ___EmotionJSX(ColumnSelect, { form: form, filterId: filterId, datasetId: dataset == null ? void 0 : dataset.value })),\n\n\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'defaultValue'], label: ___EmotionJSX(StyledLabel, null, t('Default Value')), initialValue: filterToEdit == null ? void 0 : filterToEdit.defaultValue },\n  ___EmotionJSX(Input, null)),\n\n  ___EmotionJSX(StyledFormItem, { name: ['filters', filterId, 'parentFilter'], label: ___EmotionJSX(StyledLabel, null, t('Parent filter')), initialValue: _findInstanceProperty(parentFilterOptions).call(parentFilterOptions, ({ value }) => value === (filterToEdit == null ? void 0 : filterToEdit.cascadeParentIds[0])) },\n  ___EmotionJSX(Select, { placeholder: t('None'), options: parentFilterOptions, isClearable: true })),\n\n\n  ___EmotionJSX(StyledCheckboxFormItem, { name: ['filters', filterId, 'isInstant'], initialValue: filterToEdit == null ? void 0 : filterToEdit.isInstant, valuePropName: \"checked\", colon: false },\n  ___EmotionJSX(Checkbox, null, t('Apply changes instantly'))),\n\n  ___EmotionJSX(StyledCheckboxFormItem, { name: ['filters', filterId, 'allowsMultipleValues'], initialValue: filterToEdit == null ? void 0 : filterToEdit.allowsMultipleValues, valuePropName: \"checked\", colon: false },\n  ___EmotionJSX(Checkbox, null, t('Allow multiple selections'))),\n\n  ___EmotionJSX(StyledCheckboxFormItem, { name: ['filters', filterId, 'inverseSelection'], initialValue: filterToEdit == null ? void 0 : filterToEdit.inverseSelection, valuePropName: \"checked\", colon: false },\n  ___EmotionJSX(Checkbox, null, t('Inverse selection'))),\n\n  ___EmotionJSX(StyledCheckboxFormItem, { name: ['filters', filterId, 'isRequired'], initialValue: filterToEdit == null ? void 0 : filterToEdit.isRequired, valuePropName: \"checked\", colon: false },\n  ___EmotionJSX(Checkbox, null, t('Required'))),\n\n  ___EmotionJSX(Typography.Title, { level: 5 }, t('Scoping')),\n  ___EmotionJSX(StyledCheckboxFormItem, { name: ['filters', filterId, 'scoping'], initialValue: advancedScopingOpen },\n  ___EmotionJSX(Radio.Group, { onChange: ({ target: { value } }) => {\n      setAdvancedScopingOpen(value);\n    } },\n  ___EmotionJSX(Radio, { value: Scoping.all }, t('Apply to all panels')),\n  ___EmotionJSX(Radio, { value: Scoping.specific },\n  t('Apply to specific panels')))),\n\n\n\n  ___EmotionJSX(React.Fragment, null,\n  ___EmotionJSX(ScopingTreeNote, null,\n  ___EmotionJSX(Typography.Text, { type: \"secondary\" },\n  advancedScopingOpen === Scoping.specific ?\n  t('Only selected panels will be affected by this filter') :\n  t('All panels with this column will be affected by this filter'))),\n\n\n  advancedScopingOpen === Scoping.specific && ___EmotionJSX(ScopingTree, { setFilterScope: setFilterScope })));\n\n\n};__signature__(FilterConfigForm, \"useState{[advancedScopingOpen, setAdvancedScopingOpen](Scoping.all)}\\nuseState{[dataset, setDataset]}\\nuseCallback{onDatasetSelectError}\\nuseCallback{setFilterScope}\");const _default =\nFilterConfigForm;export default _default;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(datasetToSelectOption, \"datasetToSelectOption\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterConfigForm.tsx\");reactHotLoader.register(ScopingTreeNote, \"ScopingTreeNote\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterConfigForm.tsx\");reactHotLoader.register(RemovedContent, \"RemovedContent\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterConfigForm.tsx\");reactHotLoader.register(StyledContainer, \"StyledContainer\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterConfigForm.tsx\");reactHotLoader.register(StyledFormItem, \"StyledFormItem\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterConfigForm.tsx\");reactHotLoader.register(StyledCheckboxFormItem, \"StyledCheckboxFormItem\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterConfigForm.tsx\");reactHotLoader.register(StyledLabel, \"StyledLabel\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterConfigForm.tsx\");reactHotLoader.register(FilterConfigForm, \"FilterConfigForm\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterConfigForm.tsx\");reactHotLoader.register(_default, \"default\", \"/app/superset-frontend/src/dashboard/components/nativeFilters/FilterConfigForm.tsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/dashboard/components/nativeFilters/FilterConfigForm.tsx"],"names":[],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, t } from '@superset-ui/core';\nimport { FormInstance } from 'antd/lib/form';\nimport React, { useCallback, useState } from 'react';\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  Radio,\n  Typography,\n} from 'src/common/components';\nimport { Select } from 'src/components/Select/SupersetStyledSelect';\nimport SupersetResourceSelect, {\n  Value,\n} from 'src/components/SupersetResourceSelect';\nimport { addDangerToast } from 'src/messageToasts/actions';\nimport { ClientErrorObject } from 'src/utils/getClientErrorObject';\nimport { ColumnSelect } from './ColumnSelect';\nimport ScopingTree from './ScopingTree';\nimport { Filter, NativeFiltersForm, Scoping } from './types';\n\ntype DatasetSelectValue = {\n  value: number;\n  label: string;\n};\n\nconst datasetToSelectOption = (item: any): DatasetSelectValue => ({\n  value: item.id,\n  label: item.table_name,\n});\n\nconst ScopingTreeNote = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nconst RemovedContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 400px; // arbitrary\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.grayscale.base};\n`;\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n`;\n\nconst StyledFormItem = styled(Form.Item)`\n  width: 49%;\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n`;\n\nconst StyledCheckboxFormItem = styled(Form.Item)`\n  margin-bottom: 0;\n`;\n\nconst StyledLabel = styled.span`\n  color: ${({ theme }) => theme.colors.grayscale.base};\n  font-size: ${({ theme }) => theme.typography.sizes.s};\n  text-transform: uppercase;\n`;\n\nexport interface FilterConfigFormProps {\n  filterId: string;\n  filterToEdit?: Filter;\n  removed?: boolean;\n  restore: (filterId: string) => void;\n  form: FormInstance<NativeFiltersForm>;\n  parentFilters: { id: string; title: string }[];\n}\n\n/**\n * The configuration form for a specific filter.\n * Assigns field values to `filters[filterId]` in the form.\n */\nexport const FilterConfigForm: React.FC<FilterConfigFormProps> = ({\n  filterId,\n  filterToEdit,\n  removed,\n  restore,\n  form,\n  parentFilters,\n}) => {\n  const [advancedScopingOpen, setAdvancedScopingOpen] = useState<Scoping>(\n    Scoping.all,\n  );\n  const [dataset, setDataset] = useState<Value<number> | undefined>();\n\n  const onDatasetSelectError = useCallback(\n    ({ error, message }: ClientErrorObject) => {\n      let errorText = message || error || t('An error has occurred');\n      if (message === 'Forbidden') {\n        errorText = t('You do not have permission to edit this dashboard');\n      }\n      addDangerToast(errorText);\n    },\n    [],\n  );\n\n  const setFilterScope = useCallback(\n    value => {\n      form.setFields([{ name: ['filters', filterId, 'scope'], value }]);\n    },\n    [form, filterId],\n  );\n\n  if (removed) {\n    return (\n      <RemovedContent>\n        <p>{t('You have removed this filter.')}</p>\n        <div>\n          <Button type=\"primary\" onClick={() => restore(filterId)}>\n            {t('Restore filter')}\n          </Button>\n        </div>\n      </RemovedContent>\n    );\n  }\n\n  const parentFilterOptions = parentFilters.map(filter => ({\n    value: filter.id,\n    label: filter.title,\n  }));\n\n  return (\n    <>\n      <Typography.Title level={5}>{t('Settings')}</Typography.Title>\n      <StyledContainer>\n        <StyledFormItem\n          name={['filters', filterId, 'name']}\n          label={<StyledLabel>{t('Filter name')}</StyledLabel>}\n          initialValue={filterToEdit?.name}\n          rules={[{ required: !removed, message: t('Name is required') }]}\n          data-test=\"name-input\"\n        >\n          <Input />\n        </StyledFormItem>\n\n        <StyledFormItem\n          name={['filters', filterId, 'dataset']}\n          label={<StyledLabel>{t('Datasource')}</StyledLabel>}\n          rules={[{ required: !removed, message: t('Datasource is required') }]}\n          data-test=\"datasource-input\"\n        >\n          <SupersetResourceSelect\n            initialId={filterToEdit?.targets[0].datasetId}\n            resource=\"dataset\"\n            searchColumn=\"table_name\"\n            transformItem={datasetToSelectOption}\n            isMulti={false}\n            onChange={setDataset}\n            onError={onDatasetSelectError}\n          />\n        </StyledFormItem>\n      </StyledContainer>\n      <StyledFormItem\n        // don't show the column select unless we have a dataset\n        // style={{ display: datasetId == null ? undefined : 'none' }}\n        name={['filters', filterId, 'column']}\n        initialValue={filterToEdit?.targets[0]?.column?.name}\n        label={<StyledLabel>{t('Field')}</StyledLabel>}\n        rules={[{ required: !removed, message: t('Field is required') }]}\n        data-test=\"field-input\"\n      >\n        <ColumnSelect\n          form={form}\n          filterId={filterId}\n          datasetId={dataset?.value}\n        />\n      </StyledFormItem>\n\n      <StyledFormItem\n        name={['filters', filterId, 'defaultValue']}\n        label={<StyledLabel>{t('Default Value')}</StyledLabel>}\n        initialValue={filterToEdit?.defaultValue}\n      >\n        <Input />\n      </StyledFormItem>\n      <StyledFormItem\n        name={['filters', filterId, 'parentFilter']}\n        label={<StyledLabel>{t('Parent filter')}</StyledLabel>}\n        initialValue={parentFilterOptions.find(\n          ({ value }) => value === filterToEdit?.cascadeParentIds[0],\n        )}\n      >\n        <Select\n          placeholder={t('None')}\n          options={parentFilterOptions}\n          isClearable\n        />\n      </StyledFormItem>\n\n      <StyledCheckboxFormItem\n        name={['filters', filterId, 'isInstant']}\n        initialValue={filterToEdit?.isInstant}\n        valuePropName=\"checked\"\n        colon={false}\n      >\n        <Checkbox>{t('Apply changes instantly')}</Checkbox>\n      </StyledCheckboxFormItem>\n      <StyledCheckboxFormItem\n        name={['filters', filterId, 'allowsMultipleValues']}\n        initialValue={filterToEdit?.allowsMultipleValues}\n        valuePropName=\"checked\"\n        colon={false}\n      >\n        <Checkbox>{t('Allow multiple selections')}</Checkbox>\n      </StyledCheckboxFormItem>\n      <StyledCheckboxFormItem\n        name={['filters', filterId, 'inverseSelection']}\n        initialValue={filterToEdit?.inverseSelection}\n        valuePropName=\"checked\"\n        colon={false}\n      >\n        <Checkbox>{t('Inverse selection')}</Checkbox>\n      </StyledCheckboxFormItem>\n      <StyledCheckboxFormItem\n        name={['filters', filterId, 'isRequired']}\n        initialValue={filterToEdit?.isRequired}\n        valuePropName=\"checked\"\n        colon={false}\n      >\n        <Checkbox>{t('Required')}</Checkbox>\n      </StyledCheckboxFormItem>\n      <Typography.Title level={5}>{t('Scoping')}</Typography.Title>\n      <StyledCheckboxFormItem\n        name={['filters', filterId, 'scoping']}\n        initialValue={advancedScopingOpen}\n      >\n        <Radio.Group\n          onChange={({ target: { value } }) => {\n            setAdvancedScopingOpen(value as Scoping);\n          }}\n        >\n          <Radio value={Scoping.all}>{t('Apply to all panels')}</Radio>\n          <Radio value={Scoping.specific}>\n            {t('Apply to specific panels')}\n          </Radio>\n        </Radio.Group>\n      </StyledCheckboxFormItem>\n      <>\n        <ScopingTreeNote>\n          <Typography.Text type=\"secondary\">\n            {advancedScopingOpen === Scoping.specific\n              ? t('Only selected panels will be affected by this filter')\n              : t(\n                  'All panels with this column will be affected by this filter',\n                )}\n          </Typography.Text>\n        </ScopingTreeNote>\n        {advancedScopingOpen === Scoping.specific && (\n          <ScopingTree setFilterScope={setFilterScope} />\n        )}\n      </>\n    </>\n  );\n};\n\nexport default FilterConfigForm;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}