{"ast":null,"code":"import _bindInstanceProperty from \"@babel/runtime-corejs3/core-js-stable/instance/bind\";(function () {var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;enterModule && enterModule(module);})();var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {return a;}; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { t } from '@superset-ui/core';\n\nimport URLShortLinkButton from '../../components/URLShortLinkButton';\nimport EmbedCodeButton from './EmbedCodeButton';\nimport ConnectedDisplayQueryButton from './DisplayQueryButton';\nimport { exportChart, getExploreLongUrl } from '../exploreUtils';import { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  canDownload: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).\n  isRequired,\n  chartStatus: PropTypes.string,\n  chartHeight: PropTypes.string.isRequired,\n  latestQueryFormData: PropTypes.object,\n  queriesResponse: PropTypes.arrayOf(PropTypes.object),\n  slice: PropTypes.object };\n\n\nexport default function ExploreActionButtons({\n  actions,\n  canDownload,\n  chartHeight,\n  chartStatus,\n  latestQueryFormData,\n  queriesResponse,\n  slice })\n{\n  const exportToCSVClasses = cx('btn btn-default btn-sm', {\n    disabled: !canDownload });\n\n  const doExportCSV = _bindInstanceProperty(exportChart).call(exportChart, this, {\n    formData: latestQueryFormData,\n    resultType: 'results',\n    resultFormat: 'csv' });\n\n  const doExportChart = _bindInstanceProperty(exportChart).call(exportChart, this, {\n    formData: latestQueryFormData,\n    resultType: 'results',\n    resultFormat: 'json' });\n\n\n  return (\n    ___EmotionJSX(\"div\", {\n      className: \"btn-group results\",\n      role: \"group\",\n      \"data-test\": \"btn-group-results\" },\n\n    latestQueryFormData &&\n    ___EmotionJSX(URLShortLinkButton, {\n      url: getExploreLongUrl(latestQueryFormData),\n      emailSubject: \"Superset Chart\",\n      emailContent: \"Check out this chart: \" }),\n\n\n\n    latestQueryFormData &&\n    ___EmotionJSX(EmbedCodeButton, { latestQueryFormData: latestQueryFormData }),\n\n\n    latestQueryFormData &&\n    ___EmotionJSX(\"div\", {\n      role: \"button\",\n      tabIndex: 0,\n      onClick: doExportChart,\n      className: \"btn btn-default btn-sm\",\n      title: t('Export to .json'),\n      target: \"_blank\",\n      rel: \"noopener noreferrer\" },\n\n    ___EmotionJSX(\"i\", { className: \"fa fa-file-code-o\" }), \" .json\"),\n\n\n    latestQueryFormData &&\n    ___EmotionJSX(\"div\", {\n      role: \"button\",\n      tabIndex: 0,\n      onClick: doExportCSV,\n      className: exportToCSVClasses,\n      title: t('Export to .csv format'),\n      target: \"_blank\",\n      rel: \"noopener noreferrer\" },\n\n    ___EmotionJSX(\"i\", { className: \"fa fa-file-text-o\" }), \" .csv\"),\n\n\n    ___EmotionJSX(ConnectedDisplayQueryButton, {\n      chartHeight: chartHeight,\n      queryResponse: queriesResponse == null ? void 0 : queriesResponse[0],\n      latestQueryFormData: latestQueryFormData,\n      chartStatus: chartStatus,\n      onOpenInEditor: actions.redirectSQLLab,\n      onOpenPropertiesModal: actions.openPropertiesModal,\n      slice: slice })));\n\n\n\n}\n\nExploreActionButtons.propTypes = propTypes;;(function () {var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;if (!reactHotLoader) {return;}reactHotLoader.register(propTypes, \"propTypes\", \"/app/superset-frontend/src/explore/components/ExploreActionButtons.jsx\");reactHotLoader.register(ExploreActionButtons, \"ExploreActionButtons\", \"/app/superset-frontend/src/explore/components/ExploreActionButtons.jsx\");})();;(function () {var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;leaveModule && leaveModule(module);})();","map":{"version":3,"sources":["/app/superset-frontend/src/explore/components/ExploreActionButtons.jsx"],"names":["React","PropTypes","cx","t","URLShortLinkButton","EmbedCodeButton","ConnectedDisplayQueryButton","exportChart","getExploreLongUrl","propTypes","actions","object","isRequired","canDownload","oneOfType","string","bool","chartStatus","chartHeight","latestQueryFormData","queriesResponse","arrayOf","slice","ExploreActionButtons","exportToCSVClasses","disabled","doExportCSV","formData","resultType","resultFormat","doExportChart","redirectSQLLab","openPropertiesModal"],"mappings":"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","sourcesContent":["/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { t } from '@superset-ui/core';\n\nimport URLShortLinkButton from '../../components/URLShortLinkButton';\nimport EmbedCodeButton from './EmbedCodeButton';\nimport ConnectedDisplayQueryButton from './DisplayQueryButton';\nimport { exportChart, getExploreLongUrl } from '../exploreUtils';\n\nconst propTypes = {\n  actions: PropTypes.object.isRequired,\n  canDownload: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n    .isRequired,\n  chartStatus: PropTypes.string,\n  chartHeight: PropTypes.string.isRequired,\n  latestQueryFormData: PropTypes.object,\n  queriesResponse: PropTypes.arrayOf(PropTypes.object),\n  slice: PropTypes.object,\n};\n\nexport default function ExploreActionButtons({\n  actions,\n  canDownload,\n  chartHeight,\n  chartStatus,\n  latestQueryFormData,\n  queriesResponse,\n  slice,\n}) {\n  const exportToCSVClasses = cx('btn btn-default btn-sm', {\n    disabled: !canDownload,\n  });\n  const doExportCSV = exportChart.bind(this, {\n    formData: latestQueryFormData,\n    resultType: 'results',\n    resultFormat: 'csv',\n  });\n  const doExportChart = exportChart.bind(this, {\n    formData: latestQueryFormData,\n    resultType: 'results',\n    resultFormat: 'json',\n  });\n\n  return (\n    <div\n      className=\"btn-group results\"\n      role=\"group\"\n      data-test=\"btn-group-results\"\n    >\n      {latestQueryFormData && (\n        <URLShortLinkButton\n          url={getExploreLongUrl(latestQueryFormData)}\n          emailSubject=\"Superset Chart\"\n          emailContent=\"Check out this chart: \"\n        />\n      )}\n\n      {latestQueryFormData && (\n        <EmbedCodeButton latestQueryFormData={latestQueryFormData} />\n      )}\n\n      {latestQueryFormData && (\n        <div\n          role=\"button\"\n          tabIndex={0}\n          onClick={doExportChart}\n          className=\"btn btn-default btn-sm\"\n          title={t('Export to .json')}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fa fa-file-code-o\" /> .json\n        </div>\n      )}\n      {latestQueryFormData && (\n        <div\n          role=\"button\"\n          tabIndex={0}\n          onClick={doExportCSV}\n          className={exportToCSVClasses}\n          title={t('Export to .csv format')}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fa fa-file-text-o\" /> .csv\n        </div>\n      )}\n      <ConnectedDisplayQueryButton\n        chartHeight={chartHeight}\n        queryResponse={queriesResponse?.[0]}\n        latestQueryFormData={latestQueryFormData}\n        chartStatus={chartStatus}\n        onOpenInEditor={actions.redirectSQLLab}\n        onOpenPropertiesModal={actions.openPropertiesModal}\n        slice={slice}\n      />\n    </div>\n  );\n}\n\nExploreActionButtons.propTypes = propTypes;\n"]},"metadata":{},"sourceType":"module"}